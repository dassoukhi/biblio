{"file":"C:\\Users\\Dass\\Desktop\\Master1_YNOV\\DevLogiciel\\biblio\\src\\test\\javascript\\spec\\app\\account\\register\\register.component.spec.ts","mappings":"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","names":[],"sources":["C:\\Users\\Dass\\Desktop\\Master1_YNOV\\DevLogiciel\\biblio\\src\\test\\javascript\\spec\\app\\account\\register\\register.component.spec.ts"],"sourcesContent":["import { ComponentFixture, TestBed, async, inject, tick, fakeAsync } from '@angular/core/testing';\r\nimport { FormBuilder } from '@angular/forms';\r\nimport { of, throwError } from 'rxjs';\r\n\r\nimport { BiblioTestModule } from '../../../test.module';\r\nimport { EMAIL_ALREADY_USED_TYPE, LOGIN_ALREADY_USED_TYPE } from 'app/shared/constants/error.constants';\r\nimport { RegisterService } from 'app/account/register/register.service';\r\nimport { RegisterComponent } from 'app/account/register/register.component';\r\n\r\ndescribe('Component Tests', () => {\r\n  describe('RegisterComponent', () => {\r\n    let fixture: ComponentFixture<RegisterComponent>;\r\n    let comp: RegisterComponent;\r\n\r\n    beforeEach(async(() => {\r\n      TestBed.configureTestingModule({\r\n        imports: [BiblioTestModule],\r\n        declarations: [RegisterComponent],\r\n        providers: [FormBuilder],\r\n      })\r\n        .overrideTemplate(RegisterComponent, '')\r\n        .compileComponents();\r\n    }));\r\n\r\n    beforeEach(() => {\r\n      fixture = TestBed.createComponent(RegisterComponent);\r\n      comp = fixture.componentInstance;\r\n    });\r\n\r\n    it('should ensure the two passwords entered match', () => {\r\n      comp.registerForm.patchValue({\r\n        password: 'password',\r\n        confirmPassword: 'non-matching',\r\n      });\r\n\r\n      comp.register();\r\n\r\n      expect(comp.doNotMatch).toBe(true);\r\n    });\r\n\r\n    it('should update success to true after creating an account', inject(\r\n      [RegisterService],\r\n      fakeAsync((service: RegisterService) => {\r\n        spyOn(service, 'save').and.returnValue(of({}));\r\n        comp.registerForm.patchValue({\r\n          password: 'password',\r\n          confirmPassword: 'password',\r\n        });\r\n\r\n        comp.register();\r\n        tick();\r\n\r\n        expect(service.save).toHaveBeenCalledWith({\r\n          email: '',\r\n          password: 'password',\r\n          login: '',\r\n          langKey: 'en',\r\n        });\r\n        expect(comp.success).toBe(true);\r\n        expect(comp.errorUserExists).toBe(false);\r\n        expect(comp.errorEmailExists).toBe(false);\r\n        expect(comp.error).toBe(false);\r\n      })\r\n    ));\r\n\r\n    it('should notify of user existence upon 400/login already in use', inject(\r\n      [RegisterService],\r\n      fakeAsync((service: RegisterService) => {\r\n        spyOn(service, 'save').and.returnValue(\r\n          throwError({\r\n            status: 400,\r\n            error: { type: LOGIN_ALREADY_USED_TYPE },\r\n          })\r\n        );\r\n        comp.registerForm.patchValue({\r\n          password: 'password',\r\n          confirmPassword: 'password',\r\n        });\r\n\r\n        comp.register();\r\n        tick();\r\n\r\n        expect(comp.errorUserExists).toBe(true);\r\n        expect(comp.errorEmailExists).toBe(false);\r\n        expect(comp.error).toBe(false);\r\n      })\r\n    ));\r\n\r\n    it('should notify of email existence upon 400/email address already in use', inject(\r\n      [RegisterService],\r\n      fakeAsync((service: RegisterService) => {\r\n        spyOn(service, 'save').and.returnValue(\r\n          throwError({\r\n            status: 400,\r\n            error: { type: EMAIL_ALREADY_USED_TYPE },\r\n          })\r\n        );\r\n        comp.registerForm.patchValue({\r\n          password: 'password',\r\n          confirmPassword: 'password',\r\n        });\r\n\r\n        comp.register();\r\n        tick();\r\n\r\n        expect(comp.errorEmailExists).toBe(true);\r\n        expect(comp.errorUserExists).toBe(false);\r\n        expect(comp.error).toBe(false);\r\n      })\r\n    ));\r\n\r\n    it('should notify of generic error', inject(\r\n      [RegisterService],\r\n      fakeAsync((service: RegisterService) => {\r\n        spyOn(service, 'save').and.returnValue(\r\n          throwError({\r\n            status: 503,\r\n          })\r\n        );\r\n        comp.registerForm.patchValue({\r\n          password: 'password',\r\n          confirmPassword: 'password',\r\n        });\r\n\r\n        comp.register();\r\n        tick();\r\n\r\n        expect(comp.errorUserExists).toBe(false);\r\n        expect(comp.errorEmailExists).toBe(false);\r\n        expect(comp.error).toBe(true);\r\n      })\r\n    ));\r\n  });\r\n});\r\n"],"version":3}