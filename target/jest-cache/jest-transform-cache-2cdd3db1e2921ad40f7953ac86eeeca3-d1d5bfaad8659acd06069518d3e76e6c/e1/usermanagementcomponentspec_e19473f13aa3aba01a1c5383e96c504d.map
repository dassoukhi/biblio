{"file":"C:\\Users\\Dass\\Desktop\\Master1_YNOV\\DevLogiciel\\biblio\\src\\test\\javascript\\spec\\app\\admin\\user-management\\user-management.component.spec.ts","mappings":"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","names":[],"sources":["C:\\Users\\Dass\\Desktop\\Master1_YNOV\\DevLogiciel\\biblio\\src\\test\\javascript\\spec\\app\\admin\\user-management\\user-management.component.spec.ts"],"sourcesContent":["import { ComponentFixture, TestBed, async, inject, fakeAsync, tick } from '@angular/core/testing';\r\nimport { HttpHeaders, HttpResponse } from '@angular/common/http';\r\nimport { of } from 'rxjs';\r\n\r\nimport { BiblioTestModule } from '../../../test.module';\r\nimport { UserManagementComponent } from 'app/admin/user-management/user-management.component';\r\nimport { UserService } from 'app/core/user/user.service';\r\nimport { User } from 'app/core/user/user.model';\r\n\r\ndescribe('Component Tests', () => {\r\n  describe('User Management Component', () => {\r\n    let comp: UserManagementComponent;\r\n    let fixture: ComponentFixture<UserManagementComponent>;\r\n    let service: UserService;\r\n\r\n    beforeEach(async(() => {\r\n      TestBed.configureTestingModule({\r\n        imports: [BiblioTestModule],\r\n        declarations: [UserManagementComponent],\r\n      })\r\n        .overrideTemplate(UserManagementComponent, '')\r\n        .compileComponents();\r\n    }));\r\n\r\n    beforeEach(() => {\r\n      fixture = TestBed.createComponent(UserManagementComponent);\r\n      comp = fixture.componentInstance;\r\n      service = fixture.debugElement.injector.get(UserService);\r\n    });\r\n\r\n    describe('OnInit', () => {\r\n      it('Should call load all on init', inject(\r\n        [],\r\n        fakeAsync(() => {\r\n          // GIVEN\r\n          const headers = new HttpHeaders().append('link', 'link;link');\r\n          spyOn(service, 'query').and.returnValue(\r\n            of(\r\n              new HttpResponse({\r\n                body: [new User(123)],\r\n                headers,\r\n              })\r\n            )\r\n          );\r\n\r\n          // WHEN\r\n          comp.ngOnInit();\r\n          tick(); // simulate async\r\n\r\n          // THEN\r\n          expect(service.query).toHaveBeenCalled();\r\n          expect(comp.users && comp.users[0]).toEqual(jasmine.objectContaining({ id: 123 }));\r\n        })\r\n      ));\r\n    });\r\n\r\n    describe('setActive', () => {\r\n      it('Should update user and call load all', inject(\r\n        [],\r\n        fakeAsync(() => {\r\n          // GIVEN\r\n          const headers = new HttpHeaders().append('link', 'link;link');\r\n          const user = new User(123);\r\n          spyOn(service, 'query').and.returnValue(\r\n            of(\r\n              new HttpResponse({\r\n                body: [user],\r\n                headers,\r\n              })\r\n            )\r\n          );\r\n          spyOn(service, 'update').and.returnValue(of(new HttpResponse({ status: 200 })));\r\n\r\n          // WHEN\r\n          comp.setActive(user, true);\r\n          tick(); // simulate async\r\n\r\n          // THEN\r\n          expect(service.update).toHaveBeenCalledWith({ ...user, activated: true });\r\n          expect(service.query).toHaveBeenCalled();\r\n          expect(comp.users && comp.users[0]).toEqual(jasmine.objectContaining({ id: 123 }));\r\n        })\r\n      ));\r\n    });\r\n  });\r\n});\r\n"],"version":3}