908e95d404d1b369d52a9bd75a4b7b62
"use strict";

/* istanbul ignore next */
function cov_176urgoltp() {
  var path = "C:\\Users\\Dass\\Desktop\\Master1_YNOV\\DevLogiciel\\biblio\\src\\main\\webapp\\app\\account\\password-reset\\finish\\password-reset-finish.service.ts";
  var hash = "beaefae333175cd81e93b803d48a6cae79955673";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\Dass\\Desktop\\Master1_YNOV\\DevLogiciel\\biblio\\src\\main\\webapp\\app\\account\\password-reset\\finish\\password-reset-finish.service.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 2,
          column: 62
        }
      },
      "1": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 3,
          column: 44
        }
      },
      "2": {
        start: {
          line: 4,
          column: 16
        },
        end: {
          line: 4,
          column: 32
        }
      },
      "3": {
        start: {
          line: 5,
          column: 15
        },
        end: {
          line: 5,
          column: 39
        }
      },
      "4": {
        start: {
          line: 6,
          column: 15
        },
        end: {
          line: 6,
          column: 46
        }
      },
      "5": {
        start: {
          line: 7,
          column: 24
        },
        end: {
          line: 7,
          column: 52
        }
      },
      "6": {
        start: {
          line: 8,
          column: 33
        },
        end: {
          line: 15,
          column: 1
        }
      },
      "7": {
        start: {
          line: 10,
          column: 8
        },
        end: {
          line: 10,
          column: 25
        }
      },
      "8": {
        start: {
          line: 13,
          column: 8
        },
        end: {
          line: 13,
          column: 122
        }
      },
      "9": {
        start: {
          line: 16,
          column: 0
        },
        end: {
          line: 19,
          column: 31
        }
      },
      "10": {
        start: {
          line: 20,
          column: 0
        },
        end: {
          line: 20,
          column: 64
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 9,
            column: 4
          },
          end: {
            line: 9,
            column: 5
          }
        },
        loc: {
          start: {
            line: 9,
            column: 22
          },
          end: {
            line: 11,
            column: 5
          }
        },
        line: 9
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 12,
            column: 4
          },
          end: {
            line: 12,
            column: 5
          }
        },
        loc: {
          start: {
            line: 12,
            column: 27
          },
          end: {
            line: 14,
            column: 5
          }
        },
        line: 12
      }
    },
    branchMap: {},
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0
    },
    f: {
      "0": 0,
      "1": 0
    },
    b: {},
    inputSourceMap: {
      file: "C:\\Users\\Dass\\Desktop\\Master1_YNOV\\DevLogiciel\\biblio\\src\\main\\webapp\\app\\account\\password-reset\\finish\\password-reset-finish.service.ts",
      mappings: ";;;;AAAA,wCAA2C;AAC3C,+CAAkD;AAGlD,qDAAmD;AAGnD,IAAa,0BAA0B,GAAvC,MAAa,0BAA0B;IACrC,YAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;IAAG,CAAC;IAExC,IAAI,CAAC,GAAW,EAAE,WAAmB;QACnC,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,8BAAc,GAAG,mCAAmC,EAAE,EAAE,GAAG,EAAE,WAAW,EAAE,CAAC,CAAC;IACpG,CAAC;CACF,CAAA;AANY,0BAA0B;IADtC,iBAAU,CAAC,EAAE,UAAU,EAAE,MAAM,EAAE,CAAC;6CAEP,iBAAU;GADzB,0BAA0B,CAMtC;AANY,gEAA0B",
      names: [],
      sources: ["C:\\Users\\Dass\\Desktop\\Master1_YNOV\\DevLogiciel\\biblio\\src\\main\\webapp\\app\\account\\password-reset\\finish\\password-reset-finish.service.ts"],
      sourcesContent: ["import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n\r\nimport { SERVER_API_URL } from 'app/app.constants';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class PasswordResetFinishService {\r\n  constructor(private http: HttpClient) {}\r\n\r\n  save(key: string, newPassword: string): Observable<{}> {\r\n    return this.http.post(SERVER_API_URL + 'api/account/reset-password/finish', { key, newPassword });\r\n  }\r\n}\r\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "beaefae333175cd81e93b803d48a6cae79955673"
  };
  var coverage = global[gcv] || (global[gcv] = {});

  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }

  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_176urgoltp = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}

cov_176urgoltp();
cov_176urgoltp().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});

/* istanbul ignore next */
cov_176urgoltp().s[1]++;
exports.PasswordResetFinishService = void 0;
const tslib_1 =
/* istanbul ignore next */
(cov_176urgoltp().s[2]++, require("tslib"));
const core_1 =
/* istanbul ignore next */
(cov_176urgoltp().s[3]++, require("@angular/core"));
const http_1 =
/* istanbul ignore next */
(cov_176urgoltp().s[4]++, require("@angular/common/http"));
const app_constants_1 =
/* istanbul ignore next */
(cov_176urgoltp().s[5]++, require("app/app.constants"));

/* istanbul ignore next */
cov_176urgoltp().s[6]++;
let PasswordResetFinishService = class PasswordResetFinishService {
  constructor(http) {
    /* istanbul ignore next */
    cov_176urgoltp().f[0]++;
    cov_176urgoltp().s[7]++;
    this.http = http;
  }

  save(key, newPassword) {
    /* istanbul ignore next */
    cov_176urgoltp().f[1]++;
    cov_176urgoltp().s[8]++;
    return this.http.post(app_constants_1.SERVER_API_URL + 'api/account/reset-password/finish', {
      key,
      newPassword
    });
  }

};

/* istanbul ignore next */
cov_176urgoltp().s[9]++;
PasswordResetFinishService = tslib_1.__decorate([core_1.Injectable({
  providedIn: 'root'
}), tslib_1.__metadata("design:paramtypes", [http_1.HttpClient])], PasswordResetFinishService);

/* istanbul ignore next */
cov_176urgoltp().s[10]++;
exports.PasswordResetFinishService = PasswordResetFinishService;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcRGFzc1xcRGVza3RvcFxcTWFzdGVyMV9ZTk9WXFxEZXZMb2dpY2llbFxcYmlibGlvXFxzcmNcXG1haW5cXHdlYmFwcFxcYXBwXFxhY2NvdW50XFxwYXNzd29yZC1yZXNldFxcZmluaXNoXFxwYXNzd29yZC1yZXNldC1maW5pc2guc2VydmljZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFPYTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFQYixNQUFBLE1BQUE7QUFBQTtBQUFBLDBCQUFBLE9BQUEsQ0FBQSxlQUFBLENBQUEsQ0FBQTtBQUNBLE1BQUEsTUFBQTtBQUFBO0FBQUEsMEJBQUEsT0FBQSxDQUFBLHNCQUFBLENBQUEsQ0FBQTtBQUdBLE1BQUEsZUFBQTtBQUFBO0FBQUEsMEJBQUEsT0FBQSxDQUFBLG1CQUFBLENBQUEsQ0FBQTs7OztBQUdBLElBQWEsMEJBQTBCLEdBQXZDLE1BQWEsMEJBQWIsQ0FBdUM7QUFDckMsRUFBQSxXQUFBLENBQW9CLElBQXBCLEVBQW9DO0FBQUE7QUFBQTtBQUFBO0FBQWhCLFNBQUEsSUFBQSxHQUFBLElBQUE7QUFBb0I7O0FBRXhDLEVBQUEsSUFBSSxDQUFDLEdBQUQsRUFBYyxXQUFkLEVBQWlDO0FBQUE7QUFBQTtBQUFBO0FBQ25DLFdBQU8sS0FBSyxJQUFMLENBQVUsSUFBVixDQUFlLGVBQUEsQ0FBQSxjQUFBLEdBQWlCLG1DQUFoQyxFQUFxRTtBQUFFLE1BQUEsR0FBRjtBQUFPLE1BQUE7QUFBUCxLQUFyRSxDQUFQO0FBQ0Q7O0FBTG9DLENBQXZDOzs7O0FBQWEsMEJBQTBCLEdBQUEsT0FBQSxDQUFBLFVBQUEsQ0FBQSxDQUR0QyxNQUFBLENBQUEsVUFBQSxDQUFXO0FBQUUsRUFBQSxVQUFVLEVBQUU7QUFBZCxDQUFYLENBQ3NDLEUseUNBQ1gsTUFBQSxDQUFBLFUsRUFEVyxDQUFBLEVBQTFCLDBCQUEwQixDQUExQjs7OztBQUFBLE9BQUEsQ0FBQSwwQkFBQSxHQUFBLDBCQUFBIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSW5qZWN0YWJsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5pbXBvcnQgeyBIdHRwQ2xpZW50IH0gZnJvbSAnQGFuZ3VsYXIvY29tbW9uL2h0dHAnO1xyXG5pbXBvcnQgeyBPYnNlcnZhYmxlIH0gZnJvbSAncnhqcyc7XHJcblxyXG5pbXBvcnQgeyBTRVJWRVJfQVBJX1VSTCB9IGZyb20gJ2FwcC9hcHAuY29uc3RhbnRzJztcclxuXHJcbkBJbmplY3RhYmxlKHsgcHJvdmlkZWRJbjogJ3Jvb3QnIH0pXHJcbmV4cG9ydCBjbGFzcyBQYXNzd29yZFJlc2V0RmluaXNoU2VydmljZSB7XHJcbiAgY29uc3RydWN0b3IocHJpdmF0ZSBodHRwOiBIdHRwQ2xpZW50KSB7fVxyXG5cclxuICBzYXZlKGtleTogc3RyaW5nLCBuZXdQYXNzd29yZDogc3RyaW5nKTogT2JzZXJ2YWJsZTx7fT4ge1xyXG4gICAgcmV0dXJuIHRoaXMuaHR0cC5wb3N0KFNFUlZFUl9BUElfVVJMICsgJ2FwaS9hY2NvdW50L3Jlc2V0LXBhc3N3b3JkL2ZpbmlzaCcsIHsga2V5LCBuZXdQYXNzd29yZCB9KTtcclxuICB9XHJcbn1cclxuIl19