7349185e203d7fe29e816d17b1b578bf
"use strict";

/* istanbul ignore next */
function cov_1a842emsqw() {
  var path = "C:\\Users\\Dass\\Desktop\\Master1_YNOV\\DevLogiciel\\biblio\\src\\main\\webapp\\app\\core\\login\\login.service.ts";
  var hash = "bb098bb0f45166a76f4007884a2a9d6fb7a55af0";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\Dass\\Desktop\\Master1_YNOV\\DevLogiciel\\biblio\\src\\main\\webapp\\app\\core\\login\\login.service.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 2,
          column: 62
        }
      },
      "1": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 3,
          column: 30
        }
      },
      "2": {
        start: {
          line: 4,
          column: 16
        },
        end: {
          line: 4,
          column: 32
        }
      },
      "3": {
        start: {
          line: 5,
          column: 15
        },
        end: {
          line: 5,
          column: 39
        }
      },
      "4": {
        start: {
          line: 6,
          column: 20
        },
        end: {
          line: 6,
          column: 45
        }
      },
      "5": {
        start: {
          line: 7,
          column: 26
        },
        end: {
          line: 7,
          column: 66
        }
      },
      "6": {
        start: {
          line: 8,
          column: 27
        },
        end: {
          line: 8,
          column: 68
        }
      },
      "7": {
        start: {
          line: 9,
          column: 19
        },
        end: {
          line: 20,
          column: 1
        }
      },
      "8": {
        start: {
          line: 11,
          column: 8
        },
        end: {
          line: 11,
          column: 45
        }
      },
      "9": {
        start: {
          line: 12,
          column: 8
        },
        end: {
          line: 12,
          column: 53
        }
      },
      "10": {
        start: {
          line: 15,
          column: 8
        },
        end: {
          line: 15,
          column: 126
        }
      },
      "11": {
        start: {
          line: 15,
          column: 89
        },
        end: {
          line: 15,
          column: 123
        }
      },
      "12": {
        start: {
          line: 18,
          column: 8
        },
        end: {
          line: 18,
          column: 109
        }
      },
      "13": {
        start: {
          line: 18,
          column: 69
        },
        end: {
          line: 18,
          column: 107
        }
      },
      "14": {
        start: {
          line: 21,
          column: 0
        },
        end: {
          line: 24,
          column: 17
        }
      },
      "15": {
        start: {
          line: 25,
          column: 0
        },
        end: {
          line: 25,
          column: 36
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 10,
            column: 4
          },
          end: {
            line: 10,
            column: 5
          }
        },
        loc: {
          start: {
            line: 10,
            column: 52
          },
          end: {
            line: 13,
            column: 5
          }
        },
        line: 10
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 14,
            column: 4
          },
          end: {
            line: 14,
            column: 5
          }
        },
        loc: {
          start: {
            line: 14,
            column: 23
          },
          end: {
            line: 16,
            column: 5
          }
        },
        line: 14
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 15,
            column: 83
          },
          end: {
            line: 15,
            column: 84
          }
        },
        loc: {
          start: {
            line: 15,
            column: 89
          },
          end: {
            line: 15,
            column: 123
          }
        },
        line: 15
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 17,
            column: 4
          },
          end: {
            line: 17,
            column: 5
          }
        },
        loc: {
          start: {
            line: 17,
            column: 13
          },
          end: {
            line: 19,
            column: 5
          }
        },
        line: 17
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 18,
            column: 63
          },
          end: {
            line: 18,
            column: 64
          }
        },
        loc: {
          start: {
            line: 18,
            column: 69
          },
          end: {
            line: 18,
            column: 107
          }
        },
        line: 18
      }
    },
    branchMap: {},
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0
    },
    b: {},
    inputSourceMap: {
      file: "C:\\Users\\Dass\\Desktop\\Master1_YNOV\\DevLogiciel\\biblio\\src\\main\\webapp\\app\\core\\login\\login.service.ts",
      mappings: ";;;;AAAA,wCAA2C;AAE3C,8CAAyC;AAGzC,mEAA+D;AAC/D,qEAAoE;AAIpE,IAAa,YAAY,GAAzB,MAAa,YAAY;IACvB,YAAoB,cAA8B,EAAU,kBAAsC;QAA9E,mBAAc,GAAd,cAAc,CAAgB;QAAU,uBAAkB,GAAlB,kBAAkB,CAAoB;IAAG,CAAC;IAEtG,KAAK,CAAC,WAAkB;QACtB,OAAO,IAAI,CAAC,kBAAkB,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC,IAAI,CAAC,mBAAO,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IAC5G,CAAC;IAED,MAAM;QACJ,IAAI,CAAC,kBAAkB,CAAC,MAAM,EAAE,CAAC,SAAS,CAAC,IAAI,EAAE,IAAI,EAAE,GAAG,EAAE,CAAC,IAAI,CAAC,cAAc,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC,CAAC;IACvG,CAAC;CACF,CAAA;AAVY,YAAY;IADxB,iBAAU,CAAC,EAAE,UAAU,EAAE,MAAM,EAAE,CAAC;6CAEG,gCAAc,EAA8B,qCAAkB;GADvF,YAAY,CAUxB;AAVY,oCAAY",
      names: [],
      sources: ["C:\\Users\\Dass\\Desktop\\Master1_YNOV\\DevLogiciel\\biblio\\src\\main\\webapp\\app\\core\\login\\login.service.ts"],
      sourcesContent: ["import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { flatMap } from 'rxjs/operators';\r\n\r\nimport { Account } from 'app/core/user/account.model';\r\nimport { AccountService } from 'app/core/auth/account.service';\r\nimport { AuthServerProvider } from 'app/core/auth/auth-jwt.service';\r\nimport { Login } from './login.model';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class LoginService {\r\n  constructor(private accountService: AccountService, private authServerProvider: AuthServerProvider) {}\r\n\r\n  login(credentials: Login): Observable<Account | null> {\r\n    return this.authServerProvider.login(credentials).pipe(flatMap(() => this.accountService.identity(true)));\r\n  }\r\n\r\n  logout(): void {\r\n    this.authServerProvider.logout().subscribe(null, null, () => this.accountService.authenticate(null));\r\n  }\r\n}\r\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "bb098bb0f45166a76f4007884a2a9d6fb7a55af0"
  };
  var coverage = global[gcv] || (global[gcv] = {});

  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }

  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1a842emsqw = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}

cov_1a842emsqw();
cov_1a842emsqw().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});

/* istanbul ignore next */
cov_1a842emsqw().s[1]++;
exports.LoginService = void 0;
const tslib_1 =
/* istanbul ignore next */
(cov_1a842emsqw().s[2]++, require("tslib"));
const core_1 =
/* istanbul ignore next */
(cov_1a842emsqw().s[3]++, require("@angular/core"));
const operators_1 =
/* istanbul ignore next */
(cov_1a842emsqw().s[4]++, require("rxjs/operators"));
const account_service_1 =
/* istanbul ignore next */
(cov_1a842emsqw().s[5]++, require("app/core/auth/account.service"));
const auth_jwt_service_1 =
/* istanbul ignore next */
(cov_1a842emsqw().s[6]++, require("app/core/auth/auth-jwt.service"));

/* istanbul ignore next */
cov_1a842emsqw().s[7]++;
let LoginService = class LoginService {
  constructor(accountService, authServerProvider) {
    /* istanbul ignore next */
    cov_1a842emsqw().f[0]++;
    cov_1a842emsqw().s[8]++;
    this.accountService = accountService;

    /* istanbul ignore next */
    cov_1a842emsqw().s[9]++;
    this.authServerProvider = authServerProvider;
  }

  login(credentials) {
    /* istanbul ignore next */
    cov_1a842emsqw().f[1]++;
    cov_1a842emsqw().s[10]++;
    return this.authServerProvider.login(credentials).pipe(operators_1.flatMap(() => {
      /* istanbul ignore next */
      cov_1a842emsqw().f[2]++;
      cov_1a842emsqw().s[11]++;
      return this.accountService.identity(true);
    }));
  }

  logout() {
    /* istanbul ignore next */
    cov_1a842emsqw().f[3]++;
    cov_1a842emsqw().s[12]++;
    this.authServerProvider.logout().subscribe(null, null, () => {
      /* istanbul ignore next */
      cov_1a842emsqw().f[4]++;
      cov_1a842emsqw().s[13]++;
      return this.accountService.authenticate(null);
    });
  }

};

/* istanbul ignore next */
cov_1a842emsqw().s[14]++;
LoginService = tslib_1.__decorate([core_1.Injectable({
  providedIn: 'root'
}), tslib_1.__metadata("design:paramtypes", [account_service_1.AccountService, auth_jwt_service_1.AuthServerProvider])], LoginService);

/* istanbul ignore next */
cov_1a842emsqw().s[15]++;
exports.LoginService = LoginService;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcRGFzc1xcRGVza3RvcFxcTWFzdGVyMV9ZTk9WXFxEZXZMb2dpY2llbFxcYmlibGlvXFxzcmNcXG1haW5cXHdlYmFwcFxcYXBwXFxjb3JlXFxsb2dpblxcbG9naW4uc2VydmljZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBZUc7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBZkgsTUFBQSxNQUFBO0FBQUE7QUFBQSwwQkFBQSxPQUFBLENBQUEsZUFBQSxDQUFBLENBQUE7QUFFQSxNQUFBLFdBQUE7QUFBQTtBQUFBLDBCQUFBLE9BQUEsQ0FBQSxnQkFBQSxDQUFBLENBQUE7QUFHQSxNQUFBLGlCQUFBO0FBQUE7QUFBQSwwQkFBQSxPQUFBLENBQUEsK0JBQUEsQ0FBQSxDQUFBO0FBQ0EsTUFBQSxrQkFBQTtBQUFBO0FBQUEsMEJBQUEsT0FBQSxDQUFBLGdDQUFBLENBQUEsQ0FBQTs7OztBQUlBLElBQWEsWUFBWSxHQUF6QixNQUFhLFlBQWIsQ0FBeUI7QUFDdkIsRUFBQSxXQUFBLENBQW9CLGNBQXBCLEVBQTRELGtCQUE1RCxFQUFrRztBQUFBO0FBQUE7QUFBQTtBQUE5RSxTQUFBLGNBQUEsR0FBQSxjQUFBOztBQUE4RTtBQUFBO0FBQXRDLFNBQUEsa0JBQUEsR0FBQSxrQkFBQTtBQUEwQzs7QUFFdEcsRUFBQSxLQUFLLENBQUMsV0FBRCxFQUFtQjtBQUFBO0FBQUE7QUFBQTtBQUN0QixXQUFPLEtBQUssa0JBQUwsQ0FBd0IsS0FBeEIsQ0FBOEIsV0FBOUIsRUFBMkMsSUFBM0MsQ0FBZ0QsV0FBQSxDQUFBLE9BQUEsQ0FBUSxNQUFNO0FBQUE7QUFBQTtBQUFBO0FBQUEsa0JBQUssY0FBTCxDQUFvQixRQUFwQixDQUE2QixJQUE3QjtBQUFrQyxLQUFoRCxDQUFoRCxDQUFQO0FBQ0Q7O0FBRUQsRUFBQSxNQUFNLEdBQUE7QUFBQTtBQUFBO0FBQUE7QUFDSixTQUFLLGtCQUFMLENBQXdCLE1BQXhCLEdBQWlDLFNBQWpDLENBQTJDLElBQTNDLEVBQWlELElBQWpELEVBQXVELE1BQU07QUFBQTtBQUFBO0FBQUE7QUFBQSxrQkFBSyxjQUFMLENBQW9CLFlBQXBCLENBQWlDLElBQWpDO0FBQXNDLEtBQW5HO0FBQ0Q7O0FBVHNCLENBQXpCOzs7O0FBQWEsWUFBWSxHQUFBLE9BQUEsQ0FBQSxVQUFBLENBQUEsQ0FEeEIsTUFBQSxDQUFBLFVBQUEsQ0FBVztBQUFFLEVBQUEsVUFBVSxFQUFFO0FBQWQsQ0FBWCxDQUN3QixFLHlDQUNhLGlCQUFBLENBQUEsYyxFQUE0QyxrQkFBQSxDQUFBLGtCLEVBRHpELENBQUEsRUFBWixZQUFZLENBQVo7Ozs7QUFBQSxPQUFBLENBQUEsWUFBQSxHQUFBLFlBQUEiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBJbmplY3RhYmxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcbmltcG9ydCB7IE9ic2VydmFibGUgfSBmcm9tICdyeGpzJztcclxuaW1wb3J0IHsgZmxhdE1hcCB9IGZyb20gJ3J4anMvb3BlcmF0b3JzJztcclxuXHJcbmltcG9ydCB7IEFjY291bnQgfSBmcm9tICdhcHAvY29yZS91c2VyL2FjY291bnQubW9kZWwnO1xyXG5pbXBvcnQgeyBBY2NvdW50U2VydmljZSB9IGZyb20gJ2FwcC9jb3JlL2F1dGgvYWNjb3VudC5zZXJ2aWNlJztcclxuaW1wb3J0IHsgQXV0aFNlcnZlclByb3ZpZGVyIH0gZnJvbSAnYXBwL2NvcmUvYXV0aC9hdXRoLWp3dC5zZXJ2aWNlJztcclxuaW1wb3J0IHsgTG9naW4gfSBmcm9tICcuL2xvZ2luLm1vZGVsJztcclxuXHJcbkBJbmplY3RhYmxlKHsgcHJvdmlkZWRJbjogJ3Jvb3QnIH0pXHJcbmV4cG9ydCBjbGFzcyBMb2dpblNlcnZpY2Uge1xyXG4gIGNvbnN0cnVjdG9yKHByaXZhdGUgYWNjb3VudFNlcnZpY2U6IEFjY291bnRTZXJ2aWNlLCBwcml2YXRlIGF1dGhTZXJ2ZXJQcm92aWRlcjogQXV0aFNlcnZlclByb3ZpZGVyKSB7fVxyXG5cclxuICBsb2dpbihjcmVkZW50aWFsczogTG9naW4pOiBPYnNlcnZhYmxlPEFjY291bnQgfCBudWxsPiB7XHJcbiAgICByZXR1cm4gdGhpcy5hdXRoU2VydmVyUHJvdmlkZXIubG9naW4oY3JlZGVudGlhbHMpLnBpcGUoZmxhdE1hcCgoKSA9PiB0aGlzLmFjY291bnRTZXJ2aWNlLmlkZW50aXR5KHRydWUpKSk7XHJcbiAgfVxyXG5cclxuICBsb2dvdXQoKTogdm9pZCB7XHJcbiAgICB0aGlzLmF1dGhTZXJ2ZXJQcm92aWRlci5sb2dvdXQoKS5zdWJzY3JpYmUobnVsbCwgbnVsbCwgKCkgPT4gdGhpcy5hY2NvdW50U2VydmljZS5hdXRoZW50aWNhdGUobnVsbCkpO1xyXG4gIH1cclxufVxyXG4iXX0=