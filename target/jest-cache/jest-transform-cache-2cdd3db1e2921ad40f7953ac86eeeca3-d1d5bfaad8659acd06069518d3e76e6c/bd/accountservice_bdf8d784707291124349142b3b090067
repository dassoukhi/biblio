29b24caf83b5517617837c79969d8cb3
"use strict";

/* istanbul ignore next */
function cov_173933r6ec() {
  var path = "C:\\Users\\Dass\\Desktop\\Master1_YNOV\\DevLogiciel\\biblio\\src\\main\\webapp\\app\\core\\auth\\account.service.ts";
  var hash = "dc377c6fcfc630065a513e4f310f34193b47ef05";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\Dass\\Desktop\\Master1_YNOV\\DevLogiciel\\biblio\\src\\main\\webapp\\app\\core\\auth\\account.service.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 2,
          column: 62
        }
      },
      "1": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 3,
          column: 32
        }
      },
      "2": {
        start: {
          line: 4,
          column: 16
        },
        end: {
          line: 4,
          column: 32
        }
      },
      "3": {
        start: {
          line: 5,
          column: 15
        },
        end: {
          line: 5,
          column: 39
        }
      },
      "4": {
        start: {
          line: 6,
          column: 17
        },
        end: {
          line: 6,
          column: 43
        }
      },
      "5": {
        start: {
          line: 7,
          column: 15
        },
        end: {
          line: 7,
          column: 46
        }
      },
      "6": {
        start: {
          line: 8,
          column: 15
        },
        end: {
          line: 8,
          column: 30
        }
      },
      "7": {
        start: {
          line: 9,
          column: 20
        },
        end: {
          line: 9,
          column: 45
        }
      },
      "8": {
        start: {
          line: 10,
          column: 32
        },
        end: {
          line: 10,
          column: 78
        }
      },
      "9": {
        start: {
          line: 11,
          column: 24
        },
        end: {
          line: 11,
          column: 52
        }
      },
      "10": {
        start: {
          line: 12,
          column: 21
        },
        end: {
          line: 70,
          column: 1
        }
      },
      "11": {
        start: {
          line: 14,
          column: 8
        },
        end: {
          line: 14,
          column: 25
        }
      },
      "12": {
        start: {
          line: 15,
          column: 8
        },
        end: {
          line: 15,
          column: 55
        }
      },
      "13": {
        start: {
          line: 16,
          column: 8
        },
        end: {
          line: 16,
          column: 29
        }
      },
      "14": {
        start: {
          line: 17,
          column: 8
        },
        end: {
          line: 17,
          column: 33
        }
      },
      "15": {
        start: {
          line: 18,
          column: 8
        },
        end: {
          line: 18,
          column: 63
        }
      },
      "16": {
        start: {
          line: 21,
          column: 8
        },
        end: {
          line: 21,
          column: 87
        }
      },
      "17": {
        start: {
          line: 24,
          column: 8
        },
        end: {
          line: 24,
          column: 37
        }
      },
      "18": {
        start: {
          line: 25,
          column: 8
        },
        end: {
          line: 25,
          column: 57
        }
      },
      "19": {
        start: {
          line: 28,
          column: 8
        },
        end: {
          line: 30,
          column: 9
        }
      },
      "20": {
        start: {
          line: 29,
          column: 12
        },
        end: {
          line: 29,
          column: 25
        }
      },
      "21": {
        start: {
          line: 31,
          column: 8
        },
        end: {
          line: 33,
          column: 9
        }
      },
      "22": {
        start: {
          line: 32,
          column: 12
        },
        end: {
          line: 32,
          column: 40
        }
      },
      "23": {
        start: {
          line: 34,
          column: 8
        },
        end: {
          line: 34,
          column: 98
        }
      },
      "24": {
        start: {
          line: 34,
          column: 65
        },
        end: {
          line: 34,
          column: 96
        }
      },
      "25": {
        start: {
          line: 37,
          column: 8
        },
        end: {
          line: 46,
          column: 9
        }
      },
      "26": {
        start: {
          line: 38,
          column: 12
        },
        end: {
          line: 45,
          column: 43
        }
      },
      "27": {
        start: {
          line: 39,
          column: 16
        },
        end: {
          line: 39,
          column: 39
        }
      },
      "28": {
        start: {
          line: 41,
          column: 16
        },
        end: {
          line: 41,
          column: 43
        }
      },
      "29": {
        start: {
          line: 42,
          column: 16
        },
        end: {
          line: 44,
          column: 17
        }
      },
      "30": {
        start: {
          line: 43,
          column: 20
        },
        end: {
          line: 43,
          column: 47
        }
      },
      "31": {
        start: {
          line: 47,
          column: 8
        },
        end: {
          line: 47,
          column: 34
        }
      },
      "32": {
        start: {
          line: 50,
          column: 8
        },
        end: {
          line: 50,
          column: 42
        }
      },
      "33": {
        start: {
          line: 53,
          column: 8
        },
        end: {
          line: 53,
          column: 55
        }
      },
      "34": {
        start: {
          line: 56,
          column: 8
        },
        end: {
          line: 56,
          column: 67
        }
      },
      "35": {
        start: {
          line: 59,
          column: 8
        },
        end: {
          line: 59,
          column: 77
        }
      },
      "36": {
        start: {
          line: 64,
          column: 28
        },
        end: {
          line: 64,
          column: 61
        }
      },
      "37": {
        start: {
          line: 65,
          column: 8
        },
        end: {
          line: 68,
          column: 9
        }
      },
      "38": {
        start: {
          line: 66,
          column: 12
        },
        end: {
          line: 66,
          column: 48
        }
      },
      "39": {
        start: {
          line: 67,
          column: 12
        },
        end: {
          line: 67,
          column: 51
        }
      },
      "40": {
        start: {
          line: 71,
          column: 0
        },
        end: {
          line: 74,
          column: 19
        }
      },
      "41": {
        start: {
          line: 75,
          column: 0
        },
        end: {
          line: 75,
          column: 40
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 13,
            column: 4
          },
          end: {
            line: 13,
            column: 5
          }
        },
        loc: {
          start: {
            line: 13,
            column: 51
          },
          end: {
            line: 19,
            column: 5
          }
        },
        line: 13
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 20,
            column: 4
          },
          end: {
            line: 20,
            column: 5
          }
        },
        loc: {
          start: {
            line: 20,
            column: 18
          },
          end: {
            line: 22,
            column: 5
          }
        },
        line: 20
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 23,
            column: 4
          },
          end: {
            line: 23,
            column: 5
          }
        },
        loc: {
          start: {
            line: 23,
            column: 27
          },
          end: {
            line: 26,
            column: 5
          }
        },
        line: 23
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 27,
            column: 4
          },
          end: {
            line: 27,
            column: 5
          }
        },
        loc: {
          start: {
            line: 27,
            column: 33
          },
          end: {
            line: 35,
            column: 5
          }
        },
        line: 27
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 34,
            column: 50
          },
          end: {
            line: 34,
            column: 51
          }
        },
        loc: {
          start: {
            line: 34,
            column: 65
          },
          end: {
            line: 34,
            column: 96
          }
        },
        line: 34
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 36,
            column: 4
          },
          end: {
            line: 36,
            column: 5
          }
        },
        loc: {
          start: {
            line: 36,
            column: 20
          },
          end: {
            line: 48,
            column: 5
          }
        },
        line: 36
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 38,
            column: 74
          },
          end: {
            line: 38,
            column: 75
          }
        },
        loc: {
          start: {
            line: 38,
            column: 80
          },
          end: {
            line: 40,
            column: 13
          }
        },
        line: 38
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 40,
            column: 32
          },
          end: {
            line: 40,
            column: 33
          }
        },
        loc: {
          start: {
            line: 40,
            column: 45
          },
          end: {
            line: 45,
            column: 13
          }
        },
        line: 40
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 49,
            column: 4
          },
          end: {
            line: 49,
            column: 5
          }
        },
        loc: {
          start: {
            line: 49,
            column: 22
          },
          end: {
            line: 51,
            column: 5
          }
        },
        line: 49
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 52,
            column: 4
          },
          end: {
            line: 52,
            column: 5
          }
        },
        loc: {
          start: {
            line: 52,
            column: 29
          },
          end: {
            line: 54,
            column: 5
          }
        },
        line: 52
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 55,
            column: 4
          },
          end: {
            line: 55,
            column: 5
          }
        },
        loc: {
          start: {
            line: 55,
            column: 18
          },
          end: {
            line: 57,
            column: 5
          }
        },
        line: 55
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 58,
            column: 4
          },
          end: {
            line: 58,
            column: 5
          }
        },
        loc: {
          start: {
            line: 58,
            column: 12
          },
          end: {
            line: 60,
            column: 5
          }
        },
        line: 58
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 61,
            column: 4
          },
          end: {
            line: 61,
            column: 5
          }
        },
        loc: {
          start: {
            line: 61,
            column: 26
          },
          end: {
            line: 69,
            column: 5
          }
        },
        line: 61
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 28,
            column: 8
          },
          end: {
            line: 30,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 28,
            column: 8
          },
          end: {
            line: 30,
            column: 9
          }
        }, {
          start: {
            line: 28,
            column: 8
          },
          end: {
            line: 30,
            column: 9
          }
        }],
        line: 28
      },
      "1": {
        loc: {
          start: {
            line: 28,
            column: 12
          },
          end: {
            line: 28,
            column: 64
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 28,
            column: 12
          },
          end: {
            line: 28,
            column: 30
          }
        }, {
          start: {
            line: 28,
            column: 34
          },
          end: {
            line: 28,
            column: 64
          }
        }],
        line: 28
      },
      "2": {
        loc: {
          start: {
            line: 31,
            column: 8
          },
          end: {
            line: 33,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 31,
            column: 8
          },
          end: {
            line: 33,
            column: 9
          }
        }, {
          start: {
            line: 31,
            column: 8
          },
          end: {
            line: 33,
            column: 9
          }
        }],
        line: 31
      },
      "3": {
        loc: {
          start: {
            line: 37,
            column: 8
          },
          end: {
            line: 46,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 37,
            column: 8
          },
          end: {
            line: 46,
            column: 9
          }
        }, {
          start: {
            line: 37,
            column: 8
          },
          end: {
            line: 46,
            column: 9
          }
        }],
        line: 37
      },
      "4": {
        loc: {
          start: {
            line: 37,
            column: 12
          },
          end: {
            line: 37,
            column: 67
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 37,
            column: 12
          },
          end: {
            line: 37,
            column: 31
          }
        }, {
          start: {
            line: 37,
            column: 35
          },
          end: {
            line: 37,
            column: 40
          }
        }, {
          start: {
            line: 37,
            column: 44
          },
          end: {
            line: 37,
            column: 67
          }
        }],
        line: 37
      },
      "5": {
        loc: {
          start: {
            line: 42,
            column: 16
          },
          end: {
            line: 44,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 42,
            column: 16
          },
          end: {
            line: 44,
            column: 17
          }
        }, {
          start: {
            line: 42,
            column: 16
          },
          end: {
            line: 44,
            column: 17
          }
        }],
        line: 42
      },
      "6": {
        loc: {
          start: {
            line: 56,
            column: 15
          },
          end: {
            line: 56,
            column: 66
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 56,
            column: 35
          },
          end: {
            line: 56,
            column: 61
          }
        }, {
          start: {
            line: 56,
            column: 64
          },
          end: {
            line: 56,
            column: 66
          }
        }],
        line: 56
      },
      "7": {
        loc: {
          start: {
            line: 65,
            column: 8
          },
          end: {
            line: 68,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 65,
            column: 8
          },
          end: {
            line: 68,
            column: 9
          }
        }, {
          start: {
            line: 65,
            column: 8
          },
          end: {
            line: 68,
            column: 9
          }
        }],
        line: 65
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0]
    },
    inputSourceMap: {
      file: "C:\\Users\\Dass\\Desktop\\Master1_YNOV\\DevLogiciel\\biblio\\src\\main\\webapp\\app\\core\\auth\\account.service.ts",
      mappings: "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",
      names: [],
      sources: ["C:\\Users\\Dass\\Desktop\\Master1_YNOV\\DevLogiciel\\biblio\\src\\main\\webapp\\app\\core\\auth\\account.service.ts"],
      sourcesContent: ["import { Injectable } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable, ReplaySubject, of } from 'rxjs';\r\nimport { shareReplay, tap, catchError } from 'rxjs/operators';\r\nimport { StateStorageService } from 'app/core/auth/state-storage.service';\r\n\r\nimport { SERVER_API_URL } from 'app/app.constants';\r\nimport { Account } from 'app/core/user/account.model';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class AccountService {\r\n  private userIdentity: Account | null = null;\r\n  private authenticationState = new ReplaySubject<Account | null>(1);\r\n  private accountCache$?: Observable<Account | null>;\r\n\r\n  constructor(private http: HttpClient, private stateStorageService: StateStorageService, private router: Router) {}\r\n\r\n  save(account: Account): Observable<{}> {\r\n    return this.http.post(SERVER_API_URL + 'api/account', account);\r\n  }\r\n\r\n  authenticate(identity: Account | null): void {\r\n    this.userIdentity = identity;\r\n    this.authenticationState.next(this.userIdentity);\r\n  }\r\n\r\n  hasAnyAuthority(authorities: string[] | string): boolean {\r\n    if (!this.userIdentity || !this.userIdentity.authorities) {\r\n      return false;\r\n    }\r\n    if (!Array.isArray(authorities)) {\r\n      authorities = [authorities];\r\n    }\r\n    return this.userIdentity.authorities.some((authority: string) => authorities.includes(authority));\r\n  }\r\n\r\n  identity(force?: boolean): Observable<Account | null> {\r\n    if (!this.accountCache$ || force || !this.isAuthenticated()) {\r\n      this.accountCache$ = this.fetch().pipe(\r\n        catchError(() => {\r\n          return of(null);\r\n        }),\r\n        tap((account: Account | null) => {\r\n          this.authenticate(account);\r\n\r\n          if (account) {\r\n            this.navigateToStoredUrl();\r\n          }\r\n        }),\r\n        shareReplay()\r\n      );\r\n    }\r\n    return this.accountCache$;\r\n  }\r\n\r\n  isAuthenticated(): boolean {\r\n    return this.userIdentity !== null;\r\n  }\r\n\r\n  getAuthenticationState(): Observable<Account | null> {\r\n    return this.authenticationState.asObservable();\r\n  }\r\n\r\n  getImageUrl(): string {\r\n    return this.userIdentity ? this.userIdentity.imageUrl : '';\r\n  }\r\n\r\n  private fetch(): Observable<Account> {\r\n    return this.http.get<Account>(SERVER_API_URL + 'api/account');\r\n  }\r\n\r\n  private navigateToStoredUrl(): void {\r\n    // previousState can be set in the authExpiredInterceptor and in the userRouteAccessService\r\n    // if login is successful, go to stored previousState and clear previousState\r\n    const previousUrl = this.stateStorageService.getUrl();\r\n    if (previousUrl) {\r\n      this.stateStorageService.clearUrl();\r\n      this.router.navigateByUrl(previousUrl);\r\n    }\r\n  }\r\n}\r\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "dc377c6fcfc630065a513e4f310f34193b47ef05"
  };
  var coverage = global[gcv] || (global[gcv] = {});

  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }

  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_173933r6ec = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}

cov_173933r6ec();
cov_173933r6ec().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});

/* istanbul ignore next */
cov_173933r6ec().s[1]++;
exports.AccountService = void 0;
const tslib_1 =
/* istanbul ignore next */
(cov_173933r6ec().s[2]++, require("tslib"));
const core_1 =
/* istanbul ignore next */
(cov_173933r6ec().s[3]++, require("@angular/core"));
const router_1 =
/* istanbul ignore next */
(cov_173933r6ec().s[4]++, require("@angular/router"));
const http_1 =
/* istanbul ignore next */
(cov_173933r6ec().s[5]++, require("@angular/common/http"));
const rxjs_1 =
/* istanbul ignore next */
(cov_173933r6ec().s[6]++, require("rxjs"));
const operators_1 =
/* istanbul ignore next */
(cov_173933r6ec().s[7]++, require("rxjs/operators"));
const state_storage_service_1 =
/* istanbul ignore next */
(cov_173933r6ec().s[8]++, require("app/core/auth/state-storage.service"));
const app_constants_1 =
/* istanbul ignore next */
(cov_173933r6ec().s[9]++, require("app/app.constants"));

/* istanbul ignore next */
cov_173933r6ec().s[10]++;
let AccountService = class AccountService {
  constructor(http, stateStorageService, router) {
    /* istanbul ignore next */
    cov_173933r6ec().f[0]++;
    cov_173933r6ec().s[11]++;
    this.http = http;

    /* istanbul ignore next */
    cov_173933r6ec().s[12]++;
    this.stateStorageService = stateStorageService;

    /* istanbul ignore next */
    cov_173933r6ec().s[13]++;
    this.router = router;

    /* istanbul ignore next */
    cov_173933r6ec().s[14]++;
    this.userIdentity = null;

    /* istanbul ignore next */
    cov_173933r6ec().s[15]++;
    this.authenticationState = new rxjs_1.ReplaySubject(1);
  }

  save(account) {
    /* istanbul ignore next */
    cov_173933r6ec().f[1]++;
    cov_173933r6ec().s[16]++;
    return this.http.post(app_constants_1.SERVER_API_URL + 'api/account', account);
  }

  authenticate(identity) {
    /* istanbul ignore next */
    cov_173933r6ec().f[2]++;
    cov_173933r6ec().s[17]++;
    this.userIdentity = identity;

    /* istanbul ignore next */
    cov_173933r6ec().s[18]++;
    this.authenticationState.next(this.userIdentity);
  }

  hasAnyAuthority(authorities) {
    /* istanbul ignore next */
    cov_173933r6ec().f[3]++;
    cov_173933r6ec().s[19]++;

    if (
    /* istanbul ignore next */
    (cov_173933r6ec().b[1][0]++, !this.userIdentity) ||
    /* istanbul ignore next */
    (cov_173933r6ec().b[1][1]++, !this.userIdentity.authorities)) {
      /* istanbul ignore next */
      cov_173933r6ec().b[0][0]++;
      cov_173933r6ec().s[20]++;
      return false;
    } else
    /* istanbul ignore next */
    {
      cov_173933r6ec().b[0][1]++;
    }

    cov_173933r6ec().s[21]++;

    if (!Array.isArray(authorities)) {
      /* istanbul ignore next */
      cov_173933r6ec().b[2][0]++;
      cov_173933r6ec().s[22]++;
      authorities = [authorities];
    } else
    /* istanbul ignore next */
    {
      cov_173933r6ec().b[2][1]++;
    }

    cov_173933r6ec().s[23]++;
    return this.userIdentity.authorities.some(authority => {
      /* istanbul ignore next */
      cov_173933r6ec().f[4]++;
      cov_173933r6ec().s[24]++;
      return authorities.includes(authority);
    });
  }

  identity(force) {
    /* istanbul ignore next */
    cov_173933r6ec().f[5]++;
    cov_173933r6ec().s[25]++;

    if (
    /* istanbul ignore next */
    (cov_173933r6ec().b[4][0]++, !this.accountCache$) ||
    /* istanbul ignore next */
    (cov_173933r6ec().b[4][1]++, force) ||
    /* istanbul ignore next */
    (cov_173933r6ec().b[4][2]++, !this.isAuthenticated())) {
      /* istanbul ignore next */
      cov_173933r6ec().b[3][0]++;
      cov_173933r6ec().s[26]++;
      this.accountCache$ = this.fetch().pipe(operators_1.catchError(() => {
        /* istanbul ignore next */
        cov_173933r6ec().f[6]++;
        cov_173933r6ec().s[27]++;
        return rxjs_1.of(null);
      }), operators_1.tap(account => {
        /* istanbul ignore next */
        cov_173933r6ec().f[7]++;
        cov_173933r6ec().s[28]++;
        this.authenticate(account);

        /* istanbul ignore next */
        cov_173933r6ec().s[29]++;

        if (account) {
          /* istanbul ignore next */
          cov_173933r6ec().b[5][0]++;
          cov_173933r6ec().s[30]++;
          this.navigateToStoredUrl();
        } else
        /* istanbul ignore next */
        {
          cov_173933r6ec().b[5][1]++;
        }
      }), operators_1.shareReplay());
    } else
    /* istanbul ignore next */
    {
      cov_173933r6ec().b[3][1]++;
    }

    cov_173933r6ec().s[31]++;
    return this.accountCache$;
  }

  isAuthenticated() {
    /* istanbul ignore next */
    cov_173933r6ec().f[8]++;
    cov_173933r6ec().s[32]++;
    return this.userIdentity !== null;
  }

  getAuthenticationState() {
    /* istanbul ignore next */
    cov_173933r6ec().f[9]++;
    cov_173933r6ec().s[33]++;
    return this.authenticationState.asObservable();
  }

  getImageUrl() {
    /* istanbul ignore next */
    cov_173933r6ec().f[10]++;
    cov_173933r6ec().s[34]++;
    return this.userIdentity ?
    /* istanbul ignore next */
    (cov_173933r6ec().b[6][0]++, this.userIdentity.imageUrl) :
    /* istanbul ignore next */
    (cov_173933r6ec().b[6][1]++, '');
  }

  fetch() {
    /* istanbul ignore next */
    cov_173933r6ec().f[11]++;
    cov_173933r6ec().s[35]++;
    return this.http.get(app_constants_1.SERVER_API_URL + 'api/account');
  }

  navigateToStoredUrl() {
    /* istanbul ignore next */
    cov_173933r6ec().f[12]++;
    // previousState can be set in the authExpiredInterceptor and in the userRouteAccessService
    // if login is successful, go to stored previousState and clear previousState
    const previousUrl =
    /* istanbul ignore next */
    (cov_173933r6ec().s[36]++, this.stateStorageService.getUrl());

    /* istanbul ignore next */
    cov_173933r6ec().s[37]++;

    if (previousUrl) {
      /* istanbul ignore next */
      cov_173933r6ec().b[7][0]++;
      cov_173933r6ec().s[38]++;
      this.stateStorageService.clearUrl();

      /* istanbul ignore next */
      cov_173933r6ec().s[39]++;
      this.router.navigateByUrl(previousUrl);
    } else
    /* istanbul ignore next */
    {
      cov_173933r6ec().b[7][1]++;
    }
  }

};

/* istanbul ignore next */
cov_173933r6ec().s[40]++;
AccountService = tslib_1.__decorate([core_1.Injectable({
  providedIn: 'root'
}), tslib_1.__metadata("design:paramtypes", [http_1.HttpClient, state_storage_service_1.StateStorageService, router_1.Router])], AccountService);

/* istanbul ignore next */
cov_173933r6ec().s[41]++;
exports.AccountService = AccountService;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,