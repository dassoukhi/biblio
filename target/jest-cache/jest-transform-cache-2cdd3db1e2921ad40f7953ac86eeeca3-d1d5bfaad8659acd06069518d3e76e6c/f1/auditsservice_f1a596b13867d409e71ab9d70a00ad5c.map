{"version":3,"sources":["C:\\Users\\Dass\\Desktop\\Master1_YNOV\\DevLogiciel\\biblio\\src\\main\\webapp\\app\\admin\\audits\\audits.service.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsBI;;;;;;;;;;;;;;;;;;;;AAtBJ,MAAA,MAAA;AAAA;AAAA,0BAAA,OAAA,CAAA,eAAA,CAAA,CAAA;AACA,MAAA,MAAA;AAAA;AAAA,0BAAA,OAAA,CAAA,sBAAA,CAAA,CAAA;AAGA,MAAA,cAAA;AAAA;AAAA,0BAAA,OAAA,CAAA,8BAAA,CAAA,CAAA;AACA,MAAA,eAAA;AAAA;AAAA,0BAAA,OAAA,CAAA,mBAAA,CAAA,CAAA;;;;AASA,IAAa,aAAa,GAA1B,MAAa,aAAb,CAA0B;AACxB,EAAA,WAAA,CAAoB,IAApB,EAAoC;AAAA;AAAA;AAAA;AAAhB,SAAA,IAAA,GAAA,IAAA;AAAoB;;AAExC,EAAA,KAAK,CAAC,GAAD,EAAiB;AAAA;AAAA;AACpB,UAAM,MAAM;AAAA;AAAA,8BAAe,cAAA,CAAA,mBAAA,CAAoB,GAApB,CAAf,CAAZ;AAEA,UAAM,UAAU;AAAA;AAAA,+BAAG,eAAA,CAAA,cAAA,GAAiB,mBAApB,CAAhB;;AAHoB;AAAA;AAKpB,WAAO,KAAK,IAAL,CAAU,GAAV,CAAuB,UAAvB,EAAmC;AACxC,MAAA,MADwC;AAExC,MAAA,OAAO,EAAE;AAF+B,KAAnC,CAAP;AAID;;AAZuB,CAA1B;;;;AAAa,aAAa,GAAA,OAAA,CAAA,UAAA,CAAA,CADzB,MAAA,CAAA,UAAA,CAAW;AAAE,EAAA,UAAU,EAAE;AAAd,CAAX,CACyB,E,yCACE,MAAA,CAAA,U,EADF,CAAA,EAAb,aAAa,CAAb;;;;AAAA,OAAA,CAAA,aAAA,GAAA,aAAA","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpParams, HttpResponse } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n\r\nimport { createRequestOption, Pagination } from 'app/shared/util/request-util';\r\nimport { SERVER_API_URL } from 'app/app.constants';\r\nimport { Audit } from './audit.model';\r\n\r\nexport interface AuditsQuery extends Pagination {\r\n  fromDate: string;\r\n  toDate: string;\r\n}\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class AuditsService {\r\n  constructor(private http: HttpClient) {}\r\n\r\n  query(req: AuditsQuery): Observable<HttpResponse<Audit[]>> {\r\n    const params: HttpParams = createRequestOption(req);\r\n\r\n    const requestURL = SERVER_API_URL + 'management/audits';\r\n\r\n    return this.http.get<Audit[]>(requestURL, {\r\n      params,\r\n      observe: 'response',\r\n    });\r\n  }\r\n}\r\n"]}