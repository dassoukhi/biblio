{"version":3,"sources":["C:\\Users\\Dass\\Desktop\\Master1_YNOV\\DevLogiciel\\biblio\\src\\main\\webapp\\app\\layouts\\profiles\\profile.service.ts"],"names":[],"mappingsiBM;;;;;;;;;;;;;;;;;;;;AAjBN,MAAA,MAAA;AAAA;AAAA,0BAAA,OAAA,CAAA,eAAA,CAAA,CAAA;AACA,MAAA,MAAA;AAAA;AAAA,0BAAA,OAAA,CAAA,sBAAA,CAAA,CAAA;AACA,MAAA,WAAA;AAAA;AAAA,0BAAA,OAAA,CAAA,gBAAA,CAAA,CAAA;AAGA,MAAA,eAAA;AAAA;AAAA,0BAAA,OAAA,CAAA,mBAAA,CAAA,CAAA;;;;AAIA,IAAa,cAAc,GAA3B,MAAa,cAAb,CAA2B;AAIzB,EAAA,WAAA,CAAoB,IAApB,EAAoC;AAAA;AAAA;AAAA;AAAhB,SAAA,IAAA,GAAA,IAAA;;AAAgB;AAAA;AAH5B,SAAA,OAAA,GAAU,eAAA,CAAA,cAAA,GAAiB,iBAA3B;AAGgC;;AAExC,EAAA,cAAc,GAAA;AAAA;AAAA;AAAA;;AACZ,QAAI,KAAK,YAAT,EAAuB;AAAA;AAAA;AAAA;AACrB,aAAO,KAAK,YAAZ;AACD,KAFD;AAAA;AAAA;AAAA;AAAA;;AADY;AAKZ,SAAK,YAAL,GAAoB,KAAK,IAAL,CAAU,GAAV,CAA4B,KAAK,OAAjC,EAA0C,IAA1C,CAClB,WAAA,CAAA,GAAA,CAAK,QAAD,IAA2B;AAAA;AAAA;AAC7B,YAAM,WAAW;AAAA;AAAA,iCAAgB;AAC/B,QAAA,cAAc,EAAE,QAAQ,CAAC,cADM;AAE/B,QAAA,YAAY;AAAE;AAAA,qCAAA,QAAQ,CAAC,cAAT;AAAA;AAAA,qCAA2B,QAAQ,CAAC,cAAT,CAAwB,QAAxB,CAAiC,MAAjC,CAA3B,CAFiB;AAG/B,QAAA,cAAc;AAAE;AAAA,qCAAA,QAAQ,CAAC,cAAT;AAAA;AAAA,qCAA2B,QAAQ,CAAC,cAAT,CAAwB,QAAxB,CAAiC,SAAjC,CAA3B;AAHe,OAAhB,CAAjB;;AAD6B;AAAA;;AAM7B;AAAI;AAAA,mCAAA,QAAQ,CAAC,cAAT;AAAA;AAAA,mCAA2B,QAAQ,CAAC,4BAAD,CAAnC,CAAJ,EAAuE;AAAA;AAAA;AACrE,cAAM,uBAAuB;AAAA;AAAA,mCAAG,QAAQ,CAAC,4BAAD,CAAR,CAAuC,KAAvC,CAA6C,GAA7C,CAAH,CAA7B;AACA,cAAM,cAAc;AAAA;AAAA,mCAAG,uBAAuB,CAAC,MAAxB,CACrB,OAAO,IAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yCAAA,QAAQ,CAAC,cAAT;AAAA;AAAA,yCAA2B,QAAQ,CAAC,cAAT,CAAwB,QAAxB,CAAiC,OAAjC,CAA3B;AAAA;AAAoE,SAD1D,CAAH,CAApB;;AAFqE;AAAA;;AAKrE,YAAI,cAAc,CAAC,MAAf,GAAwB,CAA5B,EAA+B;AAAA;AAAA;AAAA;AAC7B,UAAA,WAAW,CAAC,SAAZ,GAAwB,cAAc,CAAC,CAAD,CAAtC;AACD,SAFD;AAAA;AAAA;AAAA;AAAA;AAGD,OARD;AAAA;AAAA;AAAA;AAAA;;AAN6B;AAe7B,aAAO,WAAP;AACD,KAhBD,CADkB,EAkBlB,WAAA,CAAA,WAAA,EAlBkB,CAApB;;AALY;AAAA;AAyBZ,WAAO,KAAK,YAAZ;AACD;;AAhCwB,CAA3B;;;;AAAa,cAAc,GAAA,OAAA,CAAA,UAAA,CAAA,CAD1B,MAAA,CAAA,UAAA,CAAW;AAAE,EAAA,UAAU,EAAE;AAAd,CAAX,CAC0B,E,yCAIC,MAAA,CAAA,U,EAJD,CAAA,EAAd,cAAc,CAAd;;;;AAAA,OAAA,CAAA,cAAA,GAAA,cAAA","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { map, shareReplay } from 'rxjs/operators';\r\nimport { Observable } from 'rxjs';\r\n\r\nimport { SERVER_API_URL } from 'app/app.constants';\r\nimport { ProfileInfo, InfoResponse } from './profile-info.model';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class ProfileService {\r\n  private infoUrl = SERVER_API_URL + 'management/info';\r\n  private profileInfo$!: Observable<ProfileInfo>;\r\n\r\n  constructor(private http: HttpClient) {}\r\n\r\n  getProfileInfo(): Observable<ProfileInfo> {\r\n    if (this.profileInfo$) {\r\n      return this.profileInfo$;\r\n    }\r\n\r\n    this.profileInfo$ = this.http.get<InfoResponse>(this.infoUrl).pipe(\r\n      map((response: InfoResponse) => {\r\n        const profileInfo: ProfileInfo = {\r\n          activeProfiles: response.activeProfiles,\r\n          inProduction: response.activeProfiles && response.activeProfiles.includes('prod'),\r\n          swaggerEnabled: response.activeProfiles && response.activeProfiles.includes('swagger'),\r\n        };\r\n        if (response.activeProfiles && response['display-ribbon-on-profiles']) {\r\n          const displayRibbonOnProfiles = response['display-ribbon-on-profiles'].split(',');\r\n          const ribbonProfiles = displayRibbonOnProfiles.filter(\r\n            profile => response.activeProfiles && response.activeProfiles.includes(profile)\r\n          );\r\n          if (ribbonProfiles.length > 0) {\r\n            profileInfo.ribbonEnv = ribbonProfiles[0];\r\n          }\r\n        }\r\n        return profileInfo;\r\n      }),\r\n      shareReplay()\r\n    );\r\n    return this.profileInfo$;\r\n  }\r\n}\r\n"]}