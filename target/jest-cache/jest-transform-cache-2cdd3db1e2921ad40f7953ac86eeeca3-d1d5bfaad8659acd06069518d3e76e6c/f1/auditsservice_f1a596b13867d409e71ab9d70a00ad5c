b620ba9640f22de7ba844aba18531746
"use strict";

/* istanbul ignore next */
function cov_2pxstuy4nj() {
  var path = "C:\\Users\\Dass\\Desktop\\Master1_YNOV\\DevLogiciel\\biblio\\src\\main\\webapp\\app\\admin\\audits\\audits.service.ts";
  var hash = "0e2b46ac8595c4600b3a8877995d3c7d76228ac7";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\Dass\\Desktop\\Master1_YNOV\\DevLogiciel\\biblio\\src\\main\\webapp\\app\\admin\\audits\\audits.service.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 2,
          column: 62
        }
      },
      "1": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 3,
          column: 31
        }
      },
      "2": {
        start: {
          line: 4,
          column: 16
        },
        end: {
          line: 4,
          column: 32
        }
      },
      "3": {
        start: {
          line: 5,
          column: 15
        },
        end: {
          line: 5,
          column: 39
        }
      },
      "4": {
        start: {
          line: 6,
          column: 15
        },
        end: {
          line: 6,
          column: 46
        }
      },
      "5": {
        start: {
          line: 7,
          column: 23
        },
        end: {
          line: 7,
          column: 62
        }
      },
      "6": {
        start: {
          line: 8,
          column: 24
        },
        end: {
          line: 8,
          column: 52
        }
      },
      "7": {
        start: {
          line: 9,
          column: 20
        },
        end: {
          line: 21,
          column: 1
        }
      },
      "8": {
        start: {
          line: 11,
          column: 8
        },
        end: {
          line: 11,
          column: 25
        }
      },
      "9": {
        start: {
          line: 14,
          column: 23
        },
        end: {
          line: 14,
          column: 62
        }
      },
      "10": {
        start: {
          line: 15,
          column: 27
        },
        end: {
          line: 15,
          column: 79
        }
      },
      "11": {
        start: {
          line: 16,
          column: 8
        },
        end: {
          line: 19,
          column: 11
        }
      },
      "12": {
        start: {
          line: 22,
          column: 0
        },
        end: {
          line: 25,
          column: 18
        }
      },
      "13": {
        start: {
          line: 26,
          column: 0
        },
        end: {
          line: 26,
          column: 38
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 10,
            column: 4
          },
          end: {
            line: 10,
            column: 5
          }
        },
        loc: {
          start: {
            line: 10,
            column: 22
          },
          end: {
            line: 12,
            column: 5
          }
        },
        line: 10
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 13,
            column: 4
          },
          end: {
            line: 13,
            column: 5
          }
        },
        loc: {
          start: {
            line: 13,
            column: 15
          },
          end: {
            line: 20,
            column: 5
          }
        },
        line: 13
      }
    },
    branchMap: {},
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0
    },
    f: {
      "0": 0,
      "1": 0
    },
    b: {},
    inputSourceMap: {
      file: "C:\\Users\\Dass\\Desktop\\Master1_YNOV\\DevLogiciel\\biblio\\src\\main\\webapp\\app\\admin\\audits\\audits.service.ts",
      mappings: ";;;;AAAA,wCAA2C;AAC3C,+CAA4E;AAG5E,+DAA+E;AAC/E,qDAAmD;AASnD,IAAa,aAAa,GAA1B,MAAa,aAAa;IACxB,YAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;IAAG,CAAC;IAExC,KAAK,CAAC,GAAgB;QACpB,MAAM,MAAM,GAAe,kCAAmB,CAAC,GAAG,CAAC,CAAC;QAEpD,MAAM,UAAU,GAAG,8BAAc,GAAG,mBAAmB,CAAC;QAExD,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAU,UAAU,EAAE;YACxC,MAAM;YACN,OAAO,EAAE,UAAU;SACpB,CAAC,CAAC;IACL,CAAC;CACF,CAAA;AAbY,aAAa;IADzB,iBAAU,CAAC,EAAE,UAAU,EAAE,MAAM,EAAE,CAAC;6CAEP,iBAAU;GADzB,aAAa,CAazB;AAbY,sCAAa",
      names: [],
      sources: ["C:\\Users\\Dass\\Desktop\\Master1_YNOV\\DevLogiciel\\biblio\\src\\main\\webapp\\app\\admin\\audits\\audits.service.ts"],
      sourcesContent: ["import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpParams, HttpResponse } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n\r\nimport { createRequestOption, Pagination } from 'app/shared/util/request-util';\r\nimport { SERVER_API_URL } from 'app/app.constants';\r\nimport { Audit } from './audit.model';\r\n\r\nexport interface AuditsQuery extends Pagination {\r\n  fromDate: string;\r\n  toDate: string;\r\n}\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class AuditsService {\r\n  constructor(private http: HttpClient) {}\r\n\r\n  query(req: AuditsQuery): Observable<HttpResponse<Audit[]>> {\r\n    const params: HttpParams = createRequestOption(req);\r\n\r\n    const requestURL = SERVER_API_URL + 'management/audits';\r\n\r\n    return this.http.get<Audit[]>(requestURL, {\r\n      params,\r\n      observe: 'response',\r\n    });\r\n  }\r\n}\r\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "0e2b46ac8595c4600b3a8877995d3c7d76228ac7"
  };
  var coverage = global[gcv] || (global[gcv] = {});

  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }

  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_2pxstuy4nj = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}

cov_2pxstuy4nj();
cov_2pxstuy4nj().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});

/* istanbul ignore next */
cov_2pxstuy4nj().s[1]++;
exports.AuditsService = void 0;
const tslib_1 =
/* istanbul ignore next */
(cov_2pxstuy4nj().s[2]++, require("tslib"));
const core_1 =
/* istanbul ignore next */
(cov_2pxstuy4nj().s[3]++, require("@angular/core"));
const http_1 =
/* istanbul ignore next */
(cov_2pxstuy4nj().s[4]++, require("@angular/common/http"));
const request_util_1 =
/* istanbul ignore next */
(cov_2pxstuy4nj().s[5]++, require("app/shared/util/request-util"));
const app_constants_1 =
/* istanbul ignore next */
(cov_2pxstuy4nj().s[6]++, require("app/app.constants"));

/* istanbul ignore next */
cov_2pxstuy4nj().s[7]++;
let AuditsService = class AuditsService {
  constructor(http) {
    /* istanbul ignore next */
    cov_2pxstuy4nj().f[0]++;
    cov_2pxstuy4nj().s[8]++;
    this.http = http;
  }

  query(req) {
    /* istanbul ignore next */
    cov_2pxstuy4nj().f[1]++;
    const params =
    /* istanbul ignore next */
    (cov_2pxstuy4nj().s[9]++, request_util_1.createRequestOption(req));
    const requestURL =
    /* istanbul ignore next */
    (cov_2pxstuy4nj().s[10]++, app_constants_1.SERVER_API_URL + 'management/audits');

    /* istanbul ignore next */
    cov_2pxstuy4nj().s[11]++;
    return this.http.get(requestURL, {
      params,
      observe: 'response'
    });
  }

};

/* istanbul ignore next */
cov_2pxstuy4nj().s[12]++;
AuditsService = tslib_1.__decorate([core_1.Injectable({
  providedIn: 'root'
}), tslib_1.__metadata("design:paramtypes", [http_1.HttpClient])], AuditsService);

/* istanbul ignore next */
cov_2pxstuy4nj().s[13]++;
exports.AuditsService = AuditsService;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcRGFzc1xcRGVza3RvcFxcTWFzdGVyMV9ZTk9WXFxEZXZMb2dpY2llbFxcYmlibGlvXFxzcmNcXG1haW5cXHdlYmFwcFxcYXBwXFxhZG1pblxcYXVkaXRzXFxhdWRpdHMuc2VydmljZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFzQkk7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBdEJKLE1BQUEsTUFBQTtBQUFBO0FBQUEsMEJBQUEsT0FBQSxDQUFBLGVBQUEsQ0FBQSxDQUFBO0FBQ0EsTUFBQSxNQUFBO0FBQUE7QUFBQSwwQkFBQSxPQUFBLENBQUEsc0JBQUEsQ0FBQSxDQUFBO0FBR0EsTUFBQSxjQUFBO0FBQUE7QUFBQSwwQkFBQSxPQUFBLENBQUEsOEJBQUEsQ0FBQSxDQUFBO0FBQ0EsTUFBQSxlQUFBO0FBQUE7QUFBQSwwQkFBQSxPQUFBLENBQUEsbUJBQUEsQ0FBQSxDQUFBOzs7O0FBU0EsSUFBYSxhQUFhLEdBQTFCLE1BQWEsYUFBYixDQUEwQjtBQUN4QixFQUFBLFdBQUEsQ0FBb0IsSUFBcEIsRUFBb0M7QUFBQTtBQUFBO0FBQUE7QUFBaEIsU0FBQSxJQUFBLEdBQUEsSUFBQTtBQUFvQjs7QUFFeEMsRUFBQSxLQUFLLENBQUMsR0FBRCxFQUFpQjtBQUFBO0FBQUE7QUFDcEIsVUFBTSxNQUFNO0FBQUE7QUFBQSw4QkFBZSxjQUFBLENBQUEsbUJBQUEsQ0FBb0IsR0FBcEIsQ0FBZixDQUFaO0FBRUEsVUFBTSxVQUFVO0FBQUE7QUFBQSwrQkFBRyxlQUFBLENBQUEsY0FBQSxHQUFpQixtQkFBcEIsQ0FBaEI7O0FBSG9CO0FBQUE7QUFLcEIsV0FBTyxLQUFLLElBQUwsQ0FBVSxHQUFWLENBQXVCLFVBQXZCLEVBQW1DO0FBQ3hDLE1BQUEsTUFEd0M7QUFFeEMsTUFBQSxPQUFPLEVBQUU7QUFGK0IsS0FBbkMsQ0FBUDtBQUlEOztBQVp1QixDQUExQjs7OztBQUFhLGFBQWEsR0FBQSxPQUFBLENBQUEsVUFBQSxDQUFBLENBRHpCLE1BQUEsQ0FBQSxVQUFBLENBQVc7QUFBRSxFQUFBLFVBQVUsRUFBRTtBQUFkLENBQVgsQ0FDeUIsRSx5Q0FDRSxNQUFBLENBQUEsVSxFQURGLENBQUEsRUFBYixhQUFhLENBQWI7Ozs7QUFBQSxPQUFBLENBQUEsYUFBQSxHQUFBLGFBQUEiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBJbmplY3RhYmxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcbmltcG9ydCB7IEh0dHBDbGllbnQsIEh0dHBQYXJhbXMsIEh0dHBSZXNwb25zZSB9IGZyb20gJ0Bhbmd1bGFyL2NvbW1vbi9odHRwJztcclxuaW1wb3J0IHsgT2JzZXJ2YWJsZSB9IGZyb20gJ3J4anMnO1xyXG5cclxuaW1wb3J0IHsgY3JlYXRlUmVxdWVzdE9wdGlvbiwgUGFnaW5hdGlvbiB9IGZyb20gJ2FwcC9zaGFyZWQvdXRpbC9yZXF1ZXN0LXV0aWwnO1xyXG5pbXBvcnQgeyBTRVJWRVJfQVBJX1VSTCB9IGZyb20gJ2FwcC9hcHAuY29uc3RhbnRzJztcclxuaW1wb3J0IHsgQXVkaXQgfSBmcm9tICcuL2F1ZGl0Lm1vZGVsJztcclxuXHJcbmV4cG9ydCBpbnRlcmZhY2UgQXVkaXRzUXVlcnkgZXh0ZW5kcyBQYWdpbmF0aW9uIHtcclxuICBmcm9tRGF0ZTogc3RyaW5nO1xyXG4gIHRvRGF0ZTogc3RyaW5nO1xyXG59XHJcblxyXG5ASW5qZWN0YWJsZSh7IHByb3ZpZGVkSW46ICdyb290JyB9KVxyXG5leHBvcnQgY2xhc3MgQXVkaXRzU2VydmljZSB7XHJcbiAgY29uc3RydWN0b3IocHJpdmF0ZSBodHRwOiBIdHRwQ2xpZW50KSB7fVxyXG5cclxuICBxdWVyeShyZXE6IEF1ZGl0c1F1ZXJ5KTogT2JzZXJ2YWJsZTxIdHRwUmVzcG9uc2U8QXVkaXRbXT4+IHtcclxuICAgIGNvbnN0IHBhcmFtczogSHR0cFBhcmFtcyA9IGNyZWF0ZVJlcXVlc3RPcHRpb24ocmVxKTtcclxuXHJcbiAgICBjb25zdCByZXF1ZXN0VVJMID0gU0VSVkVSX0FQSV9VUkwgKyAnbWFuYWdlbWVudC9hdWRpdHMnO1xyXG5cclxuICAgIHJldHVybiB0aGlzLmh0dHAuZ2V0PEF1ZGl0W10+KHJlcXVlc3RVUkwsIHtcclxuICAgICAgcGFyYW1zLFxyXG4gICAgICBvYnNlcnZlOiAncmVzcG9uc2UnLFxyXG4gICAgfSk7XHJcbiAgfVxyXG59XHJcbiJdfQ==