{"file":"C:\\Users\\Dass\\Desktop\\Master1_YNOV\\DevLogiciel\\biblio\\src\\test\\javascript\\spec\\app\\entities\\emprunt\\emprunt-delete-dialog.component.spec.ts","mappings":";;AAAA,mDAA2F;AAC3F,6DAA4D;AAC5D,+BAA0B;AAC1B,6CAA8C;AAE9C,sDAAwD;AAGxD,0GAAoG;AACpG,0EAAsE;AAEtE,QAAQ,CAAC,iBAAiB,EAAE,GAAG,EAAE;IAC/B,QAAQ,CAAC,qCAAqC,EAAE,GAAG,EAAE;QACnD,IAAI,IAAkC,CAAC;QACvC,IAAI,OAAuD,CAAC;QAC5D,IAAI,OAAuB,CAAC;QAC5B,IAAI,gBAAkC,CAAC;QACvC,IAAI,eAAgC,CAAC;QAErC,UAAU,CAAC,GAAG,EAAE;YACd,iBAAO,CAAC,sBAAsB,CAAC;gBAC7B,OAAO,EAAE,CAAC,8BAAgB,CAAC;gBAC3B,YAAY,EAAE,CAAC,8DAA4B,CAAC;aAC7C,CAAC;iBACC,gBAAgB,CAAC,8DAA4B,EAAE,EAAE,CAAC;iBAClD,iBAAiB,EAAE,CAAC;YACvB,OAAO,GAAG,iBAAO,CAAC,eAAe,CAAC,8DAA4B,CAAC,CAAC;YAChE,IAAI,GAAG,OAAO,CAAC,iBAAiB,CAAC;YACjC,OAAO,GAAG,OAAO,CAAC,YAAY,CAAC,QAAQ,CAAC,GAAG,CAAC,gCAAc,CAAC,CAAC;YAC5D,gBAAgB,GAAG,iBAAO,CAAC,GAAG,CAAC,6BAAe,CAAC,CAAC;YAChD,eAAe,GAAG,iBAAO,CAAC,GAAG,CAAC,6BAAc,CAAC,CAAC;QAChD,CAAC,CAAC,CAAC;QAEH,QAAQ,CAAC,eAAe,EAAE,GAAG,EAAE;YAC7B,EAAE,CAAC,6CAA6C,EAAE,gBAAM,CACtD,EAAE,EACF,mBAAS,CAAC,GAAG,EAAE;gBACb,QAAQ;gBACR,KAAK,CAAC,OAAO,EAAE,QAAQ,CAAC,CAAC,GAAG,CAAC,WAAW,CAAC,SAAE,CAAC,EAAE,CAAC,CAAC,CAAC;gBAEjD,OAAO;gBACP,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC;gBACxB,cAAI,EAAE,CAAC;gBAEP,OAAO;gBACP,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,oBAAoB,CAAC,GAAG,CAAC,CAAC;gBACjD,MAAM,CAAC,eAAe,CAAC,QAAQ,CAAC,CAAC,gBAAgB,EAAE,CAAC;gBACpD,MAAM,CAAC,gBAAgB,CAAC,YAAY,CAAC,CAAC,gBAAgB,EAAE,CAAC;YAC3D,CAAC,CAAC,CACH,CAAC,CAAC;YAEH,EAAE,CAAC,yCAAyC,EAAE,GAAG,EAAE;gBACjD,QAAQ;gBACR,KAAK,CAAC,OAAO,EAAE,QAAQ,CAAC,CAAC;gBAEzB,OAAO;gBACP,IAAI,CAAC,MAAM,EAAE,CAAC;gBAEd,OAAO;gBACP,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,gBAAgB,EAAE,CAAC;gBAC9C,MAAM,CAAC,eAAe,CAAC,UAAU,CAAC,CAAC,gBAAgB,EAAE,CAAC;YACxD,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","names":[],"sources":["C:\\Users\\Dass\\Desktop\\Master1_YNOV\\DevLogiciel\\biblio\\src\\test\\javascript\\spec\\app\\entities\\emprunt\\emprunt-delete-dialog.component.spec.ts"],"sourcesContent":["import { ComponentFixture, TestBed, inject, fakeAsync, tick } from '@angular/core/testing';\r\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { of } from 'rxjs';\r\nimport { JhiEventManager } from 'ng-jhipster';\r\n\r\nimport { BiblioTestModule } from '../../../test.module';\r\nimport { MockEventManager } from '../../../helpers/mock-event-manager.service';\r\nimport { MockActiveModal } from '../../../helpers/mock-active-modal.service';\r\nimport { EmpruntDeleteDialogComponent } from 'app/entities/emprunt/emprunt-delete-dialog.component';\r\nimport { EmpruntService } from 'app/entities/emprunt/emprunt.service';\r\n\r\ndescribe('Component Tests', () => {\r\n  describe('Emprunt Management Delete Component', () => {\r\n    let comp: EmpruntDeleteDialogComponent;\r\n    let fixture: ComponentFixture<EmpruntDeleteDialogComponent>;\r\n    let service: EmpruntService;\r\n    let mockEventManager: MockEventManager;\r\n    let mockActiveModal: MockActiveModal;\r\n\r\n    beforeEach(() => {\r\n      TestBed.configureTestingModule({\r\n        imports: [BiblioTestModule],\r\n        declarations: [EmpruntDeleteDialogComponent],\r\n      })\r\n        .overrideTemplate(EmpruntDeleteDialogComponent, '')\r\n        .compileComponents();\r\n      fixture = TestBed.createComponent(EmpruntDeleteDialogComponent);\r\n      comp = fixture.componentInstance;\r\n      service = fixture.debugElement.injector.get(EmpruntService);\r\n      mockEventManager = TestBed.get(JhiEventManager);\r\n      mockActiveModal = TestBed.get(NgbActiveModal);\r\n    });\r\n\r\n    describe('confirmDelete', () => {\r\n      it('Should call delete service on confirmDelete', inject(\r\n        [],\r\n        fakeAsync(() => {\r\n          // GIVEN\r\n          spyOn(service, 'delete').and.returnValue(of({}));\r\n\r\n          // WHEN\r\n          comp.confirmDelete(123);\r\n          tick();\r\n\r\n          // THEN\r\n          expect(service.delete).toHaveBeenCalledWith(123);\r\n          expect(mockActiveModal.closeSpy).toHaveBeenCalled();\r\n          expect(mockEventManager.broadcastSpy).toHaveBeenCalled();\r\n        })\r\n      ));\r\n\r\n      it('Should not call delete service on clear', () => {\r\n        // GIVEN\r\n        spyOn(service, 'delete');\r\n\r\n        // WHEN\r\n        comp.cancel();\r\n\r\n        // THEN\r\n        expect(service.delete).not.toHaveBeenCalled();\r\n        expect(mockActiveModal.dismissSpy).toHaveBeenCalled();\r\n      });\r\n    });\r\n  });\r\n});\r\n"],"version":3}