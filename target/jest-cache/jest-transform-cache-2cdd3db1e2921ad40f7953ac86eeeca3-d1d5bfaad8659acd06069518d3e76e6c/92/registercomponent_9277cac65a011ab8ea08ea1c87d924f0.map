{"version":3,"sources":["C:\\Users\\Dass\\Desktop\\Master1_YNOV\\DevLogiciel\\biblio\\src\\main\\webapp\\app\\account\\register\\register.component.ts"],"names":[],"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","sourcesContent":["import { Component, AfterViewInit, ElementRef, ViewChild } from '@angular/core';\r\nimport { HttpErrorResponse } from '@angular/common/http';\r\nimport { FormBuilder, Validators } from '@angular/forms';\r\n\r\nimport { EMAIL_ALREADY_USED_TYPE, LOGIN_ALREADY_USED_TYPE } from 'app/shared/constants/error.constants';\r\nimport { LoginModalService } from 'app/core/login/login-modal.service';\r\nimport { RegisterService } from './register.service';\r\n\r\n@Component({\r\n  selector: 'jhi-register',\r\n  templateUrl: './register.component.html',\r\n})\r\nexport class RegisterComponent implements AfterViewInit {\r\n  @ViewChild('login', { static: false })\r\n  login?: ElementRef;\r\n\r\n  doNotMatch = false;\r\n  error = false;\r\n  errorEmailExists = false;\r\n  errorUserExists = false;\r\n  success = false;\r\n\r\n  registerForm = this.fb.group({\r\n    login: [\r\n      '',\r\n      [\r\n        Validators.required,\r\n        Validators.minLength(1),\r\n        Validators.maxLength(50),\r\n        Validators.pattern('^[a-zA-Z0-9!$&*+=?^_`{|}~.-]+@[a-zA-Z0-9-]+(?:\\\\.[a-zA-Z0-9-]+)*$|^[_.@A-Za-z0-9-]+$'),\r\n      ],\r\n    ],\r\n    email: ['', [Validators.required, Validators.minLength(5), Validators.maxLength(254), Validators.email]],\r\n    password: ['', [Validators.required, Validators.minLength(4), Validators.maxLength(50)]],\r\n    confirmPassword: ['', [Validators.required, Validators.minLength(4), Validators.maxLength(50)]],\r\n  });\r\n\r\n  constructor(private loginModalService: LoginModalService, private registerService: RegisterService, private fb: FormBuilder) {}\r\n\r\n  ngAfterViewInit(): void {\r\n    if (this.login) {\r\n      this.login.nativeElement.focus();\r\n    }\r\n  }\r\n\r\n  register(): void {\r\n    this.doNotMatch = false;\r\n    this.error = false;\r\n    this.errorEmailExists = false;\r\n    this.errorUserExists = false;\r\n\r\n    const password = this.registerForm.get(['password'])!.value;\r\n    if (password !== this.registerForm.get(['confirmPassword'])!.value) {\r\n      this.doNotMatch = true;\r\n    } else {\r\n      const login = this.registerForm.get(['login'])!.value;\r\n      const email = this.registerForm.get(['email'])!.value;\r\n      this.registerService.save({ login, email, password, langKey: 'en' }).subscribe(\r\n        () => (this.success = true),\r\n        response => this.processError(response)\r\n      );\r\n    }\r\n  }\r\n\r\n  openLogin(): void {\r\n    this.loginModalService.open();\r\n  }\r\n\r\n  private processError(response: HttpErrorResponse): void {\r\n    if (response.status === 400 && response.error.type === LOGIN_ALREADY_USED_TYPE) {\r\n      this.errorUserExists = true;\r\n    } else if (response.status === 400 && response.error.type === EMAIL_ALREADY_USED_TYPE) {\r\n      this.errorEmailExists = true;\r\n    } else {\r\n      this.error = true;\r\n    }\r\n  }\r\n}\r\n"]}