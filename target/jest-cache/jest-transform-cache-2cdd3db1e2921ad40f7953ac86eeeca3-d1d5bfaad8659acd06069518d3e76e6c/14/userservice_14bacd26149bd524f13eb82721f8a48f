b548b8ec521c8c0a36cd02abe08a2982
"use strict";

/* istanbul ignore next */
function cov_22pb2pfvkr() {
  var path = "C:\\Users\\Dass\\Desktop\\Master1_YNOV\\DevLogiciel\\biblio\\src\\main\\webapp\\app\\core\\user\\user.service.ts";
  var hash = "cde52d6a56f2d1b52cc7e129412d725c36781492";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\Dass\\Desktop\\Master1_YNOV\\DevLogiciel\\biblio\\src\\main\\webapp\\app\\core\\user\\user.service.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 2,
          column: 62
        }
      },
      "1": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 3,
          column: 29
        }
      },
      "2": {
        start: {
          line: 4,
          column: 16
        },
        end: {
          line: 4,
          column: 32
        }
      },
      "3": {
        start: {
          line: 5,
          column: 15
        },
        end: {
          line: 5,
          column: 39
        }
      },
      "4": {
        start: {
          line: 6,
          column: 15
        },
        end: {
          line: 6,
          column: 46
        }
      },
      "5": {
        start: {
          line: 7,
          column: 24
        },
        end: {
          line: 7,
          column: 52
        }
      },
      "6": {
        start: {
          line: 8,
          column: 23
        },
        end: {
          line: 8,
          column: 62
        }
      },
      "7": {
        start: {
          line: 9,
          column: 18
        },
        end: {
          line: 33,
          column: 1
        }
      },
      "8": {
        start: {
          line: 11,
          column: 8
        },
        end: {
          line: 11,
          column: 25
        }
      },
      "9": {
        start: {
          line: 12,
          column: 8
        },
        end: {
          line: 12,
          column: 72
        }
      },
      "10": {
        start: {
          line: 15,
          column: 8
        },
        end: {
          line: 15,
          column: 54
        }
      },
      "11": {
        start: {
          line: 18,
          column: 8
        },
        end: {
          line: 18,
          column: 53
        }
      },
      "12": {
        start: {
          line: 21,
          column: 8
        },
        end: {
          line: 21,
          column: 61
        }
      },
      "13": {
        start: {
          line: 24,
          column: 24
        },
        end: {
          line: 24,
          column: 63
        }
      },
      "14": {
        start: {
          line: 25,
          column: 8
        },
        end: {
          line: 25,
          column: 89
        }
      },
      "15": {
        start: {
          line: 28,
          column: 8
        },
        end: {
          line: 28,
          column: 64
        }
      },
      "16": {
        start: {
          line: 31,
          column: 8
        },
        end: {
          line: 31,
          column: 87
        }
      },
      "17": {
        start: {
          line: 34,
          column: 0
        },
        end: {
          line: 37,
          column: 16
        }
      },
      "18": {
        start: {
          line: 38,
          column: 0
        },
        end: {
          line: 38,
          column: 34
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 10,
            column: 4
          },
          end: {
            line: 10,
            column: 5
          }
        },
        loc: {
          start: {
            line: 10,
            column: 22
          },
          end: {
            line: 13,
            column: 5
          }
        },
        line: 10
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 14,
            column: 4
          },
          end: {
            line: 14,
            column: 5
          }
        },
        loc: {
          start: {
            line: 14,
            column: 17
          },
          end: {
            line: 16,
            column: 5
          }
        },
        line: 14
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 17,
            column: 4
          },
          end: {
            line: 17,
            column: 5
          }
        },
        loc: {
          start: {
            line: 17,
            column: 17
          },
          end: {
            line: 19,
            column: 5
          }
        },
        line: 17
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 20,
            column: 4
          },
          end: {
            line: 20,
            column: 5
          }
        },
        loc: {
          start: {
            line: 20,
            column: 16
          },
          end: {
            line: 22,
            column: 5
          }
        },
        line: 20
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 23,
            column: 4
          },
          end: {
            line: 23,
            column: 5
          }
        },
        loc: {
          start: {
            line: 23,
            column: 15
          },
          end: {
            line: 26,
            column: 5
          }
        },
        line: 23
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 27,
            column: 4
          },
          end: {
            line: 27,
            column: 5
          }
        },
        loc: {
          start: {
            line: 27,
            column: 18
          },
          end: {
            line: 29,
            column: 5
          }
        },
        line: 27
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 30,
            column: 4
          },
          end: {
            line: 30,
            column: 5
          }
        },
        loc: {
          start: {
            line: 30,
            column: 18
          },
          end: {
            line: 32,
            column: 5
          }
        },
        line: 30
      }
    },
    branchMap: {},
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0
    },
    b: {},
    inputSourceMap: {
      file: "C:\\Users\\Dass\\Desktop\\Master1_YNOV\\DevLogiciel\\biblio\\src\\main\\webapp\\app\\core\\user\\user.service.ts",
      mappings: ";;;;AAAA,wCAA2C;AAC3C,+CAAgE;AAGhE,qDAAmD;AACnD,+DAA+E;AAI/E,IAAa,WAAW,GAAxB,MAAa,WAAW;IAGtB,YAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QAF7B,gBAAW,GAAG,8BAAc,GAAG,WAAW,CAAC;IAEX,CAAC;IAExC,MAAM,CAAC,IAAW;QAChB,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAQ,IAAI,CAAC,WAAW,EAAE,IAAI,CAAC,CAAC;IACvD,CAAC;IAED,MAAM,CAAC,IAAW;QAChB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAQ,IAAI,CAAC,WAAW,EAAE,IAAI,CAAC,CAAC;IACtD,CAAC;IAED,IAAI,CAAC,KAAa;QAChB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAQ,GAAG,IAAI,CAAC,WAAW,IAAI,KAAK,EAAE,CAAC,CAAC;IAC9D,CAAC;IAED,KAAK,CAAC,GAAgB;QACpB,MAAM,OAAO,GAAG,kCAAmB,CAAC,GAAG,CAAC,CAAC;QACzC,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAU,IAAI,CAAC,WAAW,EAAE,EAAE,MAAM,EAAE,OAAO,EAAE,OAAO,EAAE,UAAU,EAAE,CAAC,CAAC;IAC5F,CAAC;IAED,MAAM,CAAC,KAAa;QAClB,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC,WAAW,IAAI,KAAK,EAAE,CAAC,CAAC;IAC1D,CAAC;IAED,WAAW;QACT,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAW,8BAAc,GAAG,uBAAuB,CAAC,CAAC;IAC3E,CAAC;CACF,CAAA;AA7BY,WAAW;IADvB,iBAAU,CAAC,EAAE,UAAU,EAAE,MAAM,EAAE,CAAC;6CAIP,iBAAU;GAHzB,WAAW,CA6BvB;AA7BY,kCAAW",
      names: [],
      sources: ["C:\\Users\\Dass\\Desktop\\Master1_YNOV\\DevLogiciel\\biblio\\src\\main\\webapp\\app\\core\\user\\user.service.ts"],
      sourcesContent: ["import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpResponse } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n\r\nimport { SERVER_API_URL } from 'app/app.constants';\r\nimport { createRequestOption, Pagination } from 'app/shared/util/request-util';\r\nimport { IUser } from './user.model';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class UserService {\r\n  public resourceUrl = SERVER_API_URL + 'api/users';\r\n\r\n  constructor(private http: HttpClient) {}\r\n\r\n  create(user: IUser): Observable<IUser> {\r\n    return this.http.post<IUser>(this.resourceUrl, user);\r\n  }\r\n\r\n  update(user: IUser): Observable<IUser> {\r\n    return this.http.put<IUser>(this.resourceUrl, user);\r\n  }\r\n\r\n  find(login: string): Observable<IUser> {\r\n    return this.http.get<IUser>(`${this.resourceUrl}/${login}`);\r\n  }\r\n\r\n  query(req?: Pagination): Observable<HttpResponse<IUser[]>> {\r\n    const options = createRequestOption(req);\r\n    return this.http.get<IUser[]>(this.resourceUrl, { params: options, observe: 'response' });\r\n  }\r\n\r\n  delete(login: string): Observable<{}> {\r\n    return this.http.delete(`${this.resourceUrl}/${login}`);\r\n  }\r\n\r\n  authorities(): Observable<string[]> {\r\n    return this.http.get<string[]>(SERVER_API_URL + 'api/users/authorities');\r\n  }\r\n}\r\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "cde52d6a56f2d1b52cc7e129412d725c36781492"
  };
  var coverage = global[gcv] || (global[gcv] = {});

  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }

  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_22pb2pfvkr = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}

cov_22pb2pfvkr();
cov_22pb2pfvkr().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});

/* istanbul ignore next */
cov_22pb2pfvkr().s[1]++;
exports.UserService = void 0;
const tslib_1 =
/* istanbul ignore next */
(cov_22pb2pfvkr().s[2]++, require("tslib"));
const core_1 =
/* istanbul ignore next */
(cov_22pb2pfvkr().s[3]++, require("@angular/core"));
const http_1 =
/* istanbul ignore next */
(cov_22pb2pfvkr().s[4]++, require("@angular/common/http"));
const app_constants_1 =
/* istanbul ignore next */
(cov_22pb2pfvkr().s[5]++, require("app/app.constants"));
const request_util_1 =
/* istanbul ignore next */
(cov_22pb2pfvkr().s[6]++, require("app/shared/util/request-util"));

/* istanbul ignore next */
cov_22pb2pfvkr().s[7]++;
let UserService = class UserService {
  constructor(http) {
    /* istanbul ignore next */
    cov_22pb2pfvkr().f[0]++;
    cov_22pb2pfvkr().s[8]++;
    this.http = http;

    /* istanbul ignore next */
    cov_22pb2pfvkr().s[9]++;
    this.resourceUrl = app_constants_1.SERVER_API_URL + 'api/users';
  }

  create(user) {
    /* istanbul ignore next */
    cov_22pb2pfvkr().f[1]++;
    cov_22pb2pfvkr().s[10]++;
    return this.http.post(this.resourceUrl, user);
  }

  update(user) {
    /* istanbul ignore next */
    cov_22pb2pfvkr().f[2]++;
    cov_22pb2pfvkr().s[11]++;
    return this.http.put(this.resourceUrl, user);
  }

  find(login) {
    /* istanbul ignore next */
    cov_22pb2pfvkr().f[3]++;
    cov_22pb2pfvkr().s[12]++;
    return this.http.get(`${this.resourceUrl}/${login}`);
  }

  query(req) {
    /* istanbul ignore next */
    cov_22pb2pfvkr().f[4]++;
    const options =
    /* istanbul ignore next */
    (cov_22pb2pfvkr().s[13]++, request_util_1.createRequestOption(req));

    /* istanbul ignore next */
    cov_22pb2pfvkr().s[14]++;
    return this.http.get(this.resourceUrl, {
      params: options,
      observe: 'response'
    });
  }

  delete(login) {
    /* istanbul ignore next */
    cov_22pb2pfvkr().f[5]++;
    cov_22pb2pfvkr().s[15]++;
    return this.http.delete(`${this.resourceUrl}/${login}`);
  }

  authorities() {
    /* istanbul ignore next */
    cov_22pb2pfvkr().f[6]++;
    cov_22pb2pfvkr().s[16]++;
    return this.http.get(app_constants_1.SERVER_API_URL + 'api/users/authorities');
  }

};

/* istanbul ignore next */
cov_22pb2pfvkr().s[17]++;
UserService = tslib_1.__decorate([core_1.Injectable({
  providedIn: 'root'
}), tslib_1.__metadata("design:paramtypes", [http_1.HttpClient])], UserService);

/* istanbul ignore next */
cov_22pb2pfvkr().s[18]++;
exports.UserService = UserService;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcRGFzc1xcRGVza3RvcFxcTWFzdGVyMV9ZTk9WXFxEZXZMb2dpY2llbFxcYmlibGlvXFxzcmNcXG1haW5cXHdlYmFwcFxcYXBwXFxjb3JlXFx1c2VyXFx1c2VyLnNlcnZpY2UudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBZ0JHOzs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQWhCSCxNQUFBLE1BQUE7QUFBQTtBQUFBLDBCQUFBLE9BQUEsQ0FBQSxlQUFBLENBQUEsQ0FBQTtBQUNBLE1BQUEsTUFBQTtBQUFBO0FBQUEsMEJBQUEsT0FBQSxDQUFBLHNCQUFBLENBQUEsQ0FBQTtBQUdBLE1BQUEsZUFBQTtBQUFBO0FBQUEsMEJBQUEsT0FBQSxDQUFBLG1CQUFBLENBQUEsQ0FBQTtBQUNBLE1BQUEsY0FBQTtBQUFBO0FBQUEsMEJBQUEsT0FBQSxDQUFBLDhCQUFBLENBQUEsQ0FBQTs7OztBQUlBLElBQWEsV0FBVyxHQUF4QixNQUFhLFdBQWIsQ0FBd0I7QUFHdEIsRUFBQSxXQUFBLENBQW9CLElBQXBCLEVBQW9DO0FBQUE7QUFBQTtBQUFBO0FBQWhCLFNBQUEsSUFBQSxHQUFBLElBQUE7O0FBQWdCO0FBQUE7QUFGN0IsU0FBQSxXQUFBLEdBQWMsZUFBQSxDQUFBLGNBQUEsR0FBaUIsV0FBL0I7QUFFaUM7O0FBRXhDLEVBQUEsTUFBTSxDQUFDLElBQUQsRUFBWTtBQUFBO0FBQUE7QUFBQTtBQUNoQixXQUFPLEtBQUssSUFBTCxDQUFVLElBQVYsQ0FBc0IsS0FBSyxXQUEzQixFQUF3QyxJQUF4QyxDQUFQO0FBQ0Q7O0FBRUQsRUFBQSxNQUFNLENBQUMsSUFBRCxFQUFZO0FBQUE7QUFBQTtBQUFBO0FBQ2hCLFdBQU8sS0FBSyxJQUFMLENBQVUsR0FBVixDQUFxQixLQUFLLFdBQTFCLEVBQXVDLElBQXZDLENBQVA7QUFDRDs7QUFFRCxFQUFBLElBQUksQ0FBQyxLQUFELEVBQWM7QUFBQTtBQUFBO0FBQUE7QUFDaEIsV0FBTyxLQUFLLElBQUwsQ0FBVSxHQUFWLENBQXFCLEdBQUcsS0FBSyxXQUFXLElBQUksS0FBSyxFQUFqRCxDQUFQO0FBQ0Q7O0FBRUQsRUFBQSxLQUFLLENBQUMsR0FBRCxFQUFpQjtBQUFBO0FBQUE7QUFDcEIsVUFBTSxPQUFPO0FBQUE7QUFBQSwrQkFBRyxjQUFBLENBQUEsbUJBQUEsQ0FBb0IsR0FBcEIsQ0FBSCxDQUFiOztBQURvQjtBQUFBO0FBRXBCLFdBQU8sS0FBSyxJQUFMLENBQVUsR0FBVixDQUF1QixLQUFLLFdBQTVCLEVBQXlDO0FBQUUsTUFBQSxNQUFNLEVBQUUsT0FBVjtBQUFtQixNQUFBLE9BQU8sRUFBRTtBQUE1QixLQUF6QyxDQUFQO0FBQ0Q7O0FBRUQsRUFBQSxNQUFNLENBQUMsS0FBRCxFQUFjO0FBQUE7QUFBQTtBQUFBO0FBQ2xCLFdBQU8sS0FBSyxJQUFMLENBQVUsTUFBVixDQUFpQixHQUFHLEtBQUssV0FBVyxJQUFJLEtBQUssRUFBN0MsQ0FBUDtBQUNEOztBQUVELEVBQUEsV0FBVyxHQUFBO0FBQUE7QUFBQTtBQUFBO0FBQ1QsV0FBTyxLQUFLLElBQUwsQ0FBVSxHQUFWLENBQXdCLGVBQUEsQ0FBQSxjQUFBLEdBQWlCLHVCQUF6QyxDQUFQO0FBQ0Q7O0FBNUJxQixDQUF4Qjs7OztBQUFhLFdBQVcsR0FBQSxPQUFBLENBQUEsVUFBQSxDQUFBLENBRHZCLE1BQUEsQ0FBQSxVQUFBLENBQVc7QUFBRSxFQUFBLFVBQVUsRUFBRTtBQUFkLENBQVgsQ0FDdUIsRSx5Q0FHSSxNQUFBLENBQUEsVSxFQUhKLENBQUEsRUFBWCxXQUFXLENBQVg7Ozs7QUFBQSxPQUFBLENBQUEsV0FBQSxHQUFBLFdBQUEiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBJbmplY3RhYmxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcbmltcG9ydCB7IEh0dHBDbGllbnQsIEh0dHBSZXNwb25zZSB9IGZyb20gJ0Bhbmd1bGFyL2NvbW1vbi9odHRwJztcclxuaW1wb3J0IHsgT2JzZXJ2YWJsZSB9IGZyb20gJ3J4anMnO1xyXG5cclxuaW1wb3J0IHsgU0VSVkVSX0FQSV9VUkwgfSBmcm9tICdhcHAvYXBwLmNvbnN0YW50cyc7XHJcbmltcG9ydCB7IGNyZWF0ZVJlcXVlc3RPcHRpb24sIFBhZ2luYXRpb24gfSBmcm9tICdhcHAvc2hhcmVkL3V0aWwvcmVxdWVzdC11dGlsJztcclxuaW1wb3J0IHsgSVVzZXIgfSBmcm9tICcuL3VzZXIubW9kZWwnO1xyXG5cclxuQEluamVjdGFibGUoeyBwcm92aWRlZEluOiAncm9vdCcgfSlcclxuZXhwb3J0IGNsYXNzIFVzZXJTZXJ2aWNlIHtcclxuICBwdWJsaWMgcmVzb3VyY2VVcmwgPSBTRVJWRVJfQVBJX1VSTCArICdhcGkvdXNlcnMnO1xyXG5cclxuICBjb25zdHJ1Y3Rvcihwcml2YXRlIGh0dHA6IEh0dHBDbGllbnQpIHt9XHJcblxyXG4gIGNyZWF0ZSh1c2VyOiBJVXNlcik6IE9ic2VydmFibGU8SVVzZXI+IHtcclxuICAgIHJldHVybiB0aGlzLmh0dHAucG9zdDxJVXNlcj4odGhpcy5yZXNvdXJjZVVybCwgdXNlcik7XHJcbiAgfVxyXG5cclxuICB1cGRhdGUodXNlcjogSVVzZXIpOiBPYnNlcnZhYmxlPElVc2VyPiB7XHJcbiAgICByZXR1cm4gdGhpcy5odHRwLnB1dDxJVXNlcj4odGhpcy5yZXNvdXJjZVVybCwgdXNlcik7XHJcbiAgfVxyXG5cclxuICBmaW5kKGxvZ2luOiBzdHJpbmcpOiBPYnNlcnZhYmxlPElVc2VyPiB7XHJcbiAgICByZXR1cm4gdGhpcy5odHRwLmdldDxJVXNlcj4oYCR7dGhpcy5yZXNvdXJjZVVybH0vJHtsb2dpbn1gKTtcclxuICB9XHJcblxyXG4gIHF1ZXJ5KHJlcT86IFBhZ2luYXRpb24pOiBPYnNlcnZhYmxlPEh0dHBSZXNwb25zZTxJVXNlcltdPj4ge1xyXG4gICAgY29uc3Qgb3B0aW9ucyA9IGNyZWF0ZVJlcXVlc3RPcHRpb24ocmVxKTtcclxuICAgIHJldHVybiB0aGlzLmh0dHAuZ2V0PElVc2VyW10+KHRoaXMucmVzb3VyY2VVcmwsIHsgcGFyYW1zOiBvcHRpb25zLCBvYnNlcnZlOiAncmVzcG9uc2UnIH0pO1xyXG4gIH1cclxuXHJcbiAgZGVsZXRlKGxvZ2luOiBzdHJpbmcpOiBPYnNlcnZhYmxlPHt9PiB7XHJcbiAgICByZXR1cm4gdGhpcy5odHRwLmRlbGV0ZShgJHt0aGlzLnJlc291cmNlVXJsfS8ke2xvZ2lufWApO1xyXG4gIH1cclxuXHJcbiAgYXV0aG9yaXRpZXMoKTogT2JzZXJ2YWJsZTxzdHJpbmdbXT4ge1xyXG4gICAgcmV0dXJuIHRoaXMuaHR0cC5nZXQ8c3RyaW5nW10+KFNFUlZFUl9BUElfVVJMICsgJ2FwaS91c2Vycy9hdXRob3JpdGllcycpO1xyXG4gIH1cclxufVxyXG4iXX0=