{"file":"C:\\Users\\Dass\\Desktop\\Master1_YNOV\\DevLogiciel\\biblio\\src\\test\\javascript\\spec\\app\\layouts\\main\\main.component.spec.ts","mappings":"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","names":[],"sources":["C:\\Users\\Dass\\Desktop\\Master1_YNOV\\DevLogiciel\\biblio\\src\\test\\javascript\\spec\\app\\layouts\\main\\main.component.spec.ts"],"sourcesContent":["import { async, ComponentFixture, TestBed } from '@angular/core/testing';\r\nimport { Router, RouterEvent, NavigationEnd } from '@angular/router';\r\nimport { Title } from '@angular/platform-browser';\r\nimport { Subject } from 'rxjs';\r\n\r\nimport { MainComponent } from 'app/layouts/main/main.component';\r\nimport { BiblioTestModule } from '../../../test.module';\r\nimport { MockRouter } from '../../../helpers/mock-route.service';\r\n\r\ndescribe('Component Tests', () => {\r\n  describe('MainComponent', () => {\r\n    let comp: MainComponent;\r\n    let fixture: ComponentFixture<MainComponent>;\r\n    let router: MockRouter;\r\n    const routerEventsSubject = new Subject<RouterEvent>();\r\n    let titleService: Title;\r\n\r\n    beforeEach(async(() => {\r\n      TestBed.configureTestingModule({\r\n        imports: [BiblioTestModule],\r\n        declarations: [MainComponent],\r\n        providers: [Title],\r\n      })\r\n        .overrideTemplate(MainComponent, '')\r\n        .compileComponents();\r\n    }));\r\n\r\n    beforeEach(() => {\r\n      fixture = TestBed.createComponent(MainComponent);\r\n      comp = fixture.componentInstance;\r\n      router = TestBed.get(Router);\r\n      router.setEvents(routerEventsSubject.asObservable());\r\n      titleService = TestBed.get(Title);\r\n    });\r\n\r\n    describe('page title', () => {\r\n      let routerState: any;\r\n      const defaultPageTitle = 'Biblio';\r\n      const parentRoutePageTitle = 'parentTitle';\r\n      const childRoutePageTitle = 'childTitle';\r\n      const navigationEnd = new NavigationEnd(1, '', '');\r\n\r\n      beforeEach(() => {\r\n        routerState = { snapshot: { root: {} } };\r\n        router.setRouterState(routerState);\r\n        spyOn(titleService, 'setTitle');\r\n        comp.ngOnInit();\r\n      });\r\n\r\n      describe('navigation end', () => {\r\n        it('should set page title to default title if pageTitle is missing on routes', () => {\r\n          // WHEN\r\n          routerEventsSubject.next(navigationEnd);\r\n\r\n          // THEN\r\n          expect(titleService.setTitle).toHaveBeenCalledWith(defaultPageTitle);\r\n        });\r\n\r\n        it('should set page title to root route pageTitle if there is no child routes', () => {\r\n          // GIVEN\r\n          routerState.snapshot.root.data = { pageTitle: parentRoutePageTitle };\r\n\r\n          // WHEN\r\n          routerEventsSubject.next(navigationEnd);\r\n\r\n          // THEN\r\n          expect(titleService.setTitle).toHaveBeenCalledWith(parentRoutePageTitle);\r\n        });\r\n\r\n        it('should set page title to child route pageTitle if child routes exist and pageTitle is set for child route', () => {\r\n          // GIVEN\r\n          routerState.snapshot.root.data = { pageTitle: parentRoutePageTitle };\r\n          routerState.snapshot.root.firstChild = { data: { pageTitle: childRoutePageTitle } };\r\n\r\n          // WHEN\r\n          routerEventsSubject.next(navigationEnd);\r\n\r\n          // THEN\r\n          expect(titleService.setTitle).toHaveBeenCalledWith(childRoutePageTitle);\r\n        });\r\n\r\n        it('should set page title to parent route pageTitle if child routes exists but pageTitle is not set for child route data', () => {\r\n          // GIVEN\r\n          routerState.snapshot.root.data = { pageTitle: parentRoutePageTitle };\r\n          routerState.snapshot.root.firstChild = { data: {} };\r\n\r\n          // WHEN\r\n          routerEventsSubject.next(navigationEnd);\r\n\r\n          // THEN\r\n          expect(titleService.setTitle).toHaveBeenCalledWith(parentRoutePageTitle);\r\n        });\r\n\r\n        it('should set page title to parent route pageTitle if child routes exists but data is not set for child route', () => {\r\n          // GIVEN\r\n          routerState.snapshot.root.data = { pageTitle: parentRoutePageTitle };\r\n          routerState.snapshot.root.firstChild = {};\r\n\r\n          // WHEN\r\n          routerEventsSubject.next(navigationEnd);\r\n\r\n          // THEN\r\n          expect(titleService.setTitle).toHaveBeenCalledWith(parentRoutePageTitle);\r\n        });\r\n      });\r\n    });\r\n  });\r\n});\r\n"],"version":3}