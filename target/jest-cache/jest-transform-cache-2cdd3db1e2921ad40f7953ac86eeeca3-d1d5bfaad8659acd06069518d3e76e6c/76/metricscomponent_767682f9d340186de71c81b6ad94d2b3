d470b20638888821c2a06b0ea97ce8ca
"use strict";

/* istanbul ignore next */
function cov_1f5cfpoyat() {
  var path = "C:\\Users\\Dass\\Desktop\\Master1_YNOV\\DevLogiciel\\biblio\\src\\main\\webapp\\app\\admin\\metrics\\metrics.component.ts";
  var hash = "56b393836cd7c074c5042f1b4a3bf9de90f22e0d";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\Dass\\Desktop\\Master1_YNOV\\DevLogiciel\\biblio\\src\\main\\webapp\\app\\admin\\metrics\\metrics.component.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 2,
          column: 62
        }
      },
      "1": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 3,
          column: 34
        }
      },
      "2": {
        start: {
          line: 4,
          column: 16
        },
        end: {
          line: 4,
          column: 32
        }
      },
      "3": {
        start: {
          line: 5,
          column: 15
        },
        end: {
          line: 5,
          column: 39
        }
      },
      "4": {
        start: {
          line: 6,
          column: 20
        },
        end: {
          line: 6,
          column: 45
        }
      },
      "5": {
        start: {
          line: 7,
          column: 26
        },
        end: {
          line: 7,
          column: 54
        }
      },
      "6": {
        start: {
          line: 8,
          column: 23
        },
        end: {
          line: 35,
          column: 1
        }
      },
      "7": {
        start: {
          line: 10,
          column: 8
        },
        end: {
          line: 10,
          column: 45
        }
      },
      "8": {
        start: {
          line: 11,
          column: 8
        },
        end: {
          line: 11,
          column: 45
        }
      },
      "9": {
        start: {
          line: 12,
          column: 8
        },
        end: {
          line: 12,
          column: 36
        }
      },
      "10": {
        start: {
          line: 15,
          column: 8
        },
        end: {
          line: 15,
          column: 23
        }
      },
      "11": {
        start: {
          line: 18,
          column: 8
        },
        end: {
          line: 18,
          column: 36
        }
      },
      "12": {
        start: {
          line: 19,
          column: 8
        },
        end: {
          line: 27,
          column: 25
        }
      },
      "13": {
        start: {
          line: 21,
          column: 44
        },
        end: {
          line: 21,
          column: 76
        }
      },
      "14": {
        start: {
          line: 22,
          column: 12
        },
        end: {
          line: 22,
          column: 35
        }
      },
      "15": {
        start: {
          line: 23,
          column: 12
        },
        end: {
          line: 23,
          column: 46
        }
      },
      "16": {
        start: {
          line: 24,
          column: 12
        },
        end: {
          line: 24,
          column: 41
        }
      },
      "17": {
        start: {
          line: 25,
          column: 12
        },
        end: {
          line: 25,
          column: 48
        }
      },
      "18": {
        start: {
          line: 30,
          column: 8
        },
        end: {
          line: 30,
          column: 49
        }
      },
      "19": {
        start: {
          line: 33,
          column: 8
        },
        end: {
          line: 33,
          column: 95
        }
      },
      "20": {
        start: {
          line: 36,
          column: 0
        },
        end: {
          line: 43,
          column: 21
        }
      },
      "21": {
        start: {
          line: 44,
          column: 0
        },
        end: {
          line: 44,
          column: 44
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 9,
            column: 4
          },
          end: {
            line: 9,
            column: 5
          }
        },
        loc: {
          start: {
            line: 9,
            column: 48
          },
          end: {
            line: 13,
            column: 5
          }
        },
        line: 9
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 14,
            column: 4
          },
          end: {
            line: 14,
            column: 5
          }
        },
        loc: {
          start: {
            line: 14,
            column: 15
          },
          end: {
            line: 16,
            column: 5
          }
        },
        line: 14
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 17,
            column: 4
          },
          end: {
            line: 17,
            column: 5
          }
        },
        loc: {
          start: {
            line: 17,
            column: 14
          },
          end: {
            line: 28,
            column: 5
          }
        },
        line: 17
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 21,
            column: 38
          },
          end: {
            line: 21,
            column: 39
          }
        },
        loc: {
          start: {
            line: 21,
            column: 44
          },
          end: {
            line: 21,
            column: 76
          }
        },
        line: 21
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 21,
            column: 78
          },
          end: {
            line: 21,
            column: 79
          }
        },
        loc: {
          start: {
            line: 21,
            column: 103
          },
          end: {
            line: 26,
            column: 9
          }
        },
        line: 21
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 29,
            column: 4
          },
          end: {
            line: 29,
            column: 5
          }
        },
        loc: {
          start: {
            line: 29,
            column: 26
          },
          end: {
            line: 31,
            column: 5
          }
        },
        line: 29
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 32,
            column: 4
          },
          end: {
            line: 32,
            column: 5
          }
        },
        loc: {
          start: {
            line: 32,
            column: 43
          },
          end: {
            line: 34,
            column: 5
          }
        },
        line: 32
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 30,
            column: 15
          },
          end: {
            line: 30,
            column: 48
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 30,
            column: 15
          },
          end: {
            line: 30,
            column: 27
          }
        }, {
          start: {
            line: 30,
            column: 31
          },
          end: {
            line: 30,
            column: 48
          }
        }],
        line: 30
      },
      "1": {
        loc: {
          start: {
            line: 33,
            column: 15
          },
          end: {
            line: 33,
            column: 94
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 33,
            column: 15
          },
          end: {
            line: 33,
            column: 27
          }
        }, {
          start: {
            line: 33,
            column: 31
          },
          end: {
            line: 33,
            column: 48
          }
        }, {
          start: {
            line: 33,
            column: 52
          },
          end: {
            line: 33,
            column: 94
          }
        }],
        line: 33
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0, 0]
    },
    inputSourceMap: {
      file: "C:\\Users\\Dass\\Desktop\\Master1_YNOV\\DevLogiciel\\biblio\\src\\main\\webapp\\app\\admin\\metrics\\metrics.component.ts",
      mappings: ";;;;AAAA,wCAA8F;AAC9F,8CAAyC;AAEzC,uDAA4F;AAO5F,IAAa,gBAAgB,GAA7B,MAAa,gBAAgB;IAK3B,YAAoB,cAA8B,EAAU,cAAiC;QAAzE,mBAAc,GAAd,cAAc,CAAgB;QAAU,mBAAc,GAAd,cAAc,CAAmB;QAF7F,oBAAe,GAAG,IAAI,CAAC;IAEyE,CAAC;IAEjG,QAAQ;QACN,IAAI,CAAC,OAAO,EAAE,CAAC;IACjB,CAAC;IAED,OAAO;QACL,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC;QAC5B,IAAI,CAAC,cAAc;aAChB,UAAU,EAAE;aACZ,IAAI,CACH,mBAAO,CACL,GAAG,EAAE,CAAC,IAAI,CAAC,cAAc,CAAC,UAAU,EAAE,EACtC,CAAC,OAAgB,EAAE,UAAsB,EAAE,EAAE;YAC3C,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;YACvB,IAAI,CAAC,OAAO,GAAG,UAAU,CAAC,OAAO,CAAC;YAClC,IAAI,CAAC,eAAe,GAAG,KAAK,CAAC;YAC7B,IAAI,CAAC,cAAc,CAAC,aAAa,EAAE,CAAC;QACtC,CAAC,CACF,CACF;aACA,SAAS,EAAE,CAAC;IACjB,CAAC;IAED,gBAAgB,CAAC,GAAe;QAC9B,OAAO,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;IAC3C,CAAC;IAED,iCAAiC,CAAC,GAAe;QAC/C,OAAO,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,KAAK,IAAI,CAAC;IACzF,CAAC;CACF,CAAA;AApCY,gBAAgB;IAL5B,gBAAS,CAAC;QACT,QAAQ,EAAE,aAAa;QACvB,kBAAa,0BAA0B,CAAA;QACvC,eAAe,EAAE,8BAAuB,CAAC,MAAM;KAChD,CAAC;6CAMoC,gCAAc,EAA0B,wBAAiB;GALlF,gBAAgB,CAoC5B;AApCY,4CAAgB",
      names: [],
      sources: ["C:\\Users\\Dass\\Desktop\\Master1_YNOV\\DevLogiciel\\biblio\\src\\main\\webapp\\app\\admin\\metrics\\metrics.component.ts"],
      sourcesContent: ["import { Component, OnInit, ChangeDetectionStrategy, ChangeDetectorRef } from '@angular/core';\r\nimport { flatMap } from 'rxjs/operators';\r\n\r\nimport { MetricsService, Metrics, MetricsKey, ThreadDump, Thread } from './metrics.service';\r\n\r\n@Component({\r\n  selector: 'jhi-metrics',\r\n  templateUrl: './metrics.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class MetricsComponent implements OnInit {\r\n  metrics?: Metrics;\r\n  threads?: Thread[];\r\n  updatingMetrics = true;\r\n\r\n  constructor(private metricsService: MetricsService, private changeDetector: ChangeDetectorRef) {}\r\n\r\n  ngOnInit(): void {\r\n    this.refresh();\r\n  }\r\n\r\n  refresh(): void {\r\n    this.updatingMetrics = true;\r\n    this.metricsService\r\n      .getMetrics()\r\n      .pipe(\r\n        flatMap(\r\n          () => this.metricsService.threadDump(),\r\n          (metrics: Metrics, threadDump: ThreadDump) => {\r\n            this.metrics = metrics;\r\n            this.threads = threadDump.threads;\r\n            this.updatingMetrics = false;\r\n            this.changeDetector.detectChanges();\r\n          }\r\n        )\r\n      )\r\n      .subscribe();\r\n  }\r\n\r\n  metricsKeyExists(key: MetricsKey): boolean {\r\n    return this.metrics && this.metrics[key];\r\n  }\r\n\r\n  metricsKeyExistsAndObjectNotEmpty(key: MetricsKey): boolean {\r\n    return this.metrics && this.metrics[key] && JSON.stringify(this.metrics[key]) !== '{}';\r\n  }\r\n}\r\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "56b393836cd7c074c5042f1b4a3bf9de90f22e0d"
  };
  var coverage = global[gcv] || (global[gcv] = {});

  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }

  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1f5cfpoyat = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}

cov_1f5cfpoyat();
cov_1f5cfpoyat().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});

/* istanbul ignore next */
cov_1f5cfpoyat().s[1]++;
exports.MetricsComponent = void 0;
const tslib_1 =
/* istanbul ignore next */
(cov_1f5cfpoyat().s[2]++, require("tslib"));
const core_1 =
/* istanbul ignore next */
(cov_1f5cfpoyat().s[3]++, require("@angular/core"));
const operators_1 =
/* istanbul ignore next */
(cov_1f5cfpoyat().s[4]++, require("rxjs/operators"));
const metrics_service_1 =
/* istanbul ignore next */
(cov_1f5cfpoyat().s[5]++, require("./metrics.service"));

/* istanbul ignore next */
cov_1f5cfpoyat().s[6]++;
let MetricsComponent = class MetricsComponent {
  constructor(metricsService, changeDetector) {
    /* istanbul ignore next */
    cov_1f5cfpoyat().f[0]++;
    cov_1f5cfpoyat().s[7]++;
    this.metricsService = metricsService;

    /* istanbul ignore next */
    cov_1f5cfpoyat().s[8]++;
    this.changeDetector = changeDetector;

    /* istanbul ignore next */
    cov_1f5cfpoyat().s[9]++;
    this.updatingMetrics = true;
  }

  ngOnInit() {
    /* istanbul ignore next */
    cov_1f5cfpoyat().f[1]++;
    cov_1f5cfpoyat().s[10]++;
    this.refresh();
  }

  refresh() {
    /* istanbul ignore next */
    cov_1f5cfpoyat().f[2]++;
    cov_1f5cfpoyat().s[11]++;
    this.updatingMetrics = true;

    /* istanbul ignore next */
    cov_1f5cfpoyat().s[12]++;
    this.metricsService.getMetrics().pipe(operators_1.flatMap(() => {
      /* istanbul ignore next */
      cov_1f5cfpoyat().f[3]++;
      cov_1f5cfpoyat().s[13]++;
      return this.metricsService.threadDump();
    }, (metrics, threadDump) => {
      /* istanbul ignore next */
      cov_1f5cfpoyat().f[4]++;
      cov_1f5cfpoyat().s[14]++;
      this.metrics = metrics;

      /* istanbul ignore next */
      cov_1f5cfpoyat().s[15]++;
      this.threads = threadDump.threads;

      /* istanbul ignore next */
      cov_1f5cfpoyat().s[16]++;
      this.updatingMetrics = false;

      /* istanbul ignore next */
      cov_1f5cfpoyat().s[17]++;
      this.changeDetector.detectChanges();
    })).subscribe();
  }

  metricsKeyExists(key) {
    /* istanbul ignore next */
    cov_1f5cfpoyat().f[5]++;
    cov_1f5cfpoyat().s[18]++;
    return (
      /* istanbul ignore next */
      (cov_1f5cfpoyat().b[0][0]++, this.metrics) &&
      /* istanbul ignore next */
      (cov_1f5cfpoyat().b[0][1]++, this.metrics[key])
    );
  }

  metricsKeyExistsAndObjectNotEmpty(key) {
    /* istanbul ignore next */
    cov_1f5cfpoyat().f[6]++;
    cov_1f5cfpoyat().s[19]++;
    return (
      /* istanbul ignore next */
      (cov_1f5cfpoyat().b[1][0]++, this.metrics) &&
      /* istanbul ignore next */
      (cov_1f5cfpoyat().b[1][1]++, this.metrics[key]) &&
      /* istanbul ignore next */
      (cov_1f5cfpoyat().b[1][2]++, JSON.stringify(this.metrics[key]) !== '{}')
    );
  }

};

/* istanbul ignore next */
cov_1f5cfpoyat().s[20]++;
MetricsComponent = tslib_1.__decorate([core_1.Component({
  selector: 'jhi-metrics',
  template: require('./metrics.component.html'),
  changeDetection: core_1.ChangeDetectionStrategy.OnPush
}), tslib_1.__metadata("design:paramtypes", [metrics_service_1.MetricsService, core_1.ChangeDetectorRef])], MetricsComponent);

/* istanbul ignore next */
cov_1f5cfpoyat().s[21]++;
exports.MetricsComponent = MetricsComponent;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcRGFzc1xcRGVza3RvcFxcTWFzdGVyMV9ZTk9WXFxEZXZMb2dpY2llbFxcYmlibGlvXFxzcmNcXG1haW5cXHdlYmFwcFxcYXBwXFxhZG1pblxcbWV0cmljc1xcbWV0cmljcy5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQW1CRzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFuQkgsTUFBQSxNQUFBO0FBQUE7QUFBQSwwQkFBQSxPQUFBLENBQUEsZUFBQSxDQUFBLENBQUE7QUFDQSxNQUFBLFdBQUE7QUFBQTtBQUFBLDBCQUFBLE9BQUEsQ0FBQSxnQkFBQSxDQUFBLENBQUE7QUFFQSxNQUFBLGlCQUFBO0FBQUE7QUFBQSwwQkFBQSxPQUFBLENBQUEsbUJBQUEsQ0FBQSxDQUFBOzs7O0FBT0EsSUFBYSxnQkFBZ0IsR0FBN0IsTUFBYSxnQkFBYixDQUE2QjtBQUszQixFQUFBLFdBQUEsQ0FBb0IsY0FBcEIsRUFBNEQsY0FBNUQsRUFBNkY7QUFBQTtBQUFBO0FBQUE7QUFBekUsU0FBQSxjQUFBLEdBQUEsY0FBQTs7QUFBeUU7QUFBQTtBQUFqQyxTQUFBLGNBQUEsR0FBQSxjQUFBOztBQUFpQztBQUFBO0FBRjdGLFNBQUEsZUFBQSxHQUFrQixJQUFsQjtBQUVpRzs7QUFFakcsRUFBQSxRQUFRLEdBQUE7QUFBQTtBQUFBO0FBQUE7QUFDTixTQUFLLE9BQUw7QUFDRDs7QUFFRCxFQUFBLE9BQU8sR0FBQTtBQUFBO0FBQUE7QUFBQTtBQUNMLFNBQUssZUFBTCxHQUF1QixJQUF2Qjs7QUFESztBQUFBO0FBRUwsU0FBSyxjQUFMLENBQ0csVUFESCxHQUVHLElBRkgsQ0FHSSxXQUFBLENBQUEsT0FBQSxDQUNFLE1BQU07QUFBQTtBQUFBO0FBQUE7QUFBQSxrQkFBSyxjQUFMLENBQW9CLFVBQXBCO0FBQWdDLEtBRHhDLEVBRUUsQ0FBQyxPQUFELEVBQW1CLFVBQW5CLEtBQTZDO0FBQUE7QUFBQTtBQUFBO0FBQzNDLFdBQUssT0FBTCxHQUFlLE9BQWY7O0FBRDJDO0FBQUE7QUFFM0MsV0FBSyxPQUFMLEdBQWUsVUFBVSxDQUFDLE9BQTFCOztBQUYyQztBQUFBO0FBRzNDLFdBQUssZUFBTCxHQUF1QixLQUF2Qjs7QUFIMkM7QUFBQTtBQUkzQyxXQUFLLGNBQUwsQ0FBb0IsYUFBcEI7QUFDRCxLQVBILENBSEosRUFhRyxTQWJIO0FBY0Q7O0FBRUQsRUFBQSxnQkFBZ0IsQ0FBQyxHQUFELEVBQWdCO0FBQUE7QUFBQTtBQUFBO0FBQzlCLFdBQU87QUFBQTtBQUFBLHdDQUFLLE9BQUw7QUFBQTtBQUFBLG1DQUFnQixLQUFLLE9BQUwsQ0FBYSxHQUFiLENBQWhCO0FBQVA7QUFDRDs7QUFFRCxFQUFBLGlDQUFpQyxDQUFDLEdBQUQsRUFBZ0I7QUFBQTtBQUFBO0FBQUE7QUFDL0MsV0FBTztBQUFBO0FBQUEsd0NBQUssT0FBTDtBQUFBO0FBQUEsbUNBQWdCLEtBQUssT0FBTCxDQUFhLEdBQWIsQ0FBaEI7QUFBQTtBQUFBLG1DQUFxQyxJQUFJLENBQUMsU0FBTCxDQUFlLEtBQUssT0FBTCxDQUFhLEdBQWIsQ0FBZixNQUFzQyxJQUEzRTtBQUFQO0FBQ0Q7O0FBbkMwQixDQUE3Qjs7OztBQUFhLGdCQUFnQixHQUFBLE9BQUEsQ0FBQSxVQUFBLENBQUEsQ0FMNUIsTUFBQSxDQUFBLFNBQUEsQ0FBVTtBQUNULEVBQUEsUUFBUSxFQUFFLGFBREQ7QUFFVCxFQUFBLFFBQUEsRUFBQSxPQUFBLENBQWEsMEJBQWIsQ0FGUztBQUdULEVBQUEsZUFBZSxFQUFFLE1BQUEsQ0FBQSx1QkFBQSxDQUF3QjtBQUhoQyxDQUFWLENBSzRCLEUseUNBS1MsaUJBQUEsQ0FBQSxjLEVBQXdDLE1BQUEsQ0FBQSxpQixFQUxqRCxDQUFBLEVBQWhCLGdCQUFnQixDQUFoQjs7OztBQUFBLE9BQUEsQ0FBQSxnQkFBQSxHQUFBLGdCQUFBIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBPbkluaXQsIENoYW5nZURldGVjdGlvblN0cmF0ZWd5LCBDaGFuZ2VEZXRlY3RvclJlZiB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5pbXBvcnQgeyBmbGF0TWFwIH0gZnJvbSAncnhqcy9vcGVyYXRvcnMnO1xyXG5cclxuaW1wb3J0IHsgTWV0cmljc1NlcnZpY2UsIE1ldHJpY3MsIE1ldHJpY3NLZXksIFRocmVhZER1bXAsIFRocmVhZCB9IGZyb20gJy4vbWV0cmljcy5zZXJ2aWNlJztcclxuXHJcbkBDb21wb25lbnQoe1xyXG4gIHNlbGVjdG9yOiAnamhpLW1ldHJpY3MnLFxyXG4gIHRlbXBsYXRlVXJsOiAnLi9tZXRyaWNzLmNvbXBvbmVudC5odG1sJyxcclxuICBjaGFuZ2VEZXRlY3Rpb246IENoYW5nZURldGVjdGlvblN0cmF0ZWd5Lk9uUHVzaCxcclxufSlcclxuZXhwb3J0IGNsYXNzIE1ldHJpY3NDb21wb25lbnQgaW1wbGVtZW50cyBPbkluaXQge1xyXG4gIG1ldHJpY3M/OiBNZXRyaWNzO1xyXG4gIHRocmVhZHM/OiBUaHJlYWRbXTtcclxuICB1cGRhdGluZ01ldHJpY3MgPSB0cnVlO1xyXG5cclxuICBjb25zdHJ1Y3Rvcihwcml2YXRlIG1ldHJpY3NTZXJ2aWNlOiBNZXRyaWNzU2VydmljZSwgcHJpdmF0ZSBjaGFuZ2VEZXRlY3RvcjogQ2hhbmdlRGV0ZWN0b3JSZWYpIHt9XHJcblxyXG4gIG5nT25Jbml0KCk6IHZvaWQge1xyXG4gICAgdGhpcy5yZWZyZXNoKCk7XHJcbiAgfVxyXG5cclxuICByZWZyZXNoKCk6IHZvaWQge1xyXG4gICAgdGhpcy51cGRhdGluZ01ldHJpY3MgPSB0cnVlO1xyXG4gICAgdGhpcy5tZXRyaWNzU2VydmljZVxyXG4gICAgICAuZ2V0TWV0cmljcygpXHJcbiAgICAgIC5waXBlKFxyXG4gICAgICAgIGZsYXRNYXAoXHJcbiAgICAgICAgICAoKSA9PiB0aGlzLm1ldHJpY3NTZXJ2aWNlLnRocmVhZER1bXAoKSxcclxuICAgICAgICAgIChtZXRyaWNzOiBNZXRyaWNzLCB0aHJlYWREdW1wOiBUaHJlYWREdW1wKSA9PiB7XHJcbiAgICAgICAgICAgIHRoaXMubWV0cmljcyA9IG1ldHJpY3M7XHJcbiAgICAgICAgICAgIHRoaXMudGhyZWFkcyA9IHRocmVhZER1bXAudGhyZWFkcztcclxuICAgICAgICAgICAgdGhpcy51cGRhdGluZ01ldHJpY3MgPSBmYWxzZTtcclxuICAgICAgICAgICAgdGhpcy5jaGFuZ2VEZXRlY3Rvci5kZXRlY3RDaGFuZ2VzKCk7XHJcbiAgICAgICAgICB9XHJcbiAgICAgICAgKVxyXG4gICAgICApXHJcbiAgICAgIC5zdWJzY3JpYmUoKTtcclxuICB9XHJcblxyXG4gIG1ldHJpY3NLZXlFeGlzdHMoa2V5OiBNZXRyaWNzS2V5KTogYm9vbGVhbiB7XHJcbiAgICByZXR1cm4gdGhpcy5tZXRyaWNzICYmIHRoaXMubWV0cmljc1trZXldO1xyXG4gIH1cclxuXHJcbiAgbWV0cmljc0tleUV4aXN0c0FuZE9iamVjdE5vdEVtcHR5KGtleTogTWV0cmljc0tleSk6IGJvb2xlYW4ge1xyXG4gICAgcmV0dXJuIHRoaXMubWV0cmljcyAmJiB0aGlzLm1ldHJpY3Nba2V5XSAmJiBKU09OLnN0cmluZ2lmeSh0aGlzLm1ldHJpY3Nba2V5XSkgIT09ICd7fSc7XHJcbiAgfVxyXG59XHJcbiJdfQ==