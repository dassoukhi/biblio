{"file":"C:\\Users\\Dass\\Desktop\\Master1_YNOV\\DevLogiciel\\biblio\\src\\test\\javascript\\spec\\app\\core\\login\\login-modal.service.spec.ts","mappings":";;;AAAA,mDAAgD;AAChD,6DAAsD;AAEtD,4EAAuE;AAEvE,6BAA6B;AAC7B,MAAa,eAAe;IAA5B;QACE,WAAM,GAAiB,IAAI,OAAO,CAAC,OAAO,CAAC,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC;IAC9D,CAAC;CAAA;AAFD,0CAEC;AAED,QAAQ,CAAC,eAAe,EAAE,GAAG,EAAE;IAC7B,QAAQ,CAAC,qBAAqB,EAAE,GAAG,EAAE;QACnC,IAAI,OAA0B,CAAC;QAC/B,IAAI,YAAsB,CAAC;QAE3B,UAAU,CAAC,GAAG,EAAE;YACd,OAAO,GAAG,iBAAO,CAAC,GAAG,CAAC,uCAAiB,CAAC,CAAC;YACzC,YAAY,GAAG,iBAAO,CAAC,GAAG,CAAC,uBAAQ,CAAC,CAAC;QACvC,CAAC,CAAC,CAAC;QAEH,QAAQ,CAAC,iBAAiB,EAAE,GAAG,EAAE;YAC/B,EAAE,CAAC,iEAAiE,EAAE,GAAG,EAAE;gBACzE,QAAQ;gBACR,MAAM,YAAY,GAAoB,IAAI,eAAe,EAAE,CAAC;gBAC5D,KAAK,CAAC,YAAY,EAAE,MAAM,CAAC,CAAC,GAAG,CAAC,WAAW,CAAC,YAAY,CAAC,CAAC;gBAE1D,OAAO;gBACP,OAAO,CAAC,IAAI,EAAE,CAAC;gBAEf,OAAO;gBACP,MAAM,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC,gBAAgB,EAAE,CAAC;YAC/C,CAAC,CAAC,CAAC;YAEH,EAAE,CAAC,gFAAgF,EAAE,GAAG,EAAE;gBACxF,QAAQ;gBACR,MAAM,YAAY,GAAoB,IAAI,eAAe,EAAE,CAAC;gBAC5D,KAAK,CAAC,YAAY,EAAE,MAAM,CAAC,CAAC,GAAG,CAAC,WAAW,CAAC,YAAY,CAAC,CAAC;gBAE1D,OAAO;gBACP,OAAO,CAAC,IAAI,EAAE,CAAC;gBACf,OAAO,CAAC,IAAI,EAAE,CAAC;gBAEf,OAAO;gBACP,MAAM,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC,qBAAqB,CAAC,CAAC,CAAC,CAAC;YACrD,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","names":[],"sources":["C:\\Users\\Dass\\Desktop\\Master1_YNOV\\DevLogiciel\\biblio\\src\\test\\javascript\\spec\\app\\core\\login\\login-modal.service.spec.ts"],"sourcesContent":["import { TestBed } from '@angular/core/testing';\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\n\r\nimport { LoginModalService } from 'app/core/login/login-modal.service';\r\n\r\n// Mock class for NgbModalRef\r\nexport class MockNgbModalRef {\r\n  result: Promise<any> = new Promise(resolve => resolve('x'));\r\n}\r\n\r\ndescribe('Service Tests', () => {\r\n  describe('Login Modal Service', () => {\r\n    let service: LoginModalService;\r\n    let modalService: NgbModal;\r\n\r\n    beforeEach(() => {\r\n      service = TestBed.get(LoginModalService);\r\n      modalService = TestBed.get(NgbModal);\r\n    });\r\n\r\n    describe('Service methods', () => {\r\n      it('Should call open method for NgbModal when open method is called', () => {\r\n        // GIVEN\r\n        const mockModalRef: MockNgbModalRef = new MockNgbModalRef();\r\n        spyOn(modalService, 'open').and.returnValue(mockModalRef);\r\n\r\n        // WHEN\r\n        service.open();\r\n\r\n        // THEN\r\n        expect(modalService.open).toHaveBeenCalled();\r\n      });\r\n\r\n      it('Should call open method for NgbModal one time when open method is called twice', () => {\r\n        // GIVEN\r\n        const mockModalRef: MockNgbModalRef = new MockNgbModalRef();\r\n        spyOn(modalService, 'open').and.returnValue(mockModalRef);\r\n\r\n        // WHEN\r\n        service.open();\r\n        service.open();\r\n\r\n        // THEN\r\n        expect(modalService.open).toHaveBeenCalledTimes(1);\r\n      });\r\n    });\r\n  });\r\n});\r\n"],"version":3}