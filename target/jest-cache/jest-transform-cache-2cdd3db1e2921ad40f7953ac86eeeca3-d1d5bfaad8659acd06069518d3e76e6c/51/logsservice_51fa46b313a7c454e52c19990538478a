a3c77df8e1980e9e9588d4b29b0d6338
"use strict";

/* istanbul ignore next */
function cov_15io6tptbo() {
  var path = "C:\\Users\\Dass\\Desktop\\Master1_YNOV\\DevLogiciel\\biblio\\src\\main\\webapp\\app\\admin\\logs\\logs.service.ts";
  var hash = "0fb247ab4441bb92591b4e53f015b2f82182eec0";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\Dass\\Desktop\\Master1_YNOV\\DevLogiciel\\biblio\\src\\main\\webapp\\app\\admin\\logs\\logs.service.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 2,
          column: 62
        }
      },
      "1": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 3,
          column: 29
        }
      },
      "2": {
        start: {
          line: 4,
          column: 16
        },
        end: {
          line: 4,
          column: 32
        }
      },
      "3": {
        start: {
          line: 5,
          column: 15
        },
        end: {
          line: 5,
          column: 39
        }
      },
      "4": {
        start: {
          line: 6,
          column: 15
        },
        end: {
          line: 6,
          column: 46
        }
      },
      "5": {
        start: {
          line: 7,
          column: 24
        },
        end: {
          line: 7,
          column: 52
        }
      },
      "6": {
        start: {
          line: 8,
          column: 18
        },
        end: {
          line: 18,
          column: 1
        }
      },
      "7": {
        start: {
          line: 10,
          column: 8
        },
        end: {
          line: 10,
          column: 25
        }
      },
      "8": {
        start: {
          line: 13,
          column: 8
        },
        end: {
          line: 13,
          column: 114
        }
      },
      "9": {
        start: {
          line: 16,
          column: 8
        },
        end: {
          line: 16,
          column: 84
        }
      },
      "10": {
        start: {
          line: 19,
          column: 0
        },
        end: {
          line: 22,
          column: 16
        }
      },
      "11": {
        start: {
          line: 23,
          column: 0
        },
        end: {
          line: 23,
          column: 34
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 9,
            column: 4
          },
          end: {
            line: 9,
            column: 5
          }
        },
        loc: {
          start: {
            line: 9,
            column: 22
          },
          end: {
            line: 11,
            column: 5
          }
        },
        line: 9
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 12,
            column: 4
          },
          end: {
            line: 12,
            column: 5
          }
        },
        loc: {
          start: {
            line: 12,
            column: 39
          },
          end: {
            line: 14,
            column: 5
          }
        },
        line: 12
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 15,
            column: 4
          },
          end: {
            line: 15,
            column: 5
          }
        },
        loc: {
          start: {
            line: 15,
            column: 14
          },
          end: {
            line: 17,
            column: 5
          }
        },
        line: 15
      }
    },
    branchMap: {},
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0
    },
    b: {},
    inputSourceMap: {
      file: "C:\\Users\\Dass\\Desktop\\Master1_YNOV\\DevLogiciel\\biblio\\src\\main\\webapp\\app\\admin\\logs\\logs.service.ts",
      mappings: ";;;;AAAA,wCAA2C;AAC3C,+CAAkD;AAGlD,qDAAmD;AAInD,IAAa,WAAW,GAAxB,MAAa,WAAW;IACtB,YAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;IAAG,CAAC;IAExC,WAAW,CAAC,IAAY,EAAE,eAAsB;QAC9C,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,8BAAc,GAAG,qBAAqB,GAAG,IAAI,EAAE,EAAE,eAAe,EAAE,CAAC,CAAC;IAC5F,CAAC;IAED,OAAO;QACL,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAkB,8BAAc,GAAG,oBAAoB,CAAC,CAAC;IAC/E,CAAC;CACF,CAAA;AAVY,WAAW;IADvB,iBAAU,CAAC,EAAE,UAAU,EAAE,MAAM,EAAE,CAAC;6CAEP,iBAAU;GADzB,WAAW,CAUvB;AAVY,kCAAW",
      names: [],
      sources: ["C:\\Users\\Dass\\Desktop\\Master1_YNOV\\DevLogiciel\\biblio\\src\\main\\webapp\\app\\admin\\logs\\logs.service.ts"],
      sourcesContent: ["import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n\r\nimport { SERVER_API_URL } from 'app/app.constants';\r\nimport { LoggersResponse, Level } from './log.model';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class LogsService {\r\n  constructor(private http: HttpClient) {}\r\n\r\n  changeLevel(name: string, configuredLevel: Level): Observable<{}> {\r\n    return this.http.post(SERVER_API_URL + 'management/loggers/' + name, { configuredLevel });\r\n  }\r\n\r\n  findAll(): Observable<LoggersResponse> {\r\n    return this.http.get<LoggersResponse>(SERVER_API_URL + 'management/loggers');\r\n  }\r\n}\r\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "0fb247ab4441bb92591b4e53f015b2f82182eec0"
  };
  var coverage = global[gcv] || (global[gcv] = {});

  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }

  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_15io6tptbo = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}

cov_15io6tptbo();
cov_15io6tptbo().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});

/* istanbul ignore next */
cov_15io6tptbo().s[1]++;
exports.LogsService = void 0;
const tslib_1 =
/* istanbul ignore next */
(cov_15io6tptbo().s[2]++, require("tslib"));
const core_1 =
/* istanbul ignore next */
(cov_15io6tptbo().s[3]++, require("@angular/core"));
const http_1 =
/* istanbul ignore next */
(cov_15io6tptbo().s[4]++, require("@angular/common/http"));
const app_constants_1 =
/* istanbul ignore next */
(cov_15io6tptbo().s[5]++, require("app/app.constants"));

/* istanbul ignore next */
cov_15io6tptbo().s[6]++;
let LogsService = class LogsService {
  constructor(http) {
    /* istanbul ignore next */
    cov_15io6tptbo().f[0]++;
    cov_15io6tptbo().s[7]++;
    this.http = http;
  }

  changeLevel(name, configuredLevel) {
    /* istanbul ignore next */
    cov_15io6tptbo().f[1]++;
    cov_15io6tptbo().s[8]++;
    return this.http.post(app_constants_1.SERVER_API_URL + 'management/loggers/' + name, {
      configuredLevel
    });
  }

  findAll() {
    /* istanbul ignore next */
    cov_15io6tptbo().f[2]++;
    cov_15io6tptbo().s[9]++;
    return this.http.get(app_constants_1.SERVER_API_URL + 'management/loggers');
  }

};

/* istanbul ignore next */
cov_15io6tptbo().s[10]++;
LogsService = tslib_1.__decorate([core_1.Injectable({
  providedIn: 'root'
}), tslib_1.__metadata("design:paramtypes", [http_1.HttpClient])], LogsService);

/* istanbul ignore next */
cov_15io6tptbo().s[11]++;
exports.LogsService = LogsService;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcRGFzc1xcRGVza3RvcFxcTWFzdGVyMV9ZTk9WXFxEZXZMb2dpY2llbFxcYmlibGlvXFxzcmNcXG1haW5cXHdlYmFwcFxcYXBwXFxhZG1pblxcbG9nc1xcbG9ncy5zZXJ2aWNlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQWdCSTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFoQkosTUFBQSxNQUFBO0FBQUE7QUFBQSwwQkFBQSxPQUFBLENBQUEsZUFBQSxDQUFBLENBQUE7QUFDQSxNQUFBLE1BQUE7QUFBQTtBQUFBLDBCQUFBLE9BQUEsQ0FBQSxzQkFBQSxDQUFBLENBQUE7QUFHQSxNQUFBLGVBQUE7QUFBQTtBQUFBLDBCQUFBLE9BQUEsQ0FBQSxtQkFBQSxDQUFBLENBQUE7Ozs7QUFJQSxJQUFhLFdBQVcsR0FBeEIsTUFBYSxXQUFiLENBQXdCO0FBQ3RCLEVBQUEsV0FBQSxDQUFvQixJQUFwQixFQUFvQztBQUFBO0FBQUE7QUFBQTtBQUFoQixTQUFBLElBQUEsR0FBQSxJQUFBO0FBQW9COztBQUV4QyxFQUFBLFdBQVcsQ0FBQyxJQUFELEVBQWUsZUFBZixFQUFxQztBQUFBO0FBQUE7QUFBQTtBQUM5QyxXQUFPLEtBQUssSUFBTCxDQUFVLElBQVYsQ0FBZSxlQUFBLENBQUEsY0FBQSxHQUFpQixxQkFBakIsR0FBeUMsSUFBeEQsRUFBOEQ7QUFBRSxNQUFBO0FBQUYsS0FBOUQsQ0FBUDtBQUNEOztBQUVELEVBQUEsT0FBTyxHQUFBO0FBQUE7QUFBQTtBQUFBO0FBQ0wsV0FBTyxLQUFLLElBQUwsQ0FBVSxHQUFWLENBQStCLGVBQUEsQ0FBQSxjQUFBLEdBQWlCLG9CQUFoRCxDQUFQO0FBQ0Q7O0FBVHFCLENBQXhCOzs7O0FBQWEsV0FBVyxHQUFBLE9BQUEsQ0FBQSxVQUFBLENBQUEsQ0FEdkIsTUFBQSxDQUFBLFVBQUEsQ0FBVztBQUFFLEVBQUEsVUFBVSxFQUFFO0FBQWQsQ0FBWCxDQUN1QixFLHlDQUNJLE1BQUEsQ0FBQSxVLEVBREosQ0FBQSxFQUFYLFdBQVcsQ0FBWDs7OztBQUFBLE9BQUEsQ0FBQSxXQUFBLEdBQUEsV0FBQSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEluamVjdGFibGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuaW1wb3J0IHsgSHR0cENsaWVudCB9IGZyb20gJ0Bhbmd1bGFyL2NvbW1vbi9odHRwJztcclxuaW1wb3J0IHsgT2JzZXJ2YWJsZSB9IGZyb20gJ3J4anMnO1xyXG5cclxuaW1wb3J0IHsgU0VSVkVSX0FQSV9VUkwgfSBmcm9tICdhcHAvYXBwLmNvbnN0YW50cyc7XHJcbmltcG9ydCB7IExvZ2dlcnNSZXNwb25zZSwgTGV2ZWwgfSBmcm9tICcuL2xvZy5tb2RlbCc7XHJcblxyXG5ASW5qZWN0YWJsZSh7IHByb3ZpZGVkSW46ICdyb290JyB9KVxyXG5leHBvcnQgY2xhc3MgTG9nc1NlcnZpY2Uge1xyXG4gIGNvbnN0cnVjdG9yKHByaXZhdGUgaHR0cDogSHR0cENsaWVudCkge31cclxuXHJcbiAgY2hhbmdlTGV2ZWwobmFtZTogc3RyaW5nLCBjb25maWd1cmVkTGV2ZWw6IExldmVsKTogT2JzZXJ2YWJsZTx7fT4ge1xyXG4gICAgcmV0dXJuIHRoaXMuaHR0cC5wb3N0KFNFUlZFUl9BUElfVVJMICsgJ21hbmFnZW1lbnQvbG9nZ2Vycy8nICsgbmFtZSwgeyBjb25maWd1cmVkTGV2ZWwgfSk7XHJcbiAgfVxyXG5cclxuICBmaW5kQWxsKCk6IE9ic2VydmFibGU8TG9nZ2Vyc1Jlc3BvbnNlPiB7XHJcbiAgICByZXR1cm4gdGhpcy5odHRwLmdldDxMb2dnZXJzUmVzcG9uc2U+KFNFUlZFUl9BUElfVVJMICsgJ21hbmFnZW1lbnQvbG9nZ2VycycpO1xyXG4gIH1cclxufVxyXG4iXX0=