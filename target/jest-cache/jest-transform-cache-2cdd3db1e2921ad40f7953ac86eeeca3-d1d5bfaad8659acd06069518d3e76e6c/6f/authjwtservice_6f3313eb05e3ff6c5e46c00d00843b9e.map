{"version":3,"sources":["C:\\Users\\Dass\\Desktop\\Master1_YNOV\\DevLogiciel\\biblio\\src\\main\\webapp\\app\\core\\auth\\auth-jwt.service.ts"],"names":[],"mappings":"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","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { LocalStorageService, SessionStorageService } from 'ngx-webstorage';\r\n\r\nimport { SERVER_API_URL } from 'app/app.constants';\r\nimport { Login } from 'app/core/login/login.model';\r\n\r\ntype JwtToken = {\r\n  id_token: string;\r\n};\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class AuthServerProvider {\r\n  constructor(private http: HttpClient, private $localStorage: LocalStorageService, private $sessionStorage: SessionStorageService) {}\r\n\r\n  getToken(): string {\r\n    return this.$localStorage.retrieve('authenticationToken') || this.$sessionStorage.retrieve('authenticationToken') || '';\r\n  }\r\n\r\n  login(credentials: Login): Observable<void> {\r\n    return this.http\r\n      .post<JwtToken>(SERVER_API_URL + 'api/authenticate', credentials)\r\n      .pipe(map(response => this.authenticateSuccess(response, credentials.rememberMe)));\r\n  }\r\n\r\n  logout(): Observable<void> {\r\n    return new Observable(observer => {\r\n      this.$localStorage.clear('authenticationToken');\r\n      this.$sessionStorage.clear('authenticationToken');\r\n      observer.complete();\r\n    });\r\n  }\r\n\r\n  private authenticateSuccess(response: JwtToken, rememberMe: boolean): void {\r\n    const jwt = response.id_token;\r\n    if (rememberMe) {\r\n      this.$localStorage.store('authenticationToken', jwt);\r\n    } else {\r\n      this.$sessionStorage.store('authenticationToken', jwt);\r\n    }\r\n  }\r\n}\r\n"]}