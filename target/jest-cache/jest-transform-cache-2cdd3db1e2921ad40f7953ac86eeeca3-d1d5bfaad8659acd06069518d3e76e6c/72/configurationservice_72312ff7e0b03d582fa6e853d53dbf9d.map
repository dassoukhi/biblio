{"version":3,"sources":["C:\\Users\\Dass\\Desktop\\Master1_YNOV\\DevLogiciel\\biblio\\src\\main\\webapp\\app\\admin\\configuration\\configuration.service.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,MAAA,MAAA;AAAA;AAAA,0BAAA,OAAA,CAAA,eAAA,CAAA,CAAA;AACA,MAAA,MAAA;AAAA;AAAA,0BAAA,OAAA,CAAA,sBAAA,CAAA,CAAA;AAEA,MAAA,WAAA;AAAA;AAAA,0BAAA,OAAA,CAAA,gBAAA,CAAA,CAAA;AAEA,MAAA,eAAA;AAAA;AAAA,0BAAA,OAAA,CAAA,mBAAA,CAAA,CAAA;;;;AA4CA,IAAa,oBAAoB,GAAjC,MAAa,oBAAb,CAAiC;AAC/B,EAAA,WAAA,CAAoB,IAApB,EAAoC;AAAA;AAAA;AAAA;AAAhB,SAAA,IAAA,GAAA,IAAA;AAAoB;;AAExC,EAAA,QAAQ,GAAA;AAAA;AAAA;AAAA;AACN,WAAO,KAAK,IAAL,CAAU,GAAV,CAA2B,eAAA,CAAA,cAAA,GAAiB,wBAA5C,EAAsE,IAAtE,CACL,WAAA,CAAA,GAAA,CAAI,WAAW,IACb;AAAA;AAAA;AAAA;AAAA,aAAA,MAAM,CAAC,MAAP,CACE,MAAM,CAAC,MAAP,CAAc,WAAW,CAAC,QAA1B,EACG,GADH,CACO,OAAO,IAAI;AAAA;AAAA;AAAA;AAAA,eAAA,OAAO,CAAC,KAAR;AAAa,OAD/B,EAEG,MAFH,CAEU,CAAC,QAAD,EAAkB,YAAlB,KAA0C;AAAA;AAAA;AAAA;AAAA,eAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EAAM,QAAN,CAAA,EAAmB,YAAnB;AAA+B,OAFnF,CADF;AAIC,KALH,CADK,CAAP;AASD;;AAED,EAAA,kBAAkB,GAAA;AAAA;AAAA;AAAA;AAChB,WAAO,KAAK,IAAL,CAAU,GAAV,CAAmB,eAAA,CAAA,cAAA,GAAiB,gBAApC,EAAsD,IAAtD,CAA2D,WAAA,CAAA,GAAA,CAAI,GAAG,IAAI;AAAA;AAAA;AAAA;AAAA,aAAA,GAAG,CAAC,eAAJ;AAAmB,KAA9B,CAA3D,CAAP;AACD;;AAjB8B,CAAjC;;;;AAAa,oBAAoB,GAAA,OAAA,CAAA,UAAA,CAAA,CADhC,MAAA,CAAA,UAAA,CAAW;AAAE,EAAA,UAAU,EAAE;AAAd,CAAX,CACgC,E,yCACL,MAAA,CAAA,U,EADK,CAAA,EAApB,oBAAoB,CAApB;;;;AAAA,OAAA,CAAA,oBAAA,GAAA,oBAAA","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\n\r\nimport { SERVER_API_URL } from 'app/app.constants';\r\n\r\nexport interface ConfigProps {\r\n  contexts: Contexts;\r\n}\r\n\r\nexport interface Contexts {\r\n  [key: string]: Context;\r\n}\r\n\r\nexport interface Context {\r\n  beans: Beans;\r\n  parentId?: any;\r\n}\r\n\r\nexport interface Beans {\r\n  [key: string]: Bean;\r\n}\r\n\r\nexport interface Bean {\r\n  prefix: string;\r\n  properties: any;\r\n}\r\n\r\nexport interface Env {\r\n  activeProfiles?: string[];\r\n  propertySources: PropertySource[];\r\n}\r\n\r\nexport interface PropertySource {\r\n  name: string;\r\n  properties: Properties;\r\n}\r\n\r\nexport interface Properties {\r\n  [key: string]: Property;\r\n}\r\n\r\nexport interface Property {\r\n  value: string;\r\n  origin?: string;\r\n}\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class ConfigurationService {\r\n  constructor(private http: HttpClient) {}\r\n\r\n  getBeans(): Observable<Bean[]> {\r\n    return this.http.get<ConfigProps>(SERVER_API_URL + 'management/configprops').pipe(\r\n      map(configProps =>\r\n        Object.values(\r\n          Object.values(configProps.contexts)\r\n            .map(context => context.beans)\r\n            .reduce((allBeans: Beans, contextBeans: Beans) => ({ ...allBeans, ...contextBeans }))\r\n        )\r\n      )\r\n    );\r\n  }\r\n\r\n  getPropertySources(): Observable<PropertySource[]> {\r\n    return this.http.get<Env>(SERVER_API_URL + 'management/env').pipe(map(env => env.propertySources));\r\n  }\r\n}\r\n"]}