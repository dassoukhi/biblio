{"version":3,"sources":["C:\\Users\\Dass\\Desktop\\Master1_YNOV\\DevLogiciel\\biblio\\src\\main\\webapp\\app\\shared\\alert\\alert-error.component.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;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","sourcesContent":["import { Component, OnDestroy } from '@angular/core';\r\nimport { HttpErrorResponse } from '@angular/common/http';\r\nimport { JhiEventManager, JhiAlert, JhiAlertService, JhiEventWithContent } from 'ng-jhipster';\r\nimport { Subscription } from 'rxjs';\r\n\r\nimport { AlertError } from './alert-error.model';\r\n\r\n@Component({\r\n  selector: 'jhi-alert-error',\r\n  template: ` <div class=\"alerts\" role=\"alert\">\r\n    <div *ngFor=\"let alert of alerts\" [ngClass]=\"setClasses(alert)\">\r\n      <ngb-alert *ngIf=\"alert && alert.type && alert.msg\" [type]=\"alert.type\" (close)=\"close(alert)\">\r\n        <pre [innerHTML]=\"alert.msg\"></pre>\r\n      </ngb-alert>\r\n    </div>\r\n  </div>`,\r\n})\r\nexport class AlertErrorComponent implements OnDestroy {\r\n  alerts: JhiAlert[] = [];\r\n  errorListener: Subscription;\r\n  httpErrorListener: Subscription;\r\n\r\n  constructor(private alertService: JhiAlertService, private eventManager: JhiEventManager) {\r\n    this.errorListener = eventManager.subscribe('biblioApp.error', (response: JhiEventWithContent<AlertError>) => {\r\n      const errorResponse = response.content;\r\n      this.addErrorAlert(errorResponse.message);\r\n    });\r\n\r\n    this.httpErrorListener = eventManager.subscribe('biblioApp.httpError', (response: JhiEventWithContent<HttpErrorResponse>) => {\r\n      const httpErrorResponse = response.content;\r\n      switch (httpErrorResponse.status) {\r\n        // connection refused, server not reachable\r\n        case 0:\r\n          this.addErrorAlert('Server not reachable');\r\n          break;\r\n\r\n        case 400: {\r\n          const arr = httpErrorResponse.headers.keys();\r\n          let errorHeader = null;\r\n          arr.forEach(entry => {\r\n            if (entry.toLowerCase().endsWith('app-error')) {\r\n              errorHeader = httpErrorResponse.headers.get(entry);\r\n            }\r\n          });\r\n          if (errorHeader) {\r\n            this.addErrorAlert(errorHeader);\r\n          } else if (httpErrorResponse.error !== '' && httpErrorResponse.error.fieldErrors) {\r\n            const fieldErrors = httpErrorResponse.error.fieldErrors;\r\n            for (const fieldError of fieldErrors) {\r\n              if (['Min', 'Max', 'DecimalMin', 'DecimalMax'].includes(fieldError.message)) {\r\n                fieldError.message = 'Size';\r\n              }\r\n              // convert 'something[14].other[4].id' to 'something[].other[].id' so translations can be written to it\r\n              const convertedField = fieldError.field.replace(/\\[\\d*\\]/g, '[]');\r\n              const fieldName = convertedField.charAt(0).toUpperCase() + convertedField.slice(1);\r\n              this.addErrorAlert('Error on field \"' + fieldName + '\"');\r\n            }\r\n          } else if (httpErrorResponse.error !== '' && httpErrorResponse.error.message) {\r\n            this.addErrorAlert(httpErrorResponse.error.message);\r\n          } else {\r\n            this.addErrorAlert(httpErrorResponse.error);\r\n          }\r\n          break;\r\n        }\r\n\r\n        case 404:\r\n          this.addErrorAlert('Not found');\r\n          break;\r\n\r\n        default:\r\n          if (httpErrorResponse.error !== '' && httpErrorResponse.error.message) {\r\n            this.addErrorAlert(httpErrorResponse.error.message);\r\n          } else {\r\n            this.addErrorAlert(httpErrorResponse.error);\r\n          }\r\n      }\r\n    });\r\n  }\r\n\r\n  setClasses(alert: JhiAlert): { [key: string]: boolean } {\r\n    const classes = { 'jhi-toast': Boolean(alert.toast) };\r\n    if (alert.position) {\r\n      return { ...classes, [alert.position]: true };\r\n    }\r\n    return classes;\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    if (this.errorListener) {\r\n      this.eventManager.destroy(this.errorListener);\r\n    }\r\n    if (this.httpErrorListener) {\r\n      this.eventManager.destroy(this.httpErrorListener);\r\n    }\r\n  }\r\n\r\n  addErrorAlert(message: string): void {\r\n    const newAlert: JhiAlert = {\r\n      type: 'danger',\r\n      msg: message,\r\n      timeout: 5000,\r\n      toast: this.alertService.isToast(),\r\n      scoped: true,\r\n    };\r\n\r\n    this.alerts.push(this.alertService.addAlert(newAlert, this.alerts));\r\n  }\r\n\r\n  close(alert: JhiAlert): void {\r\n    // NOSONAR can be removed after https://github.com/SonarSource/SonarJS/issues/1930 is resolved\r\n    alert.close?.(this.alerts); // NOSONAR\r\n  }\r\n}\r\n"]}