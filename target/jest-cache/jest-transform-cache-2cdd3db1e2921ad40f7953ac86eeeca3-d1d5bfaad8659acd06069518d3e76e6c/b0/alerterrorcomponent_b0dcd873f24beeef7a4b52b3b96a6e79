c8efd0a967752136353bf7a9df5da1c1
"use strict";

/* istanbul ignore next */
function cov_23gl0j01kx() {
  var path = "C:\\Users\\Dass\\Desktop\\Master1_YNOV\\DevLogiciel\\biblio\\src\\main\\webapp\\app\\shared\\alert\\alert-error.component.ts";
  var hash = "75013aedf08a108bf6c4995af72168e91df8d514";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\Dass\\Desktop\\Master1_YNOV\\DevLogiciel\\biblio\\src\\main\\webapp\\app\\shared\\alert\\alert-error.component.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 2,
          column: 62
        }
      },
      "1": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 3,
          column: 37
        }
      },
      "2": {
        start: {
          line: 4,
          column: 16
        },
        end: {
          line: 4,
          column: 32
        }
      },
      "3": {
        start: {
          line: 5,
          column: 15
        },
        end: {
          line: 5,
          column: 39
        }
      },
      "4": {
        start: {
          line: 6,
          column: 22
        },
        end: {
          line: 6,
          column: 44
        }
      },
      "5": {
        start: {
          line: 7,
          column: 26
        },
        end: {
          line: 97,
          column: 1
        }
      },
      "6": {
        start: {
          line: 9,
          column: 8
        },
        end: {
          line: 9,
          column: 41
        }
      },
      "7": {
        start: {
          line: 10,
          column: 8
        },
        end: {
          line: 10,
          column: 41
        }
      },
      "8": {
        start: {
          line: 11,
          column: 8
        },
        end: {
          line: 11,
          column: 25
        }
      },
      "9": {
        start: {
          line: 12,
          column: 8
        },
        end: {
          line: 15,
          column: 11
        }
      },
      "10": {
        start: {
          line: 13,
          column: 34
        },
        end: {
          line: 13,
          column: 50
        }
      },
      "11": {
        start: {
          line: 14,
          column: 12
        },
        end: {
          line: 14,
          column: 54
        }
      },
      "12": {
        start: {
          line: 16,
          column: 8
        },
        end: {
          line: 65,
          column: 11
        }
      },
      "13": {
        start: {
          line: 17,
          column: 38
        },
        end: {
          line: 17,
          column: 54
        }
      },
      "14": {
        start: {
          line: 18,
          column: 12
        },
        end: {
          line: 64,
          column: 13
        }
      },
      "15": {
        start: {
          line: 21,
          column: 20
        },
        end: {
          line: 21,
          column: 63
        }
      },
      "16": {
        start: {
          line: 22,
          column: 20
        },
        end: {
          line: 22,
          column: 26
        }
      },
      "17": {
        start: {
          line: 24,
          column: 32
        },
        end: {
          line: 24,
          column: 64
        }
      },
      "18": {
        start: {
          line: 25,
          column: 38
        },
        end: {
          line: 25,
          column: 42
        }
      },
      "19": {
        start: {
          line: 26,
          column: 20
        },
        end: {
          line: 30,
          column: 23
        }
      },
      "20": {
        start: {
          line: 27,
          column: 24
        },
        end: {
          line: 29,
          column: 25
        }
      },
      "21": {
        start: {
          line: 28,
          column: 28
        },
        end: {
          line: 28,
          column: 79
        }
      },
      "22": {
        start: {
          line: 31,
          column: 20
        },
        end: {
          line: 51,
          column: 21
        }
      },
      "23": {
        start: {
          line: 32,
          column: 24
        },
        end: {
          line: 32,
          column: 56
        }
      },
      "24": {
        start: {
          line: 34,
          column: 25
        },
        end: {
          line: 51,
          column: 21
        }
      },
      "25": {
        start: {
          line: 35,
          column: 44
        },
        end: {
          line: 35,
          column: 79
        }
      },
      "26": {
        start: {
          line: 36,
          column: 24
        },
        end: {
          line: 44,
          column: 25
        }
      },
      "27": {
        start: {
          line: 37,
          column: 28
        },
        end: {
          line: 39,
          column: 29
        }
      },
      "28": {
        start: {
          line: 38,
          column: 32
        },
        end: {
          line: 38,
          column: 60
        }
      },
      "29": {
        start: {
          line: 41,
          column: 51
        },
        end: {
          line: 41,
          column: 93
        }
      },
      "30": {
        start: {
          line: 42,
          column: 46
        },
        end: {
          line: 42,
          column: 110
        }
      },
      "31": {
        start: {
          line: 43,
          column: 28
        },
        end: {
          line: 43,
          column: 85
        }
      },
      "32": {
        start: {
          line: 46,
          column: 25
        },
        end: {
          line: 51,
          column: 21
        }
      },
      "33": {
        start: {
          line: 47,
          column: 24
        },
        end: {
          line: 47,
          column: 76
        }
      },
      "34": {
        start: {
          line: 50,
          column: 24
        },
        end: {
          line: 50,
          column: 68
        }
      },
      "35": {
        start: {
          line: 52,
          column: 20
        },
        end: {
          line: 52,
          column: 26
        }
      },
      "36": {
        start: {
          line: 55,
          column: 20
        },
        end: {
          line: 55,
          column: 52
        }
      },
      "37": {
        start: {
          line: 56,
          column: 20
        },
        end: {
          line: 56,
          column: 26
        }
      },
      "38": {
        start: {
          line: 58,
          column: 20
        },
        end: {
          line: 63,
          column: 21
        }
      },
      "39": {
        start: {
          line: 59,
          column: 24
        },
        end: {
          line: 59,
          column: 76
        }
      },
      "40": {
        start: {
          line: 62,
          column: 24
        },
        end: {
          line: 62,
          column: 68
        }
      },
      "41": {
        start: {
          line: 68,
          column: 24
        },
        end: {
          line: 68,
          column: 61
        }
      },
      "42": {
        start: {
          line: 69,
          column: 8
        },
        end: {
          line: 71,
          column: 9
        }
      },
      "43": {
        start: {
          line: 70,
          column: 12
        },
        end: {
          line: 70,
          column: 89
        }
      },
      "44": {
        start: {
          line: 72,
          column: 8
        },
        end: {
          line: 72,
          column: 23
        }
      },
      "45": {
        start: {
          line: 75,
          column: 8
        },
        end: {
          line: 77,
          column: 9
        }
      },
      "46": {
        start: {
          line: 76,
          column: 12
        },
        end: {
          line: 76,
          column: 58
        }
      },
      "47": {
        start: {
          line: 78,
          column: 8
        },
        end: {
          line: 80,
          column: 9
        }
      },
      "48": {
        start: {
          line: 79,
          column: 12
        },
        end: {
          line: 79,
          column: 62
        }
      },
      "49": {
        start: {
          line: 83,
          column: 25
        },
        end: {
          line: 89,
          column: 9
        }
      },
      "50": {
        start: {
          line: 90,
          column: 8
        },
        end: {
          line: 90,
          column: 76
        }
      },
      "51": {
        start: {
          line: 95,
          column: 8
        },
        end: {
          line: 95,
          column: 92
        }
      },
      "52": {
        start: {
          line: 98,
          column: 0
        },
        end: {
          line: 110,
          column: 24
        }
      },
      "53": {
        start: {
          line: 111,
          column: 0
        },
        end: {
          line: 111,
          column: 50
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 8,
            column: 4
          },
          end: {
            line: 8,
            column: 5
          }
        },
        loc: {
          start: {
            line: 8,
            column: 44
          },
          end: {
            line: 66,
            column: 5
          }
        },
        line: 8
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 12,
            column: 71
          },
          end: {
            line: 12,
            column: 72
          }
        },
        loc: {
          start: {
            line: 12,
            column: 85
          },
          end: {
            line: 15,
            column: 9
          }
        },
        line: 12
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 16,
            column: 79
          },
          end: {
            line: 16,
            column: 80
          }
        },
        loc: {
          start: {
            line: 16,
            column: 93
          },
          end: {
            line: 65,
            column: 9
          }
        },
        line: 16
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 26,
            column: 32
          },
          end: {
            line: 26,
            column: 33
          }
        },
        loc: {
          start: {
            line: 26,
            column: 41
          },
          end: {
            line: 30,
            column: 21
          }
        },
        line: 26
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 67,
            column: 4
          },
          end: {
            line: 67,
            column: 5
          }
        },
        loc: {
          start: {
            line: 67,
            column: 22
          },
          end: {
            line: 73,
            column: 5
          }
        },
        line: 67
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 74,
            column: 4
          },
          end: {
            line: 74,
            column: 5
          }
        },
        loc: {
          start: {
            line: 74,
            column: 18
          },
          end: {
            line: 81,
            column: 5
          }
        },
        line: 74
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 82,
            column: 4
          },
          end: {
            line: 82,
            column: 5
          }
        },
        loc: {
          start: {
            line: 82,
            column: 27
          },
          end: {
            line: 91,
            column: 5
          }
        },
        line: 82
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 92,
            column: 4
          },
          end: {
            line: 92,
            column: 5
          }
        },
        loc: {
          start: {
            line: 92,
            column: 17
          },
          end: {
            line: 96,
            column: 5
          }
        },
        line: 92
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 18,
            column: 12
          },
          end: {
            line: 64,
            column: 13
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 20,
            column: 16
          },
          end: {
            line: 22,
            column: 26
          }
        }, {
          start: {
            line: 23,
            column: 16
          },
          end: {
            line: 53,
            column: 17
          }
        }, {
          start: {
            line: 54,
            column: 16
          },
          end: {
            line: 56,
            column: 26
          }
        }, {
          start: {
            line: 57,
            column: 16
          },
          end: {
            line: 63,
            column: 21
          }
        }],
        line: 18
      },
      "1": {
        loc: {
          start: {
            line: 27,
            column: 24
          },
          end: {
            line: 29,
            column: 25
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 27,
            column: 24
          },
          end: {
            line: 29,
            column: 25
          }
        }, {
          start: {
            line: 27,
            column: 24
          },
          end: {
            line: 29,
            column: 25
          }
        }],
        line: 27
      },
      "2": {
        loc: {
          start: {
            line: 31,
            column: 20
          },
          end: {
            line: 51,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 31,
            column: 20
          },
          end: {
            line: 51,
            column: 21
          }
        }, {
          start: {
            line: 31,
            column: 20
          },
          end: {
            line: 51,
            column: 21
          }
        }],
        line: 31
      },
      "3": {
        loc: {
          start: {
            line: 34,
            column: 25
          },
          end: {
            line: 51,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 34,
            column: 25
          },
          end: {
            line: 51,
            column: 21
          }
        }, {
          start: {
            line: 34,
            column: 25
          },
          end: {
            line: 51,
            column: 21
          }
        }],
        line: 34
      },
      "4": {
        loc: {
          start: {
            line: 34,
            column: 29
          },
          end: {
            line: 34,
            column: 98
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 34,
            column: 29
          },
          end: {
            line: 34,
            column: 59
          }
        }, {
          start: {
            line: 34,
            column: 63
          },
          end: {
            line: 34,
            column: 98
          }
        }],
        line: 34
      },
      "5": {
        loc: {
          start: {
            line: 37,
            column: 28
          },
          end: {
            line: 39,
            column: 29
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 37,
            column: 28
          },
          end: {
            line: 39,
            column: 29
          }
        }, {
          start: {
            line: 37,
            column: 28
          },
          end: {
            line: 39,
            column: 29
          }
        }],
        line: 37
      },
      "6": {
        loc: {
          start: {
            line: 46,
            column: 25
          },
          end: {
            line: 51,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 46,
            column: 25
          },
          end: {
            line: 51,
            column: 21
          }
        }, {
          start: {
            line: 46,
            column: 25
          },
          end: {
            line: 51,
            column: 21
          }
        }],
        line: 46
      },
      "7": {
        loc: {
          start: {
            line: 46,
            column: 29
          },
          end: {
            line: 46,
            column: 94
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 46,
            column: 29
          },
          end: {
            line: 46,
            column: 59
          }
        }, {
          start: {
            line: 46,
            column: 63
          },
          end: {
            line: 46,
            column: 94
          }
        }],
        line: 46
      },
      "8": {
        loc: {
          start: {
            line: 58,
            column: 20
          },
          end: {
            line: 63,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 58,
            column: 20
          },
          end: {
            line: 63,
            column: 21
          }
        }, {
          start: {
            line: 58,
            column: 20
          },
          end: {
            line: 63,
            column: 21
          }
        }],
        line: 58
      },
      "9": {
        loc: {
          start: {
            line: 58,
            column: 24
          },
          end: {
            line: 58,
            column: 89
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 58,
            column: 24
          },
          end: {
            line: 58,
            column: 54
          }
        }, {
          start: {
            line: 58,
            column: 58
          },
          end: {
            line: 58,
            column: 89
          }
        }],
        line: 58
      },
      "10": {
        loc: {
          start: {
            line: 69,
            column: 8
          },
          end: {
            line: 71,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 69,
            column: 8
          },
          end: {
            line: 71,
            column: 9
          }
        }, {
          start: {
            line: 69,
            column: 8
          },
          end: {
            line: 71,
            column: 9
          }
        }],
        line: 69
      },
      "11": {
        loc: {
          start: {
            line: 75,
            column: 8
          },
          end: {
            line: 77,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 75,
            column: 8
          },
          end: {
            line: 77,
            column: 9
          }
        }, {
          start: {
            line: 75,
            column: 8
          },
          end: {
            line: 77,
            column: 9
          }
        }],
        line: 75
      },
      "12": {
        loc: {
          start: {
            line: 78,
            column: 8
          },
          end: {
            line: 80,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 78,
            column: 8
          },
          end: {
            line: 80,
            column: 9
          }
        }, {
          start: {
            line: 78,
            column: 8
          },
          end: {
            line: 80,
            column: 9
          }
        }],
        line: 78
      },
      "13": {
        loc: {
          start: {
            line: 95,
            column: 8
          },
          end: {
            line: 95,
            column: 91
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 95,
            column: 55
          },
          end: {
            line: 95,
            column: 61
          }
        }, {
          start: {
            line: 95,
            column: 64
          },
          end: {
            line: 95,
            column: 91
          }
        }],
        line: 95
      },
      "14": {
        loc: {
          start: {
            line: 95,
            column: 8
          },
          end: {
            line: 95,
            column: 52
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 95,
            column: 8
          },
          end: {
            line: 95,
            column: 35
          }
        }, {
          start: {
            line: 95,
            column: 39
          },
          end: {
            line: 95,
            column: 52
          }
        }],
        line: 95
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0
    },
    b: {
      "0": [0, 0, 0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0]
    },
    inputSourceMap: {
      file: "C:\\Users\\Dass\\Desktop\\Master1_YNOV\\DevLogiciel\\biblio\\src\\main\\webapp\\app\\shared\\alert\\alert-error.component.ts",
      mappings: "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",
      names: [],
      sources: ["C:\\Users\\Dass\\Desktop\\Master1_YNOV\\DevLogiciel\\biblio\\src\\main\\webapp\\app\\shared\\alert\\alert-error.component.ts"],
      sourcesContent: ["import { Component, OnDestroy } from '@angular/core';\r\nimport { HttpErrorResponse } from '@angular/common/http';\r\nimport { JhiEventManager, JhiAlert, JhiAlertService, JhiEventWithContent } from 'ng-jhipster';\r\nimport { Subscription } from 'rxjs';\r\n\r\nimport { AlertError } from './alert-error.model';\r\n\r\n@Component({\r\n  selector: 'jhi-alert-error',\r\n  template: ` <div class=\"alerts\" role=\"alert\">\r\n    <div *ngFor=\"let alert of alerts\" [ngClass]=\"setClasses(alert)\">\r\n      <ngb-alert *ngIf=\"alert && alert.type && alert.msg\" [type]=\"alert.type\" (close)=\"close(alert)\">\r\n        <pre [innerHTML]=\"alert.msg\"></pre>\r\n      </ngb-alert>\r\n    </div>\r\n  </div>`,\r\n})\r\nexport class AlertErrorComponent implements OnDestroy {\r\n  alerts: JhiAlert[] = [];\r\n  errorListener: Subscription;\r\n  httpErrorListener: Subscription;\r\n\r\n  constructor(private alertService: JhiAlertService, private eventManager: JhiEventManager) {\r\n    this.errorListener = eventManager.subscribe('biblioApp.error', (response: JhiEventWithContent<AlertError>) => {\r\n      const errorResponse = response.content;\r\n      this.addErrorAlert(errorResponse.message);\r\n    });\r\n\r\n    this.httpErrorListener = eventManager.subscribe('biblioApp.httpError', (response: JhiEventWithContent<HttpErrorResponse>) => {\r\n      const httpErrorResponse = response.content;\r\n      switch (httpErrorResponse.status) {\r\n        // connection refused, server not reachable\r\n        case 0:\r\n          this.addErrorAlert('Server not reachable');\r\n          break;\r\n\r\n        case 400: {\r\n          const arr = httpErrorResponse.headers.keys();\r\n          let errorHeader = null;\r\n          arr.forEach(entry => {\r\n            if (entry.toLowerCase().endsWith('app-error')) {\r\n              errorHeader = httpErrorResponse.headers.get(entry);\r\n            }\r\n          });\r\n          if (errorHeader) {\r\n            this.addErrorAlert(errorHeader);\r\n          } else if (httpErrorResponse.error !== '' && httpErrorResponse.error.fieldErrors) {\r\n            const fieldErrors = httpErrorResponse.error.fieldErrors;\r\n            for (const fieldError of fieldErrors) {\r\n              if (['Min', 'Max', 'DecimalMin', 'DecimalMax'].includes(fieldError.message)) {\r\n                fieldError.message = 'Size';\r\n              }\r\n              // convert 'something[14].other[4].id' to 'something[].other[].id' so translations can be written to it\r\n              const convertedField = fieldError.field.replace(/\\[\\d*\\]/g, '[]');\r\n              const fieldName = convertedField.charAt(0).toUpperCase() + convertedField.slice(1);\r\n              this.addErrorAlert('Error on field \"' + fieldName + '\"');\r\n            }\r\n          } else if (httpErrorResponse.error !== '' && httpErrorResponse.error.message) {\r\n            this.addErrorAlert(httpErrorResponse.error.message);\r\n          } else {\r\n            this.addErrorAlert(httpErrorResponse.error);\r\n          }\r\n          break;\r\n        }\r\n\r\n        case 404:\r\n          this.addErrorAlert('Not found');\r\n          break;\r\n\r\n        default:\r\n          if (httpErrorResponse.error !== '' && httpErrorResponse.error.message) {\r\n            this.addErrorAlert(httpErrorResponse.error.message);\r\n          } else {\r\n            this.addErrorAlert(httpErrorResponse.error);\r\n          }\r\n      }\r\n    });\r\n  }\r\n\r\n  setClasses(alert: JhiAlert): { [key: string]: boolean } {\r\n    const classes = { 'jhi-toast': Boolean(alert.toast) };\r\n    if (alert.position) {\r\n      return { ...classes, [alert.position]: true };\r\n    }\r\n    return classes;\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    if (this.errorListener) {\r\n      this.eventManager.destroy(this.errorListener);\r\n    }\r\n    if (this.httpErrorListener) {\r\n      this.eventManager.destroy(this.httpErrorListener);\r\n    }\r\n  }\r\n\r\n  addErrorAlert(message: string): void {\r\n    const newAlert: JhiAlert = {\r\n      type: 'danger',\r\n      msg: message,\r\n      timeout: 5000,\r\n      toast: this.alertService.isToast(),\r\n      scoped: true,\r\n    };\r\n\r\n    this.alerts.push(this.alertService.addAlert(newAlert, this.alerts));\r\n  }\r\n\r\n  close(alert: JhiAlert): void {\r\n    // NOSONAR can be removed after https://github.com/SonarSource/SonarJS/issues/1930 is resolved\r\n    alert.close?.(this.alerts); // NOSONAR\r\n  }\r\n}\r\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "75013aedf08a108bf6c4995af72168e91df8d514"
  };
  var coverage = global[gcv] || (global[gcv] = {});

  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }

  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_23gl0j01kx = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}

cov_23gl0j01kx();
cov_23gl0j01kx().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});

/* istanbul ignore next */
cov_23gl0j01kx().s[1]++;
exports.AlertErrorComponent = void 0;
const tslib_1 =
/* istanbul ignore next */
(cov_23gl0j01kx().s[2]++, require("tslib"));
const core_1 =
/* istanbul ignore next */
(cov_23gl0j01kx().s[3]++, require("@angular/core"));
const ng_jhipster_1 =
/* istanbul ignore next */
(cov_23gl0j01kx().s[4]++, require("ng-jhipster"));

/* istanbul ignore next */
cov_23gl0j01kx().s[5]++;
let AlertErrorComponent = class AlertErrorComponent {
  constructor(alertService, eventManager) {
    /* istanbul ignore next */
    cov_23gl0j01kx().f[0]++;
    cov_23gl0j01kx().s[6]++;
    this.alertService = alertService;

    /* istanbul ignore next */
    cov_23gl0j01kx().s[7]++;
    this.eventManager = eventManager;

    /* istanbul ignore next */
    cov_23gl0j01kx().s[8]++;
    this.alerts = [];

    /* istanbul ignore next */
    cov_23gl0j01kx().s[9]++;
    this.errorListener = eventManager.subscribe('biblioApp.error', response => {
      /* istanbul ignore next */
      cov_23gl0j01kx().f[1]++;
      const errorResponse =
      /* istanbul ignore next */
      (cov_23gl0j01kx().s[10]++, response.content);

      /* istanbul ignore next */
      cov_23gl0j01kx().s[11]++;
      this.addErrorAlert(errorResponse.message);
    });

    /* istanbul ignore next */
    cov_23gl0j01kx().s[12]++;
    this.httpErrorListener = eventManager.subscribe('biblioApp.httpError', response => {
      /* istanbul ignore next */
      cov_23gl0j01kx().f[2]++;
      const httpErrorResponse =
      /* istanbul ignore next */
      (cov_23gl0j01kx().s[13]++, response.content);

      /* istanbul ignore next */
      cov_23gl0j01kx().s[14]++;

      switch (httpErrorResponse.status) {
        // connection refused, server not reachable
        case 0:
          /* istanbul ignore next */
          cov_23gl0j01kx().b[0][0]++;
          cov_23gl0j01kx().s[15]++;
          this.addErrorAlert('Server not reachable');

          /* istanbul ignore next */
          cov_23gl0j01kx().s[16]++;
          break;

        case 400:
          /* istanbul ignore next */
          cov_23gl0j01kx().b[0][1]++;
          {
            const arr =
            /* istanbul ignore next */
            (cov_23gl0j01kx().s[17]++, httpErrorResponse.headers.keys());
            let errorHeader =
            /* istanbul ignore next */
            (cov_23gl0j01kx().s[18]++, null);

            /* istanbul ignore next */
            cov_23gl0j01kx().s[19]++;
            arr.forEach(entry => {
              /* istanbul ignore next */
              cov_23gl0j01kx().f[3]++;
              cov_23gl0j01kx().s[20]++;

              if (entry.toLowerCase().endsWith('app-error')) {
                /* istanbul ignore next */
                cov_23gl0j01kx().b[1][0]++;
                cov_23gl0j01kx().s[21]++;
                errorHeader = httpErrorResponse.headers.get(entry);
              } else
              /* istanbul ignore next */
              {
                cov_23gl0j01kx().b[1][1]++;
              }
            });

            /* istanbul ignore next */
            cov_23gl0j01kx().s[22]++;

            if (errorHeader) {
              /* istanbul ignore next */
              cov_23gl0j01kx().b[2][0]++;
              cov_23gl0j01kx().s[23]++;
              this.addErrorAlert(errorHeader);
            } else {
              /* istanbul ignore next */
              cov_23gl0j01kx().b[2][1]++;
              cov_23gl0j01kx().s[24]++;

              if (
              /* istanbul ignore next */
              (cov_23gl0j01kx().b[4][0]++, httpErrorResponse.error !== '') &&
              /* istanbul ignore next */
              (cov_23gl0j01kx().b[4][1]++, httpErrorResponse.error.fieldErrors)) {
                /* istanbul ignore next */
                cov_23gl0j01kx().b[3][0]++;
                const fieldErrors =
                /* istanbul ignore next */
                (cov_23gl0j01kx().s[25]++, httpErrorResponse.error.fieldErrors);

                /* istanbul ignore next */
                cov_23gl0j01kx().s[26]++;

                for (const fieldError of fieldErrors) {
                  /* istanbul ignore next */
                  cov_23gl0j01kx().s[27]++;

                  if (['Min', 'Max', 'DecimalMin', 'DecimalMax'].includes(fieldError.message)) {
                    /* istanbul ignore next */
                    cov_23gl0j01kx().b[5][0]++;
                    cov_23gl0j01kx().s[28]++;
                    fieldError.message = 'Size';
                  } else
                  /* istanbul ignore next */
                  {
                    cov_23gl0j01kx().b[5][1]++;
                  } // convert 'something[14].other[4].id' to 'something[].other[].id' so translations can be written to it


                  const convertedField =
                  /* istanbul ignore next */
                  (cov_23gl0j01kx().s[29]++, fieldError.field.replace(/\[\d*\]/g, '[]'));
                  const fieldName =
                  /* istanbul ignore next */
                  (cov_23gl0j01kx().s[30]++, convertedField.charAt(0).toUpperCase() + convertedField.slice(1));

                  /* istanbul ignore next */
                  cov_23gl0j01kx().s[31]++;
                  this.addErrorAlert('Error on field "' + fieldName + '"');
                }
              } else {
                /* istanbul ignore next */
                cov_23gl0j01kx().b[3][1]++;
                cov_23gl0j01kx().s[32]++;

                if (
                /* istanbul ignore next */
                (cov_23gl0j01kx().b[7][0]++, httpErrorResponse.error !== '') &&
                /* istanbul ignore next */
                (cov_23gl0j01kx().b[7][1]++, httpErrorResponse.error.message)) {
                  /* istanbul ignore next */
                  cov_23gl0j01kx().b[6][0]++;
                  cov_23gl0j01kx().s[33]++;
                  this.addErrorAlert(httpErrorResponse.error.message);
                } else {
                  /* istanbul ignore next */
                  cov_23gl0j01kx().b[6][1]++;
                  cov_23gl0j01kx().s[34]++;
                  this.addErrorAlert(httpErrorResponse.error);
                }
              }
            }

            /* istanbul ignore next */
            cov_23gl0j01kx().s[35]++;
            break;
          }

        case 404:
          /* istanbul ignore next */
          cov_23gl0j01kx().b[0][2]++;
          cov_23gl0j01kx().s[36]++;
          this.addErrorAlert('Not found');

          /* istanbul ignore next */
          cov_23gl0j01kx().s[37]++;
          break;

        default:
          /* istanbul ignore next */
          cov_23gl0j01kx().b[0][3]++;
          cov_23gl0j01kx().s[38]++;

          if (
          /* istanbul ignore next */
          (cov_23gl0j01kx().b[9][0]++, httpErrorResponse.error !== '') &&
          /* istanbul ignore next */
          (cov_23gl0j01kx().b[9][1]++, httpErrorResponse.error.message)) {
            /* istanbul ignore next */
            cov_23gl0j01kx().b[8][0]++;
            cov_23gl0j01kx().s[39]++;
            this.addErrorAlert(httpErrorResponse.error.message);
          } else {
            /* istanbul ignore next */
            cov_23gl0j01kx().b[8][1]++;
            cov_23gl0j01kx().s[40]++;
            this.addErrorAlert(httpErrorResponse.error);
          }

      }
    });
  }

  setClasses(alert) {
    /* istanbul ignore next */
    cov_23gl0j01kx().f[4]++;
    const classes =
    /* istanbul ignore next */
    (cov_23gl0j01kx().s[41]++, {
      'jhi-toast': Boolean(alert.toast)
    });

    /* istanbul ignore next */
    cov_23gl0j01kx().s[42]++;

    if (alert.position) {
      /* istanbul ignore next */
      cov_23gl0j01kx().b[10][0]++;
      cov_23gl0j01kx().s[43]++;
      return Object.assign(Object.assign({}, classes), {
        [alert.position]: true
      });
    } else
    /* istanbul ignore next */
    {
      cov_23gl0j01kx().b[10][1]++;
    }

    cov_23gl0j01kx().s[44]++;
    return classes;
  }

  ngOnDestroy() {
    /* istanbul ignore next */
    cov_23gl0j01kx().f[5]++;
    cov_23gl0j01kx().s[45]++;

    if (this.errorListener) {
      /* istanbul ignore next */
      cov_23gl0j01kx().b[11][0]++;
      cov_23gl0j01kx().s[46]++;
      this.eventManager.destroy(this.errorListener);
    } else
    /* istanbul ignore next */
    {
      cov_23gl0j01kx().b[11][1]++;
    }

    cov_23gl0j01kx().s[47]++;

    if (this.httpErrorListener) {
      /* istanbul ignore next */
      cov_23gl0j01kx().b[12][0]++;
      cov_23gl0j01kx().s[48]++;
      this.eventManager.destroy(this.httpErrorListener);
    } else
    /* istanbul ignore next */
    {
      cov_23gl0j01kx().b[12][1]++;
    }
  }

  addErrorAlert(message) {
    /* istanbul ignore next */
    cov_23gl0j01kx().f[6]++;
    const newAlert =
    /* istanbul ignore next */
    (cov_23gl0j01kx().s[49]++, {
      type: 'danger',
      msg: message,
      timeout: 5000,
      toast: this.alertService.isToast(),
      scoped: true
    });

    /* istanbul ignore next */
    cov_23gl0j01kx().s[50]++;
    this.alerts.push(this.alertService.addAlert(newAlert, this.alerts));
  }

  close(alert) {
    /* istanbul ignore next */
    cov_23gl0j01kx().f[7]++;

    var _a; // NOSONAR can be removed after https://github.com/SonarSource/SonarJS/issues/1930 is resolved


    /* istanbul ignore next */
    cov_23gl0j01kx().s[51]++;

    /* istanbul ignore next */
    (cov_23gl0j01kx().b[14][0]++, (_a = alert.close) === null) ||
    /* istanbul ignore next */
    (cov_23gl0j01kx().b[14][1]++, _a === void 0) ?
    /* istanbul ignore next */
    (cov_23gl0j01kx().b[13][0]++, void 0) :
    /* istanbul ignore next */
    (cov_23gl0j01kx().b[13][1]++, _a.call(alert, this.alerts)); // NOSONAR
  }

};

/* istanbul ignore next */
cov_23gl0j01kx().s[52]++;
AlertErrorComponent = tslib_1.__decorate([core_1.Component({
  selector: 'jhi-alert-error',
  template: ` <div class="alerts" role="alert">
    <div *ngFor="let alert of alerts" [ngClass]="setClasses(alert)">
      <ngb-alert *ngIf="alert && alert.type && alert.msg" [type]="alert.type" (close)="close(alert)">
        <pre [innerHTML]="alert.msg"></pre>
      </ngb-alert>
    </div>
  </div>`
}), tslib_1.__metadata("design:paramtypes", [ng_jhipster_1.JhiAlertService, ng_jhipster_1.JhiEventManager])], AlertErrorComponent);

/* istanbul ignore next */
cov_23gl0j01kx().s[53]++;
exports.AlertErrorComponent = AlertErrorComponent;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,