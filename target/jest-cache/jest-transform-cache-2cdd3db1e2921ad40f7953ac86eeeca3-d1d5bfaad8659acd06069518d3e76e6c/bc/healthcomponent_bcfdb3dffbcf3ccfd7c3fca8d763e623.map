{"version":3,"sources":["C:\\Users\\Dass\\Desktop\\Master1_YNOV\\DevLogiciel\\biblio\\src\\main\\webapp\\app\\admin\\health\\health.component.ts"],"names":[],"mappingskBG;;;;;;;;;;;;;;;;;;;;AAlBH,MAAA,MAAA;AAAA;AAAA,0BAAA,OAAA,CAAA,eAAA,CAAA,CAAA;AAEA,MAAA,cAAA;AAAA;AAAA,0BAAA,OAAA,CAAA,4BAAA,CAAA,CAAA;AAEA,MAAA,gBAAA;AAAA;AAAA,0BAAA,OAAA,CAAA,kBAAA,CAAA,CAAA;AACA,MAAA,wBAAA;AAAA;AAAA,0BAAA,OAAA,CAAA,0BAAA,CAAA,CAAA;;;;AAMA,IAAa,eAAe,GAA5B,MAAa,eAAb,CAA4B;AAG1B,EAAA,WAAA,CAAoB,YAApB,EAAoD,aAApD,EAAgF;AAAA;AAAA;AAAA;AAA5D,SAAA,YAAA,GAAA,YAAA;;AAA4D;AAAA;AAA5B,SAAA,aAAA,GAAA,aAAA;AAAgC;;AAEpF,EAAA,QAAQ,GAAA;AAAA;AAAA;AAAA;AACN,SAAK,OAAL;AACD;;AAED,EAAA,aAAa,CAAC,WAAD,EAA0B;AAAA;AAAA;AAAA;;AACrC,QAAI,WAAW,KAAK,IAApB,EAA0B;AAAA;AAAA;AAAA;AACxB,aAAO,eAAP;AACD,KAFD,MAEO;AAAA;AAAA;AAAA;AACL,aAAO,cAAP;AACD;AACF;;AAED,EAAA,OAAO,GAAA;AAAA;AAAA;AAAA;AACL,SAAK,aAAL,CAAmB,WAAnB,GAAiC,SAAjC,CACE,MAAM,IAAK;AAAA;AAAA;AAAA;AAAA,kBAAK,MAAL,GAAc,MAAd;AAAoB,KADjC,EAEG,KAAD,IAA6B;AAAA;AAAA;AAAA;;AAC3B,UAAI,KAAK,CAAC,MAAN,KAAiB,GAArB,EAA0B;AAAA;AAAA;AAAA;AACxB,aAAK,MAAL,GAAc,KAAK,CAAC,KAApB;AACD,OAFD;AAAA;AAAA;AAAA;AAAA;AAGD,KANH;AAQD;;AAED,EAAA,UAAU,CAAC,MAAD,EAAiD;AAAA;AAAA;AACzD,UAAM,QAAQ;AAAA;AAAA,+BAAG,KAAK,YAAL,CAAkB,IAAlB,CAAuB,wBAAA,CAAA,oBAAvB,CAAH,CAAd;;AADyD;AAAA;AAEzD,IAAA,QAAQ,CAAC,iBAAT,CAA2B,MAA3B,GAAoC,MAApC;AACD;;AA/ByB,CAA5B;;;;AAAa,eAAe,GAAA,OAAA,CAAA,UAAA,CAAA,CAJ3B,MAAA,CAAA,SAAA,CAAU;AACT,EAAA,QAAQ,EAAE,YADD;AAET,EAAA,QAAA,EAAA,OAAA,CAAa,yBAAb;AAFS,CAAV,CAI2B,E,yCAGQ,cAAA,CAAA,Q,EAAiC,gBAAA,CAAA,a,EAHzC,CAAA,EAAf,eAAe,CAAf;;;;AAAA,OAAA,CAAA,eAAA,GAAA,eAAA","sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { HttpErrorResponse } from '@angular/common/http';\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\n\r\nimport { HealthService, HealthStatus, Health, HealthKey, HealthDetails } from './health.service';\r\nimport { HealthModalComponent } from './health-modal.component';\r\n\r\n@Component({\r\n  selector: 'jhi-health',\r\n  templateUrl: './health.component.html',\r\n})\r\nexport class HealthComponent implements OnInit {\r\n  health?: Health;\r\n\r\n  constructor(private modalService: NgbModal, private healthService: HealthService) {}\r\n\r\n  ngOnInit(): void {\r\n    this.refresh();\r\n  }\r\n\r\n  getBadgeClass(statusState: HealthStatus): string {\r\n    if (statusState === 'UP') {\r\n      return 'badge-success';\r\n    } else {\r\n      return 'badge-danger';\r\n    }\r\n  }\r\n\r\n  refresh(): void {\r\n    this.healthService.checkHealth().subscribe(\r\n      health => (this.health = health),\r\n      (error: HttpErrorResponse) => {\r\n        if (error.status === 503) {\r\n          this.health = error.error;\r\n        }\r\n      }\r\n    );\r\n  }\r\n\r\n  showHealth(health: { key: HealthKey; value: HealthDetails }): void {\r\n    const modalRef = this.modalService.open(HealthModalComponent);\r\n    modalRef.componentInstance.health = health;\r\n  }\r\n}\r\n"]}