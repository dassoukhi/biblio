695afdeae1f4b0498f8c197fca6a90a0
"use strict";

/* istanbul ignore next */
function cov_10lplm3s90() {
  var path = "C:\\Users\\Dass\\Desktop\\Master1_YNOV\\DevLogiciel\\biblio\\src\\main\\webapp\\app\\admin\\health\\health.component.ts";
  var hash = "8db5da640aaaf11dffe1886703300b73c52929c9";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\Dass\\Desktop\\Master1_YNOV\\DevLogiciel\\biblio\\src\\main\\webapp\\app\\admin\\health\\health.component.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 2,
          column: 62
        }
      },
      "1": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 3,
          column: 33
        }
      },
      "2": {
        start: {
          line: 4,
          column: 16
        },
        end: {
          line: 4,
          column: 32
        }
      },
      "3": {
        start: {
          line: 5,
          column: 15
        },
        end: {
          line: 5,
          column: 39
        }
      },
      "4": {
        start: {
          line: 6,
          column: 23
        },
        end: {
          line: 6,
          column: 60
        }
      },
      "5": {
        start: {
          line: 7,
          column: 25
        },
        end: {
          line: 7,
          column: 52
        }
      },
      "6": {
        start: {
          line: 8,
          column: 33
        },
        end: {
          line: 8,
          column: 68
        }
      },
      "7": {
        start: {
          line: 9,
          column: 22
        },
        end: {
          line: 36,
          column: 1
        }
      },
      "8": {
        start: {
          line: 11,
          column: 8
        },
        end: {
          line: 11,
          column: 41
        }
      },
      "9": {
        start: {
          line: 12,
          column: 8
        },
        end: {
          line: 12,
          column: 43
        }
      },
      "10": {
        start: {
          line: 15,
          column: 8
        },
        end: {
          line: 15,
          column: 23
        }
      },
      "11": {
        start: {
          line: 18,
          column: 8
        },
        end: {
          line: 23,
          column: 9
        }
      },
      "12": {
        start: {
          line: 19,
          column: 12
        },
        end: {
          line: 19,
          column: 35
        }
      },
      "13": {
        start: {
          line: 22,
          column: 12
        },
        end: {
          line: 22,
          column: 34
        }
      },
      "14": {
        start: {
          line: 26,
          column: 8
        },
        end: {
          line: 30,
          column: 11
        }
      },
      "15": {
        start: {
          line: 26,
          column: 62
        },
        end: {
          line: 26,
          column: 82
        }
      },
      "16": {
        start: {
          line: 27,
          column: 12
        },
        end: {
          line: 29,
          column: 13
        }
      },
      "17": {
        start: {
          line: 28,
          column: 16
        },
        end: {
          line: 28,
          column: 42
        }
      },
      "18": {
        start: {
          line: 33,
          column: 25
        },
        end: {
          line: 33,
          column: 94
        }
      },
      "19": {
        start: {
          line: 34,
          column: 8
        },
        end: {
          line: 34,
          column: 51
        }
      },
      "20": {
        start: {
          line: 37,
          column: 0
        },
        end: {
          line: 43,
          column: 20
        }
      },
      "21": {
        start: {
          line: 44,
          column: 0
        },
        end: {
          line: 44,
          column: 42
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 10,
            column: 4
          },
          end: {
            line: 10,
            column: 5
          }
        },
        loc: {
          start: {
            line: 10,
            column: 45
          },
          end: {
            line: 13,
            column: 5
          }
        },
        line: 10
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 14,
            column: 4
          },
          end: {
            line: 14,
            column: 5
          }
        },
        loc: {
          start: {
            line: 14,
            column: 15
          },
          end: {
            line: 16,
            column: 5
          }
        },
        line: 14
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 17,
            column: 4
          },
          end: {
            line: 17,
            column: 5
          }
        },
        loc: {
          start: {
            line: 17,
            column: 31
          },
          end: {
            line: 24,
            column: 5
          }
        },
        line: 17
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 25,
            column: 4
          },
          end: {
            line: 25,
            column: 5
          }
        },
        loc: {
          start: {
            line: 25,
            column: 14
          },
          end: {
            line: 31,
            column: 5
          }
        },
        line: 25
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 26,
            column: 51
          },
          end: {
            line: 26,
            column: 52
          }
        },
        loc: {
          start: {
            line: 26,
            column: 62
          },
          end: {
            line: 26,
            column: 82
          }
        },
        line: 26
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 26,
            column: 85
          },
          end: {
            line: 26,
            column: 86
          }
        },
        loc: {
          start: {
            line: 26,
            column: 96
          },
          end: {
            line: 30,
            column: 9
          }
        },
        line: 26
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 32,
            column: 4
          },
          end: {
            line: 32,
            column: 5
          }
        },
        loc: {
          start: {
            line: 32,
            column: 23
          },
          end: {
            line: 35,
            column: 5
          }
        },
        line: 32
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 18,
            column: 8
          },
          end: {
            line: 23,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 18,
            column: 8
          },
          end: {
            line: 23,
            column: 9
          }
        }, {
          start: {
            line: 18,
            column: 8
          },
          end: {
            line: 23,
            column: 9
          }
        }],
        line: 18
      },
      "1": {
        loc: {
          start: {
            line: 27,
            column: 12
          },
          end: {
            line: 29,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 27,
            column: 12
          },
          end: {
            line: 29,
            column: 13
          }
        }, {
          start: {
            line: 27,
            column: 12
          },
          end: {
            line: 29,
            column: 13
          }
        }],
        line: 27
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0]
    },
    inputSourceMap: {
      file: "C:\\Users\\Dass\\Desktop\\Master1_YNOV\\DevLogiciel\\biblio\\src\\main\\webapp\\app\\admin\\health\\health.component.ts",
      mappings: ";;;;AAAA,wCAAkD;AAElD,6DAAsD;AAEtD,qDAAiG;AACjG,qEAAgE;AAMhE,IAAa,eAAe,GAA5B,MAAa,eAAe;IAG1B,YAAoB,YAAsB,EAAU,aAA4B;QAA5D,iBAAY,GAAZ,YAAY,CAAU;QAAU,kBAAa,GAAb,aAAa,CAAe;IAAG,CAAC;IAEpF,QAAQ;QACN,IAAI,CAAC,OAAO,EAAE,CAAC;IACjB,CAAC;IAED,aAAa,CAAC,WAAyB;QACrC,IAAI,WAAW,KAAK,IAAI,EAAE;YACxB,OAAO,eAAe,CAAC;SACxB;aAAM;YACL,OAAO,cAAc,CAAC;SACvB;IACH,CAAC;IAED,OAAO;QACL,IAAI,CAAC,aAAa,CAAC,WAAW,EAAE,CAAC,SAAS,CACxC,MAAM,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC,EAChC,CAAC,KAAwB,EAAE,EAAE;YAC3B,IAAI,KAAK,CAAC,MAAM,KAAK,GAAG,EAAE;gBACxB,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC,KAAK,CAAC;aAC3B;QACH,CAAC,CACF,CAAC;IACJ,CAAC;IAED,UAAU,CAAC,MAAgD;QACzD,MAAM,QAAQ,GAAG,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,6CAAoB,CAAC,CAAC;QAC9D,QAAQ,CAAC,iBAAiB,CAAC,MAAM,GAAG,MAAM,CAAC;IAC7C,CAAC;CACF,CAAA;AAhCY,eAAe;IAJ3B,gBAAS,CAAC;QACT,QAAQ,EAAE,YAAY;QACtB,kBAAa,yBAAyB,CAAA;KACvC,CAAC;6CAIkC,uBAAQ,EAAyB,8BAAa;GAHrE,eAAe,CAgC3B;AAhCY,0CAAe",
      names: [],
      sources: ["C:\\Users\\Dass\\Desktop\\Master1_YNOV\\DevLogiciel\\biblio\\src\\main\\webapp\\app\\admin\\health\\health.component.ts"],
      sourcesContent: ["import { Component, OnInit } from '@angular/core';\r\nimport { HttpErrorResponse } from '@angular/common/http';\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\n\r\nimport { HealthService, HealthStatus, Health, HealthKey, HealthDetails } from './health.service';\r\nimport { HealthModalComponent } from './health-modal.component';\r\n\r\n@Component({\r\n  selector: 'jhi-health',\r\n  templateUrl: './health.component.html',\r\n})\r\nexport class HealthComponent implements OnInit {\r\n  health?: Health;\r\n\r\n  constructor(private modalService: NgbModal, private healthService: HealthService) {}\r\n\r\n  ngOnInit(): void {\r\n    this.refresh();\r\n  }\r\n\r\n  getBadgeClass(statusState: HealthStatus): string {\r\n    if (statusState === 'UP') {\r\n      return 'badge-success';\r\n    } else {\r\n      return 'badge-danger';\r\n    }\r\n  }\r\n\r\n  refresh(): void {\r\n    this.healthService.checkHealth().subscribe(\r\n      health => (this.health = health),\r\n      (error: HttpErrorResponse) => {\r\n        if (error.status === 503) {\r\n          this.health = error.error;\r\n        }\r\n      }\r\n    );\r\n  }\r\n\r\n  showHealth(health: { key: HealthKey; value: HealthDetails }): void {\r\n    const modalRef = this.modalService.open(HealthModalComponent);\r\n    modalRef.componentInstance.health = health;\r\n  }\r\n}\r\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "8db5da640aaaf11dffe1886703300b73c52929c9"
  };
  var coverage = global[gcv] || (global[gcv] = {});

  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }

  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_10lplm3s90 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}

cov_10lplm3s90();
cov_10lplm3s90().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});

/* istanbul ignore next */
cov_10lplm3s90().s[1]++;
exports.HealthComponent = void 0;
const tslib_1 =
/* istanbul ignore next */
(cov_10lplm3s90().s[2]++, require("tslib"));
const core_1 =
/* istanbul ignore next */
(cov_10lplm3s90().s[3]++, require("@angular/core"));
const ng_bootstrap_1 =
/* istanbul ignore next */
(cov_10lplm3s90().s[4]++, require("@ng-bootstrap/ng-bootstrap"));
const health_service_1 =
/* istanbul ignore next */
(cov_10lplm3s90().s[5]++, require("./health.service"));
const health_modal_component_1 =
/* istanbul ignore next */
(cov_10lplm3s90().s[6]++, require("./health-modal.component"));

/* istanbul ignore next */
cov_10lplm3s90().s[7]++;
let HealthComponent = class HealthComponent {
  constructor(modalService, healthService) {
    /* istanbul ignore next */
    cov_10lplm3s90().f[0]++;
    cov_10lplm3s90().s[8]++;
    this.modalService = modalService;

    /* istanbul ignore next */
    cov_10lplm3s90().s[9]++;
    this.healthService = healthService;
  }

  ngOnInit() {
    /* istanbul ignore next */
    cov_10lplm3s90().f[1]++;
    cov_10lplm3s90().s[10]++;
    this.refresh();
  }

  getBadgeClass(statusState) {
    /* istanbul ignore next */
    cov_10lplm3s90().f[2]++;
    cov_10lplm3s90().s[11]++;

    if (statusState === 'UP') {
      /* istanbul ignore next */
      cov_10lplm3s90().b[0][0]++;
      cov_10lplm3s90().s[12]++;
      return 'badge-success';
    } else {
      /* istanbul ignore next */
      cov_10lplm3s90().b[0][1]++;
      cov_10lplm3s90().s[13]++;
      return 'badge-danger';
    }
  }

  refresh() {
    /* istanbul ignore next */
    cov_10lplm3s90().f[3]++;
    cov_10lplm3s90().s[14]++;
    this.healthService.checkHealth().subscribe(health => {
      /* istanbul ignore next */
      cov_10lplm3s90().f[4]++;
      cov_10lplm3s90().s[15]++;
      return this.health = health;
    }, error => {
      /* istanbul ignore next */
      cov_10lplm3s90().f[5]++;
      cov_10lplm3s90().s[16]++;

      if (error.status === 503) {
        /* istanbul ignore next */
        cov_10lplm3s90().b[1][0]++;
        cov_10lplm3s90().s[17]++;
        this.health = error.error;
      } else
      /* istanbul ignore next */
      {
        cov_10lplm3s90().b[1][1]++;
      }
    });
  }

  showHealth(health) {
    /* istanbul ignore next */
    cov_10lplm3s90().f[6]++;
    const modalRef =
    /* istanbul ignore next */
    (cov_10lplm3s90().s[18]++, this.modalService.open(health_modal_component_1.HealthModalComponent));

    /* istanbul ignore next */
    cov_10lplm3s90().s[19]++;
    modalRef.componentInstance.health = health;
  }

};

/* istanbul ignore next */
cov_10lplm3s90().s[20]++;
HealthComponent = tslib_1.__decorate([core_1.Component({
  selector: 'jhi-health',
  template: require('./health.component.html')
}), tslib_1.__metadata("design:paramtypes", [ng_bootstrap_1.NgbModal, health_service_1.HealthService])], HealthComponent);

/* istanbul ignore next */
cov_10lplm3s90().s[21]++;
exports.HealthComponent = HealthComponent;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcRGFzc1xcRGVza3RvcFxcTWFzdGVyMV9ZTk9WXFxEZXZMb2dpY2llbFxcYmlibGlvXFxzcmNcXG1haW5cXHdlYmFwcFxcYXBwXFxhZG1pblxcaGVhbHRoXFxoZWFsdGguY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFrQkc7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBbEJILE1BQUEsTUFBQTtBQUFBO0FBQUEsMEJBQUEsT0FBQSxDQUFBLGVBQUEsQ0FBQSxDQUFBO0FBRUEsTUFBQSxjQUFBO0FBQUE7QUFBQSwwQkFBQSxPQUFBLENBQUEsNEJBQUEsQ0FBQSxDQUFBO0FBRUEsTUFBQSxnQkFBQTtBQUFBO0FBQUEsMEJBQUEsT0FBQSxDQUFBLGtCQUFBLENBQUEsQ0FBQTtBQUNBLE1BQUEsd0JBQUE7QUFBQTtBQUFBLDBCQUFBLE9BQUEsQ0FBQSwwQkFBQSxDQUFBLENBQUE7Ozs7QUFNQSxJQUFhLGVBQWUsR0FBNUIsTUFBYSxlQUFiLENBQTRCO0FBRzFCLEVBQUEsV0FBQSxDQUFvQixZQUFwQixFQUFvRCxhQUFwRCxFQUFnRjtBQUFBO0FBQUE7QUFBQTtBQUE1RCxTQUFBLFlBQUEsR0FBQSxZQUFBOztBQUE0RDtBQUFBO0FBQTVCLFNBQUEsYUFBQSxHQUFBLGFBQUE7QUFBZ0M7O0FBRXBGLEVBQUEsUUFBUSxHQUFBO0FBQUE7QUFBQTtBQUFBO0FBQ04sU0FBSyxPQUFMO0FBQ0Q7O0FBRUQsRUFBQSxhQUFhLENBQUMsV0FBRCxFQUEwQjtBQUFBO0FBQUE7QUFBQTs7QUFDckMsUUFBSSxXQUFXLEtBQUssSUFBcEIsRUFBMEI7QUFBQTtBQUFBO0FBQUE7QUFDeEIsYUFBTyxlQUFQO0FBQ0QsS0FGRCxNQUVPO0FBQUE7QUFBQTtBQUFBO0FBQ0wsYUFBTyxjQUFQO0FBQ0Q7QUFDRjs7QUFFRCxFQUFBLE9BQU8sR0FBQTtBQUFBO0FBQUE7QUFBQTtBQUNMLFNBQUssYUFBTCxDQUFtQixXQUFuQixHQUFpQyxTQUFqQyxDQUNFLE1BQU0sSUFBSztBQUFBO0FBQUE7QUFBQTtBQUFBLGtCQUFLLE1BQUwsR0FBYyxNQUFkO0FBQW9CLEtBRGpDLEVBRUcsS0FBRCxJQUE2QjtBQUFBO0FBQUE7QUFBQTs7QUFDM0IsVUFBSSxLQUFLLENBQUMsTUFBTixLQUFpQixHQUFyQixFQUEwQjtBQUFBO0FBQUE7QUFBQTtBQUN4QixhQUFLLE1BQUwsR0FBYyxLQUFLLENBQUMsS0FBcEI7QUFDRCxPQUZEO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFHRCxLQU5IO0FBUUQ7O0FBRUQsRUFBQSxVQUFVLENBQUMsTUFBRCxFQUFpRDtBQUFBO0FBQUE7QUFDekQsVUFBTSxRQUFRO0FBQUE7QUFBQSwrQkFBRyxLQUFLLFlBQUwsQ0FBa0IsSUFBbEIsQ0FBdUIsd0JBQUEsQ0FBQSxvQkFBdkIsQ0FBSCxDQUFkOztBQUR5RDtBQUFBO0FBRXpELElBQUEsUUFBUSxDQUFDLGlCQUFULENBQTJCLE1BQTNCLEdBQW9DLE1BQXBDO0FBQ0Q7O0FBL0J5QixDQUE1Qjs7OztBQUFhLGVBQWUsR0FBQSxPQUFBLENBQUEsVUFBQSxDQUFBLENBSjNCLE1BQUEsQ0FBQSxTQUFBLENBQVU7QUFDVCxFQUFBLFFBQVEsRUFBRSxZQUREO0FBRVQsRUFBQSxRQUFBLEVBQUEsT0FBQSxDQUFhLHlCQUFiO0FBRlMsQ0FBVixDQUkyQixFLHlDQUdRLGNBQUEsQ0FBQSxRLEVBQWlDLGdCQUFBLENBQUEsYSxFQUh6QyxDQUFBLEVBQWYsZUFBZSxDQUFmOzs7O0FBQUEsT0FBQSxDQUFBLGVBQUEsR0FBQSxlQUFBIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBPbkluaXQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuaW1wb3J0IHsgSHR0cEVycm9yUmVzcG9uc2UgfSBmcm9tICdAYW5ndWxhci9jb21tb24vaHR0cCc7XHJcbmltcG9ydCB7IE5nYk1vZGFsIH0gZnJvbSAnQG5nLWJvb3RzdHJhcC9uZy1ib290c3RyYXAnO1xyXG5cclxuaW1wb3J0IHsgSGVhbHRoU2VydmljZSwgSGVhbHRoU3RhdHVzLCBIZWFsdGgsIEhlYWx0aEtleSwgSGVhbHRoRGV0YWlscyB9IGZyb20gJy4vaGVhbHRoLnNlcnZpY2UnO1xyXG5pbXBvcnQgeyBIZWFsdGhNb2RhbENvbXBvbmVudCB9IGZyb20gJy4vaGVhbHRoLW1vZGFsLmNvbXBvbmVudCc7XHJcblxyXG5AQ29tcG9uZW50KHtcclxuICBzZWxlY3RvcjogJ2poaS1oZWFsdGgnLFxyXG4gIHRlbXBsYXRlVXJsOiAnLi9oZWFsdGguY29tcG9uZW50Lmh0bWwnLFxyXG59KVxyXG5leHBvcnQgY2xhc3MgSGVhbHRoQ29tcG9uZW50IGltcGxlbWVudHMgT25Jbml0IHtcclxuICBoZWFsdGg/OiBIZWFsdGg7XHJcblxyXG4gIGNvbnN0cnVjdG9yKHByaXZhdGUgbW9kYWxTZXJ2aWNlOiBOZ2JNb2RhbCwgcHJpdmF0ZSBoZWFsdGhTZXJ2aWNlOiBIZWFsdGhTZXJ2aWNlKSB7fVxyXG5cclxuICBuZ09uSW5pdCgpOiB2b2lkIHtcclxuICAgIHRoaXMucmVmcmVzaCgpO1xyXG4gIH1cclxuXHJcbiAgZ2V0QmFkZ2VDbGFzcyhzdGF0dXNTdGF0ZTogSGVhbHRoU3RhdHVzKTogc3RyaW5nIHtcclxuICAgIGlmIChzdGF0dXNTdGF0ZSA9PT0gJ1VQJykge1xyXG4gICAgICByZXR1cm4gJ2JhZGdlLXN1Y2Nlc3MnO1xyXG4gICAgfSBlbHNlIHtcclxuICAgICAgcmV0dXJuICdiYWRnZS1kYW5nZXInO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgcmVmcmVzaCgpOiB2b2lkIHtcclxuICAgIHRoaXMuaGVhbHRoU2VydmljZS5jaGVja0hlYWx0aCgpLnN1YnNjcmliZShcclxuICAgICAgaGVhbHRoID0+ICh0aGlzLmhlYWx0aCA9IGhlYWx0aCksXHJcbiAgICAgIChlcnJvcjogSHR0cEVycm9yUmVzcG9uc2UpID0+IHtcclxuICAgICAgICBpZiAoZXJyb3Iuc3RhdHVzID09PSA1MDMpIHtcclxuICAgICAgICAgIHRoaXMuaGVhbHRoID0gZXJyb3IuZXJyb3I7XHJcbiAgICAgICAgfVxyXG4gICAgICB9XHJcbiAgICApO1xyXG4gIH1cclxuXHJcbiAgc2hvd0hlYWx0aChoZWFsdGg6IHsga2V5OiBIZWFsdGhLZXk7IHZhbHVlOiBIZWFsdGhEZXRhaWxzIH0pOiB2b2lkIHtcclxuICAgIGNvbnN0IG1vZGFsUmVmID0gdGhpcy5tb2RhbFNlcnZpY2Uub3BlbihIZWFsdGhNb2RhbENvbXBvbmVudCk7XHJcbiAgICBtb2RhbFJlZi5jb21wb25lbnRJbnN0YW5jZS5oZWFsdGggPSBoZWFsdGg7XHJcbiAgfVxyXG59XHJcbiJdfQ==