{"file":"C:\\Users\\Dass\\Desktop\\Master1_YNOV\\DevLogiciel\\biblio\\src\\test\\javascript\\spec\\app\\entities\\exemplaire\\exemplaire.component.spec.ts","mappings":";;AAAA,mDAAkE;AAClE,+BAA0B;AAC1B,+CAAiE;AAEjE,sDAAwD;AACxD,uFAAmF;AACnF,mFAA+E;AAC/E,wEAA+D;AAE/D,QAAQ,CAAC,iBAAiB,EAAE,GAAG,EAAE;IAC/B,QAAQ,CAAC,iCAAiC,EAAE,GAAG,EAAE;QAC/C,IAAI,IAAyB,CAAC;QAC9B,IAAI,OAA8C,CAAC;QACnD,IAAI,OAA0B,CAAC;QAE/B,UAAU,CAAC,GAAG,EAAE;YACd,iBAAO,CAAC,sBAAsB,CAAC;gBAC7B,OAAO,EAAE,CAAC,8BAAgB,CAAC;gBAC3B,YAAY,EAAE,CAAC,0CAAmB,CAAC;aACpC,CAAC;iBACC,gBAAgB,CAAC,0CAAmB,EAAE,EAAE,CAAC;iBACzC,iBAAiB,EAAE,CAAC;YAEvB,OAAO,GAAG,iBAAO,CAAC,eAAe,CAAC,0CAAmB,CAAC,CAAC;YACvD,IAAI,GAAG,OAAO,CAAC,iBAAiB,CAAC;YACjC,OAAO,GAAG,OAAO,CAAC,YAAY,CAAC,QAAQ,CAAC,GAAG,CAAC,sCAAiB,CAAC,CAAC;QACjE,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,8BAA8B,EAAE,GAAG,EAAE;YACtC,QAAQ;YACR,MAAM,OAAO,GAAG,IAAI,kBAAW,EAAE,CAAC,MAAM,CAAC,MAAM,EAAE,WAAW,CAAC,CAAC;YAC9D,KAAK,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC,GAAG,CAAC,WAAW,CACrC,SAAE,CACA,IAAI,mBAAY,CAAC;gBACf,IAAI,EAAE,CAAC,IAAI,6BAAU,CAAC,GAAG,CAAC,CAAC;gBAC3B,OAAO;aACR,CAAC,CACH,CACF,CAAC;YAEF,OAAO;YACP,IAAI,CAAC,QAAQ,EAAE,CAAC;YAEhB,OAAO;YACP,MAAM,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,gBAAgB,EAAE,CAAC;YACzC,MAAM,CAAC,IAAI,CAAC,WAAW,IAAI,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,OAAO,CAAC,gBAAgB,CAAC,EAAE,EAAE,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC;QACjG,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","names":[],"sources":["C:\\Users\\Dass\\Desktop\\Master1_YNOV\\DevLogiciel\\biblio\\src\\test\\javascript\\spec\\app\\entities\\exemplaire\\exemplaire.component.spec.ts"],"sourcesContent":["import { ComponentFixture, TestBed } from '@angular/core/testing';\r\nimport { of } from 'rxjs';\r\nimport { HttpHeaders, HttpResponse } from '@angular/common/http';\r\n\r\nimport { BiblioTestModule } from '../../../test.module';\r\nimport { ExemplaireComponent } from 'app/entities/exemplaire/exemplaire.component';\r\nimport { ExemplaireService } from 'app/entities/exemplaire/exemplaire.service';\r\nimport { Exemplaire } from 'app/shared/model/exemplaire.model';\r\n\r\ndescribe('Component Tests', () => {\r\n  describe('Exemplaire Management Component', () => {\r\n    let comp: ExemplaireComponent;\r\n    let fixture: ComponentFixture<ExemplaireComponent>;\r\n    let service: ExemplaireService;\r\n\r\n    beforeEach(() => {\r\n      TestBed.configureTestingModule({\r\n        imports: [BiblioTestModule],\r\n        declarations: [ExemplaireComponent],\r\n      })\r\n        .overrideTemplate(ExemplaireComponent, '')\r\n        .compileComponents();\r\n\r\n      fixture = TestBed.createComponent(ExemplaireComponent);\r\n      comp = fixture.componentInstance;\r\n      service = fixture.debugElement.injector.get(ExemplaireService);\r\n    });\r\n\r\n    it('Should call load all on init', () => {\r\n      // GIVEN\r\n      const headers = new HttpHeaders().append('link', 'link;link');\r\n      spyOn(service, 'query').and.returnValue(\r\n        of(\r\n          new HttpResponse({\r\n            body: [new Exemplaire(123)],\r\n            headers,\r\n          })\r\n        )\r\n      );\r\n\r\n      // WHEN\r\n      comp.ngOnInit();\r\n\r\n      // THEN\r\n      expect(service.query).toHaveBeenCalled();\r\n      expect(comp.exemplaires && comp.exemplaires[0]).toEqual(jasmine.objectContaining({ id: 123 }));\r\n    });\r\n  });\r\n});\r\n"],"version":3}