{"file":"C:\\Users\\Dass\\Desktop\\Master1_YNOV\\DevLogiciel\\biblio\\src\\test\\javascript\\spec\\app\\shared\\alert\\alert-error.component.spec.ts","mappings":"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","names":[],"sources":["C:\\Users\\Dass\\Desktop\\Master1_YNOV\\DevLogiciel\\biblio\\src\\test\\javascript\\spec\\app\\shared\\alert\\alert-error.component.spec.ts"],"sourcesContent":["import { ComponentFixture, TestBed, async } from '@angular/core/testing';\r\nimport { HttpErrorResponse, HttpHeaders } from '@angular/common/http';\r\nimport { JhiAlertService, JhiEventManager } from 'ng-jhipster';\r\n\r\nimport { BiblioTestModule } from '../../../test.module';\r\nimport { AlertErrorComponent } from 'app/shared/alert/alert-error.component';\r\nimport { MockAlertService } from '../../../helpers/mock-alert.service';\r\n\r\ndescribe('Component Tests', () => {\r\n  describe('Alert Error Component', () => {\r\n    let comp: AlertErrorComponent;\r\n    let fixture: ComponentFixture<AlertErrorComponent>;\r\n    let eventManager: JhiEventManager;\r\n\r\n    beforeEach(async(() => {\r\n      TestBed.configureTestingModule({\r\n        imports: [BiblioTestModule],\r\n        declarations: [AlertErrorComponent],\r\n        providers: [\r\n          JhiEventManager,\r\n          {\r\n            provide: JhiAlertService,\r\n            useClass: MockAlertService,\r\n          },\r\n        ],\r\n      })\r\n        .overrideTemplate(AlertErrorComponent, '')\r\n        .compileComponents();\r\n    }));\r\n\r\n    beforeEach(() => {\r\n      fixture = TestBed.createComponent(AlertErrorComponent);\r\n      comp = fixture.componentInstance;\r\n      eventManager = fixture.debugElement.injector.get(JhiEventManager);\r\n    });\r\n\r\n    describe('Error Handling', () => {\r\n      it('Should display an alert on status 0', () => {\r\n        // GIVEN\r\n        eventManager.broadcast({ name: 'biblioApp.httpError', content: { status: 0 } });\r\n        // THEN\r\n        expect(comp.alerts.length).toBe(1);\r\n        expect(comp.alerts[0].msg).toBe('Server not reachable');\r\n      });\r\n\r\n      it('Should display an alert on status 404', () => {\r\n        // GIVEN\r\n        eventManager.broadcast({ name: 'biblioApp.httpError', content: { status: 404 } });\r\n        // THEN\r\n        expect(comp.alerts.length).toBe(1);\r\n        expect(comp.alerts[0].msg).toBe('Not found');\r\n      });\r\n\r\n      it('Should display an alert on generic error', () => {\r\n        // GIVEN\r\n        eventManager.broadcast({ name: 'biblioApp.httpError', content: { error: { message: 'Error Message' } } });\r\n        eventManager.broadcast({ name: 'biblioApp.httpError', content: { error: 'Second Error Message' } });\r\n        // THEN\r\n        expect(comp.alerts.length).toBe(2);\r\n        expect(comp.alerts[0].msg).toBe('Error Message');\r\n        expect(comp.alerts[1].msg).toBe('Second Error Message');\r\n      });\r\n\r\n      it('Should display an alert on status 400 for generic error', () => {\r\n        // GIVEN\r\n        const response = new HttpErrorResponse({\r\n          url: 'http://localhost:8080/api/foos',\r\n          headers: new HttpHeaders(),\r\n          status: 400,\r\n          statusText: 'Bad Request',\r\n          error: {\r\n            type: 'https://www.jhipster.tech/problem/constraint-violation',\r\n            title: 'Bad Request',\r\n            status: 400,\r\n            path: '/api/foos',\r\n            message: 'error.validation',\r\n          },\r\n        });\r\n        eventManager.broadcast({ name: 'biblioApp.httpError', content: response });\r\n        // THEN\r\n        expect(comp.alerts.length).toBe(1);\r\n        expect(comp.alerts[0].msg).toBe('error.validation');\r\n      });\r\n\r\n      it('Should display an alert on status 400 for generic error without message', () => {\r\n        // GIVEN\r\n        const response = new HttpErrorResponse({\r\n          url: 'http://localhost:8080/api/foos',\r\n          headers: new HttpHeaders(),\r\n          status: 400,\r\n          error: 'Bad Request',\r\n        });\r\n        eventManager.broadcast({ name: 'biblioApp.httpError', content: response });\r\n        // THEN\r\n        expect(comp.alerts.length).toBe(1);\r\n        expect(comp.alerts[0].msg).toBe('Bad Request');\r\n      });\r\n\r\n      it('Should display an alert on status 400 for invalid parameters', () => {\r\n        // GIVEN\r\n        const response = new HttpErrorResponse({\r\n          url: 'http://localhost:8080/api/foos',\r\n          headers: new HttpHeaders(),\r\n          status: 400,\r\n          statusText: 'Bad Request',\r\n          error: {\r\n            type: 'https://www.jhipster.tech/problem/constraint-violation',\r\n            title: 'Method argument not valid',\r\n            status: 400,\r\n            path: '/api/foos',\r\n            message: 'error.validation',\r\n            fieldErrors: [{ objectName: 'foo', field: 'minField', message: 'Min' }],\r\n          },\r\n        });\r\n        eventManager.broadcast({ name: 'biblioApp.httpError', content: response });\r\n        // THEN\r\n        expect(comp.alerts.length).toBe(1);\r\n        expect(comp.alerts[0].msg).toBe('Error on field \"MinField\"');\r\n      });\r\n\r\n      it('Should display an alert on status 400 for error headers', () => {\r\n        // GIVEN\r\n        const response = new HttpErrorResponse({\r\n          url: 'http://localhost:8080/api/foos',\r\n          headers: new HttpHeaders().append('app-error', 'Error Message').append('app-params', 'foo'),\r\n          status: 400,\r\n          statusText: 'Bad Request',\r\n          error: {\r\n            status: 400,\r\n            message: 'error.validation',\r\n          },\r\n        });\r\n        eventManager.broadcast({ name: 'biblioApp.httpError', content: response });\r\n        // THEN\r\n        expect(comp.alerts.length).toBe(1);\r\n        expect(comp.alerts[0].msg).toBe('Error Message');\r\n      });\r\n    });\r\n  });\r\n});\r\n"],"version":3}